{
  "hash": "99c2f1d2755865548a101094492c0498",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"In Class exercise 4\"\nauthor: \"Brian Lim\"\ndate: \"September 9, 2024\"\ndate-modified: \"last-modified\"\ncategories:\n  - Analysis\n  - R\n  - sf\n  - tidyverse\nformat: html\neditor: visual\nexecute: \n  eval: true\n  echo: true\n  warning: false\n  freeze: true\n  cache: true\n---\n\n\n## **4.0 Overview**\n\nA spatio-temporal point process (also called space-time or spatial-temporal point process) is a random collection of points, where each point represents the time and location of an event. Examples of events include incidence of disease, sightings or births of a species, or the occurrences of fires, earthquakes, lightning strikes, tsunamis, or volcanic eruptions.\n\nThe analysis of spatio-temporal point patterns is becoming increasingly necessary, given the rapid emergence of geographically and temporally indexed data in a wide range of fields. Several spatio-temporal point patterns analysis methods have been introduced and implemented in R in the last ten years. This chapter shows how various R packages can be combined to run a set of spatio-temporal point pattern analyses in a guided and intuitive way. A real world forest fire events in Kepulauan Bangka Belitung, Indonesia from 1st January 2023 to 31st December 2023 is used to illustrate the methods, procedures and interpretations.\n\n## **4.1 Learning Outcome**\n\n### **4.1.1 The research questions**\n\nThe specific question we would like to answer is:\n\n-   are the locations of forest fire in Kepulauan Bangka Belitung spatial and spatio-temporally independent?\n\n-   if the answer is NO, where and when the observed forest fire locations tend to cluster?\n\n### **4.1.2 The data**\n\nFor the purpose of this exercise, two data sets are used, they are:\n\n-   forestfires, a csv file provides locations of forest fire detected from the Moderate Resolution Imaging Spectroradiometer (MODIS) sensor data. The data are downloaded from [Fire Information for Resource Management System](https://firms.modaps.eosdis.nasa.gov/download/). For the purpose of this exercise, only forest fires within Kepulauan Bangka Belitung will be used.\n\n-   Kepulauan_Bangka_Belitung, an ESRI shapefile showing the sub-district (i.e.Â [kelurahan](https://en.wikipedia.org/wiki/Villages_of_Indonesia)) boundary of Kepulauan Bangka Belitung. The data set was downloaded from [Indonesia Geospatial](https://www.indonesia-geospasial.com/2023/05/download-shapefile-batas-administrasi.html) portal. The original data covers the whole Indonesia. For the purpose of this exercise, only sub-districts within Kepulauan Bangka Belitung are extracted.\n\n## **4.2 Installing and Loading the R packages**\n\nFor the purpose of this study, five R packages will be used. They are:\n\n-   rgdal for importing geospatial data in GIS file format such as shapefile into R and save them as Spatial\\*DataFrame,\n\n-   maptools for converting Spatial\\* object into ppp object,\n\n-   raster for handling raster data in R,\n\n-   sparr provides functions to estimate fixed and adaptive kernel-smooth spatial relative risk surfaces via the density-ratio method and perform subsequent inferences,\n\n-   spatstat for performing Spatial Point Patterns Analysis such as kcross, Lcross, etc., and\n\n-   tmap for producing cartographic quality thematic maps.\n\n\n::: {.cell}\n\n```{.r .cell-code}\npacman::p_load(sf, raster, spatstat, sparr, tmap, tidyverse)\n```\n:::\n\n\n## **4.3 Importing data into R**\n\n### **4.3.1 Importing and Preparing Forest Fire shapeful**\n\n\n::: {.cell}\n\n```{.r .cell-code}\nkbb_sf <- st_read(dsn = \"data/In-class_Ex04\", \n                  layer = \"Kepulauan_Bangka_Belitung\") %>%\n  st_union() %>%\n  st_zm(drop = TRUE, what = \"ZM\") %>% # dropping the Z-value\n  st_transform(crs = 32748)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nReading layer `Kepulauan_Bangka_Belitung' from data source \n  `C:\\Users\\blzll\\OneDrive\\Desktop\\Y3S1\\IS415\\Quarto\\IS415\\In-class_Ex\\data\\In-class_Ex04' \n  using driver `ESRI Shapefile'\nSimple feature collection with 298 features and 27 fields\nGeometry type: POLYGON\nDimension:     XYZ\nBounding box:  xmin: 105.1085 ymin: -3.116593 xmax: 106.8488 ymax: -1.501603\nz_range:       zmin: 0 zmax: 0\nGeodetic CRS:  WGS 84\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nsummary(kbb_sf)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n MULTIPOLYGON    epsg:32748 +proj=utm ... \n            1             0             0 \n```\n\n\n:::\n:::\n\n\nFurthermore we create an `owin` object from the `sf` data type\n\n\n::: {.cell}\n\n```{.r .cell-code}\nkbb_owin <- as.owin(kbb_sf)\nkbb_owin\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nwindow: polygonal boundary\nenclosing rectangle: [512066.8, 705559.4] x [9655398, 9834006] units\n```\n\n\n:::\n:::\n\n\nTo ensure that the output is an `owin` object\n\n\n::: {.cell}\n\n```{.r .cell-code}\nclass(kbb_owin)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"owin\"\n```\n\n\n:::\n:::\n\n\n### **4.3.2 Importing and Preparing Forest Fire data**\n\nNext we will import the forest data set into R:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfire_sf <- read_csv(\"data/In-class_Ex04/forestfires.csv\") %>%\n  st_as_sf(coords = c(\"longitude\", \"latitude\"), \n           crs = 4326) %>%\n  st_transform(crs = 32748)\n```\n:::\n\n\nBecause **ppp** object only accept numerical or character as mark. The code below is used to transform **acq_date** data type to numeric.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfire_sf <- fire_sf %>%\n  mutate(\"DayofYear\" = yday(acq_date)) %>%\n  mutate(\"Month_num\" = month(acq_date)) %>%\n  mutate(\"Month_fac\" = month(acq_date, label = TRUE, abbr = FALSE))\n\nsummary(fire_sf)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n   brightness         scan           track          acq_date         \n Min.   :300.3   Min.   :1.000   Min.   :1.000   Min.   :2023-01-10  \n 1st Qu.:314.3   1st Qu.:1.000   1st Qu.:1.000   1st Qu.:2023-08-01  \n Median :318.7   Median :1.100   Median :1.100   Median :2023-09-15  \n Mean   :320.9   Mean   :1.315   Mean   :1.119   Mean   :2023-09-02  \n 3rd Qu.:324.7   3rd Qu.:1.400   3rd Qu.:1.200   3rd Qu.:2023-10-14  \n Max.   :396.2   Max.   :4.200   Max.   :1.900   Max.   :2023-12-18  \n                                                                     \n    acq_time     satellite          instrument          confidence   \n Min.   : 248   Length:741         Length:741         Min.   :  0.0  \n 1st Qu.: 633   Class :character   Class :character   1st Qu.: 57.0  \n Median : 649   Mode  :character   Mode  :character   Median : 68.0  \n Mean   : 731                                         Mean   : 65.6  \n 3rd Qu.: 659                                         3rd Qu.: 77.0  \n Max.   :1915                                         Max.   :100.0  \n                                                                     \n    version        bright_t31         frp          daynight              type  \n Min.   :61.03   Min.   :274.9   Min.   :  3.0   Length:741         Min.   :0  \n 1st Qu.:61.03   1st Qu.:293.6   1st Qu.:  8.4   Class :character   1st Qu.:0  \n Median :61.03   Median :296.6   Median : 13.2   Mode  :character   Median :0  \n Mean   :61.03   Mean   :296.1   Mean   : 20.1                      Mean   :0  \n 3rd Qu.:61.03   3rd Qu.:299.2   3rd Qu.: 21.8                      3rd Qu.:0  \n Max.   :61.03   Max.   :311.2   Max.   :220.2                      Max.   :0  \n                                                                               \n          geometry     DayofYear       Month_num          Month_fac  \n POINT        :741   Min.   : 10.0   Min.   : 1.000   October  :185  \n epsg:32748   :  0   1st Qu.:213.0   1st Qu.: 8.000   September:146  \n +proj=utm ...:  0   Median :258.0   Median : 9.000   August   :143  \n                     Mean   :245.9   Mean   : 8.579   November : 88  \n                     3rd Qu.:287.0   3rd Qu.:10.000   July     : 79  \n                     Max.   :352.0   Max.   :12.000   June     : 34  \n                                                      (Other)  : 66  \n```\n\n\n:::\n:::\n\n\n## **4.4 Visualising the Fire Points**\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntm_shape(kbb_sf)+\n  tm_polygons() +\n  tm_shape(fire_sf) +\n  tm_dots()\n```\n\n::: {.cell-output-display}\n![](In-class_Ex04_files/figure-html/unnamed-chunk-8-1.png){width=672}\n:::\n:::\n\n\nWe will then prepare a point symbol map showing the monthly geographic distribution of forest fires in 2023. The map should look similar to the figure below.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntm_shape(kbb_sf)+\n  tm_polygons()+\n  tm_shape(fire_sf)+\n  tm_dots(size = 0.1)+\n  tm_facets(by=\"Month_fac\", free.coords = FALSE, drop.units = FALSE)\n```\n\n::: {.cell-output-display}\n![](In-class_Ex04_files/figure-html/unnamed-chunk-9-1.png){width=672}\n:::\n:::\n\n\n## **4.5 Extracting forest fire by month**\n\nThe code chunk below is used to remove the unwanted fields from the `fire_sf` sf data frame. This is because as.ppp() only need the mark field and geometry field from the input sf data frame.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfire_month <- fire_sf %>%\n  select(Month_num)\n```\n:::\n\n\n### **4.5.1 Creating ppp**\n\nThe code chunk below is used to derive a ppp object called fire_month from fire_month sf data frame\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfire_month_ppp <- as.ppp(fire_month)\nfire_month_ppp\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nMarked planar point pattern: 741 points\nmarks are numeric, of storage type  'double'\nwindow: rectangle = [521564.1, 695791] x [9658137, 9828767] units\n```\n\n\n:::\n:::\n\n\n### **4.5.2 Creating Owin object**\n\nThe code chunk below is used to combine origin_am_ppp and am_owin_objects into one.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfire_month_owin <- fire_month_ppp[kbb_owin]\nsummary(fire_month_owin)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nMarked planar point pattern:  741 points\nAverage intensity 6.424519e-08 points per square unit\n\nCoordinates are given to 10 decimal places\n\nmarks are numeric, of type 'double'\nSummary:\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n  1.000   8.000   9.000   8.579  10.000  12.000 \n\nWindow: polygonal boundary\n2 separate polygons (no holes)\n           vertices        area relative.area\npolygon 1     47493 11533600000      1.00e+00\npolygon 2       256      306427      2.66e-05\nenclosing rectangle: [512066.8, 705559.4] x [9655398, 9834006] units\n                     (193500 x 178600 units)\nWindow area = 11533900000 square units\nFraction of frame area: 0.334\n```\n\n\n:::\n:::\n\n\nComputing Spatio-Temporal KDE Next, `spattemp.density()` of `sparr` package is used to compute the STKDE\n\n\n::: {.cell}\n\n```{.r .cell-code}\nst_kde <- spattemp.density(fire_month_owin)\nsummary(st_kde)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nSpatiotemporal Kernel Density Estimate\n\nBandwidths\n  h = 15102.47 (spatial)\n  lambda = 0.0304 (temporal)\n\nNo. of observations\n  741 \n\nSpatial bound\n  Type: polygonal\n  2D enclosure: [512066.8, 705559.4] x [9655398, 9834006]\n\nTemporal bound\n  [1, 12]\n\nEvaluation\n  128 x 128 x 12 trivariate lattice\n  Density range: [1.233458e-27, 8.202976e-10]\n```\n\n\n:::\n:::\n\n\nIn the code chunk below, `plot()` of R base is used to get the KDE for between July 2023 - December 2023\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntims <- c(7, 8, 9, 10, 11, 12)\npar(mfcol=c(2, 3))\nfor(i in tims){\n  plot(st_kde, i, \n       override.par=FALSE,\n       fix.range=TRUE,\n       main=paste(\"KDE at month\", i))\n}\n```\n\n::: {.cell-output-display}\n![](In-class_Ex04_files/figure-html/unnamed-chunk-14-1.png){width=672}\n:::\n:::",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}