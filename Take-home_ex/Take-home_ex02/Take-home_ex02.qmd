---
title: "Take-home Exercise 1: Geospatial Analytics for Social Good: Application of Spatial and Spatio-temporal Point Patterns Analysis to discover the geographical distribution of Armed Conflict in Myanmar"
author: "Brian Lim"
date: "September 8, 2024"
date-modified: "last-modified"
categories:
  - Analysis
  - R
  - sf
  - tidyverse
  - sfdep
  - readxl
format: html
editor: visual
execute: 
  eval: true
  echo: true
  warning: false
  freeze: true
  cache.lazy: true
---

## 2.1 Exercise Overview
Drug abuse is associated with profound health, financial, and social consequences, making it a critical global issue. Despite numerous efforts to combat the problem, illicit drug use remains highly prevalent, affecting millions of people worldwide. In 2021, it was estimated that 1 in 17 individuals aged 15–64 had used a drug in the past 12 months, with the total number of drug users rising from 240 million in 2011 to 296 million in 2021.

Thailand, in particular, is in a unique geopolitical position near the Golden Triangle of Indochina—the largest drug production site in Asia. This, combined with ongoing transportation infrastructure development, has made Thailand not only a significant market for drug consumption but also a critical transit route for drug trafficking to other countries. As a result, the nation faces a growing challenge in managing the social and health issues associated with drug abuse.

Among Thailand's youth population, drug abuse is a major social issue. With approximately 2.7 million youths involved in drug use, it is estimated that around 300,000 individuals aged between 15 and 19 require drug treatment. Alarmingly, drug involvement is particularly prevalent among vocational-school students, almost double that of secondary-school students, indicating that certain sub-populations may be at higher risk.

Given this context, the primary objective of this exercise is to explore whether key drug abuse indicators in Thailand are spatially independent or exhibit patterns of spatial dependence. Understanding these spatial dynamics is crucial for identifying clusters, outliers, and potential hotspots that can inform targeted interventions. Additionally, the temporal evolution of these spatial patterns from 2017 to 2022 will be analyzed to uncover trends and shifts over time.

This exercise aims to provide a comprehensive understanding of the spatial and temporal dynamics of drug abuse in Thailand. By identifying areas of concern and tracking their changes over time, the results can support policymakers and stakeholders in designing more effective, location-based strategies to mitigate the impact of drug abuse in the country.

## 2.2 Data Acquisition
For the purpose of this take-home exercise, two data sets shall be used, they are:
[Thailand Drug Offenses \[2017-2022\]](https://www.kaggle.com/datasets/thaweewatboy/thailand-drug-offenses-2017-2022) at Kaggle.
[Thailand - Subnational Administrative Boundaries](https://data.humdata.org/dataset/cod-ab-tha?) at HDX. You are required to use the province boundary data set.

## 2.3 Getting Started
For this exercise, the following R packages will be used:

-   [**sf**](https://cran.r-project.org/web/packages/sf/) for handling geospatial data.

-   [**spatstat**](https://spatstat.org/), a comprehensive package for point pattern analysis. We'll use it to perform first- and second-order spatial point pattern analyses and to derive kernel density estimation (KDE) layers.

-   [**raster**](https://cran.r-project.org/web/packages/raster/), a package for reading, writing, manipulating, and modeling gridded spatial data (rasters). We will use it to convert image outputs generated by spatstat into raster format.

-   [**tmap**](https://cran.r-project.org/web/packages/tmap/index.html), a package for creating high-quality static and interactive maps, leveraging the Leaflet API for interactive visualizations.

-   [**tidyverse**](https://www.tidyverse.org/) for performing data science tasks such as importing, wrangling and visualising data.

-   [**RColorBrewer**](https://cran.r-project.org/web/packages/RColorBrewer/RColorBrewer.pdf) for creating nice looking color palettes especially for thematic maps.

-   [**spdep**](https://cran.r-project.org/web/packages/spdep/index.html) for spatial dependence analysis, including computing spatial weights and conducting spatial autocorrelation tests such as Moran's I and Geary's C

-   [**sfdept**](https://cran.r-project.org/web/packages/sfdep/index.html) for computing spatial weights, global and local spatial autocorrelation statistics

-   [**ggplot2**](https://cran.r-project.org/web/packages/ggplot2/index.html) for data visualization within the tidyverse. It will be used for creating a variety of plots, including temporal line charts and exploratory data visualizations that complement spatial maps

As readr, tidyr and dplyr are part of tidyverse package. The code chunk below will suffice to install and load the required packages in RStudio.

To install and load these packages into the R environment, we use the `p_load` function from the `pacman` package:

```{r}
pacman::p_load(sf, raster, spatstat, tmap, tidyverse, RColorBrewer, spdep, sfdep, ggplot2)
```

## 2.4 Importing Data into R

```{r}
thai_drug_offenses <- read.csv("data/archive/thai_drug_offenses_2017_2022.csv")%>% 
  select(-province_th)
```

```{r}
drug_summary <- thai_drug_offenses %>%
  group_by(fiscal_year, province_en, types_of_drug_offenses) %>%
  summarize(no_cases = sum(no_cases, na.rm = TRUE), .groups = 'drop')

```

```{r}
regions_sf <- st_read(dsn = "data/tha_adm_rtsd_itos_20210121_shp", 
                layer = "tha_admbnda_adm1_rtsd_20220121")

st_crs(regions_sf)
```

```{r}
st_geometry_type(regions_sf)
```

## 2.5 Data Wrangling

```{r}
# Function to check province differences
prov_diff <- function(thai_drug_offenses_provinces, regions_sf_provinces) {
  # Create sets for efficient comparison
  drug_set <- unique(thai_drug_offenses_provinces)
  regions_set <- unique(regions_sf_provinces)
  
  # Check for mismatches
  missing_in_regions <- setdiff(drug_set, regions_set)
  missing_in_drug <- setdiff(regions_set, drug_set)
  
  if (length(missing_in_regions) == 0 && length(missing_in_drug) == 0) {
    cat("All province names match.\n")
  } else {
    cat("There are mismatches in province names.\n")
    if (length(missing_in_regions) > 0) {
      cat("Missing in regions_sf:", paste(missing_in_regions, collapse = ", "), "\n")
    }
    if (length(missing_in_drug) > 0) {
      cat("Missing in drug_sf:", paste(missing_in_drug, collapse = ", "), "\n")
    }
  }
}

prov_diff(unique(thai_drug_offenses$province_en), unique(regions_sf$ADM1_EN))
```

Based on the derived results, we would need to reassign the misaligned values such that they match exactly. In the code chunk below, we will perform the reassignment in the regions_sf

```{r}
thai_drug_offenses <- thai_drug_offenses %>%
  mutate(province_en = case_when(
    province_en == "Loburi" ~ "Lop Buri",
    province_en == "buogkan" ~ "Bueng Kan",
    TRUE ~ province_en
  ))

prov_diff(unique(thai_drug_offenses$province_en), unique(regions_sf$ADM1_EN))
```

```{r chunk_name, cache=FALSE}
drug_region_1 <- left_join(thai_drug_offenses, regions_sf, by = c("province_en" = "ADM1_EN")) %>%
  select(1:6, "date", "geometry")
```

```{r}
# Check for null values in key columns
na_count <- drug_region_1 %>%
  summarise(na_geometry = sum(is.na(geometry)),
            na_province = sum(is.na(province_en)),
            na_drug_offense = sum(is.na(types_of_drug_offenses)),
            na_cases = sum(is.na(no_cases)))

print(na_count)
```

```{r}
duplicates <- drug_region_1 %>%
  group_by(province_en, fiscal_year, types_of_drug_offenses) %>%
  filter(n() > 1) %>%
  ungroup()

if (nrow(duplicates) > 0) {
  cat("Duplicates found:\n")
  print(duplicates)
} else {
  cat("No duplicates found.\n")
}
```

```{r}
# check if drug_region_1 is an sf object
st_crs(drug_region_1)
```

```{r}
# Convert data frame to sf object and specify the CRS (EPSG:4326)
drug_region_thailand_sf <- st_as_sf(drug_region_1, crs = 4326)
```

```{r}
write_rds(drug_region_thailand_sf, "data/rds/drug_region_thailand_sf.rds")
```

```{r}
drug_region_thailand_sf <- read_rds("data/rds/drug_region_thailand_sf.rds")
```

## 2.6 Global Measures of Spatial Autocorrelation

Global measures of spatial autocorrelation, such as Moran’s I and Geary’s C, are critical in understanding the overall spatial structure of geographic data. They help detect patterns of clustering or dispersion by assessing whether similar values occur near each other across an entire study area. This insight is essential for identifying spatial dependencies and guiding decisions in fields like epidemiology, economics, and environmental science. By quantifying spatial relationships on a broad scale, global measures provide a foundational perspective for spatial analysis.

```{r, fig.height=12, fig.width=12}
num_colors <- length(unique(regions_sf$ADM1_EN))
colors <- brewer.pal(n = num_colors, name = "Set1")

# as there are 77 provinces in thailand
tmap_options(max.categories = 77)

tm_shape(regions_sf) +
  tm_polygons(col = "ADM1_EN", palette = colors) +
  tm_layout(main.title = "Provinces in Thailand",
            main.title.position = "center",
            main.title.size = 1.6,
            legend.outside = TRUE) +
  tm_legend(title = "Provinces")
```

### 2.6.1 Defining Scope of Analysis

To ensure a data-driven analysis of drug-related offenses, we aim to focus exclusively on cases that have resulted in concrete legal outcomes, such as convictions or possession cases. cases based solely on suspicion may not lead to prosecution or final legal action, potentially inflating the data without accurately reflecting the true extent of confirmed criminal activity. By narrowing our scope to finalized or substantiated cases, we intend to provide more reliable insights into the patterns of drug-related crime and its impact.

```{r}
# Group by types_of_drug_offenses and summarize by summing the no_cases
top_drug_offenses <- thai_drug_offenses %>%
  filter(!grepl("suspect", types_of_drug_offenses, ignore.case = TRUE)) %>%
  group_by(types_of_drug_offenses) %>%
  summarise(total_cases = sum(no_cases, na.rm = TRUE)) %>%
  arrange(desc(total_cases))

# View non-suspicion based types of drug offenses
top_drug_offenses
```

We are further refining our analysis exclusively on **drug use cases**. This choice is driven by the nature of these offenses, which represent direct instances of illicit drug consumption and are critical to understanding the broader context of drug-related issues in Thailand. Unlike cases that involve suspicion or potential possession, drug use cases have clear legal implications and societal impacts, making them essential for our analysis. By focusing solely on these confirmed instances, we aim to provide accurate insights into the patterns of drug use and its repercussions.

```{r}
drug_region_thailand_sf <- drug_region_thailand_sf %>% filter(types_of_drug_offenses == "drug_use_cases")
```

Focusing exclusively on drug use cases allows us to concentrate our efforts on a significant area of concern, thereby providing clearer recommendations for law enforcement and policy development. This targeted approach ensures that our insights align with the most impactful drug-related offenses, facilitating more effective interventions and resource allocation.

```{r}
region_2017_sf <- drug_region_thailand_sf %>% filter(fiscal_year == 2017)
region_2018_sf <- drug_region_thailand_sf %>% filter(fiscal_year == 2018)
region_2019_sf <- drug_region_thailand_sf %>% filter(fiscal_year == 2019)
region_2020_sf <- drug_region_thailand_sf %>% filter(fiscal_year == 2020)
region_2021_sf <- drug_region_thailand_sf %>% filter(fiscal_year == 2021)
region_2022_sf <- drug_region_thailand_sf %>% filter(fiscal_year == 2022)
```

### 2.6.2 Computing Contiguity Neighbours

#### Year 2017

```{r}
thailand_nb_q <- st_contiguity(region_2017_sf, queen=TRUE)
summary(thailand_nb_q)
```

1 region with no links can be observed in the summary above. This is due to the **island province of Phuket** having no direct land neighbours, and being connected to **Phangnga province** via a bridge. As such, we can manually assign **Phuket** a neighbor, **Phangnga**, to help avoid issues in the spatial analysis, particularly with Moran's I, which requires each region to have at least one neighbor.

The following code chunk finds the index positions of the provinces "Phuket" and "Phangnga" within the `region_2017_sf` spatial data frame.

```{r}
phuket_index <- which(region_2017_sf$province_en == "Phuket")
phangnga_index <- which(region_2017_sf$province_en == "Phangnga")
```

Purpose: This code modifies the neighborhood relationship between "Phuket" and "Phangnga" by manually assigning them as neighbors to each other within the `thailand_nb_q` object.

```{r}
thailand_nb_q[phuket_index][1] <- phangnga_index
thailand_nb_q[phangnga_index][2] <- phuket_index
```

As seen from the summary above all regions are linked and have at least 1 neighbour

#### Computing Row-Standardised Weight Matrix

Next, we need to assign spatial weights to each neighboring polygon.

[`st_weights()`](https://rdrr.io/cran/sfdep/man/st_weights.html) function from `sfdep` packge can be used to supplement a neighbour list with spatial weights based on the chosen coding scheme. There are as least 5 different coding scheme styles supported by this function:

-   `B` is the basic binary coding

-   `W` is row standardised (sums over all links to n)

-   `C` is globally standardised (sums over all links to n)

-   `U` is equal to C divided by the number of neighbours (sums over all links to unity)

-   `S` is the variance-stabilizing coding scheme proposed by Tiefelsdorf et al. (1999) (sums over all links to n).

In this study, we will use row-standardised weight matrix (style=`"W"`). Row standardisation of a matrix ensure that the sum of the values across each row add up to 1. This is accomplished by assigning the fraction 1/(# of neighbors) to each neighboring county then summing the weighted income values. Row standardisation ensures that all weights are between 0 and 1. This facilities the interpretation of operation with the weights matrix as an averaging of neighboring values, and allows for the spatial parameter used in our analyses to be comparable between models.

```{r}
thailand_wm_rs <- st_weights(thailand_nb_q, style = "W")
```

We will mutate the newly created neighbour list object `thailand_nb_q` and weight matrix `thailand_wm_rs` into our existing `region_2017_sf`. The result will be a new object, which we will call `wm_q_<current-year>`.

```{r}
wm_q_2017 <- region_2017_sf %>%
  mutate(nb = thailand_nb_q,
         wt = thailand_wm_rs,
         .before = 1) 
```

#### Global Moran's I

::: panel-tabset
## Global Moran's I

```{r}
moranI <- global_moran(wm_q_2017$no_cases,
                        wm_q_2017$nb,
                        wm_q_2017$wt)
moranI
```

## Global Moran's I test

```{r}
global_moran_test_2017 <- global_moran_test(wm_q_2017$no_cases,
                            wm_q_2017$nb,
                            wm_q_2017$wt,
                            alternative = "greater")
global_moran_test_2017_statistics <- global_moran_test_2017$estimate["Moran I statistic"]
global_moran_test_2017_p_value <- global_moran_test_2017$p.value
global_moran_test_2017
```

For the year of **2017**, the Moran I statistic shows slight positive spatial autocorrelation, meaning there is some clustering of similar values of drug-related cases, but this clustering is weak and not statistically significant at the **5%** level (though close, with a p-value of **0.0577**). There is weak evidence suggesting that nearby provinces might have similar levels of drug-related cases, but the relationship is **not strong enough** to definitively **conclude spatial clustering**. As such, further investigation is needed to show stronger spatial autocorrelation.

## Global Moran's I permutation test

```{r}
set.seed(4242)
gmoranMC_2017 <- global_moran_perm(wm_q_2017$no_cases,
                  wm_q_2017$nb,
                  wm_q_2017$wt,
                  nsim = 999)
gmoranMC_2017
```
:::

#### Global Geary’s C

Introduced by Geary, Geary's C statistic studies the degree of intensity of a given feature in spatial objects described with the use of a weight matrix. Similarly to Moran's analysis, Geary's C can be used to quantify the extent of spatial autocorrelation in the data.

::: panel-tabset
## Global Geary's C test

The Global Geary's C test, which can be implemented using the `global_c_test()` function from the `sfdep` package.

```{r}
global_c_test_2017 <- global_c_test(wm_q_2017$no_cases,
                                    wm_q_2017$nb,
                                    wm_q_2017$wt,
                                    alternative = "greater")
global_c_test_2017_statistics <- global_c_test_2017$estimate ["Geary C statistic"]
global_c_test_2017_p_value <- global_c_test_2017$p.value
global_c_test_2017
```

## Global Geary's C Permutation Test

Similar to what we did in Moran's I test, we will use `global_c_perm()` function from **sfdep** package with `nsim = 999` which represent 1000 Monte Carlo simulations to be carried out.

```{r}
set.seed(4242)
bperm_2017 <- global_c_perm(wm_q_2017$no_cases,
                  wm_q_2017$nb,
                  wm_q_2017$wt,
                  nsim = 999)
bperm_2017
```
:::

#### Year 2018

Similar that of 2017, we will compute a contiguity weight matrix for the study area, assigning spatial weights to each neighboring polygon, while also manually assigning "Phuket" and "Phangnga" as neighbours.

```{r}
thailand_nb_q <- st_contiguity(region_2018_sf, queen=TRUE)
```

The following code chunk finds the index positions of the provinces "Phuket" and "Phangnga" within the `region_2017_sf` spatial data frame, assigning them as neighbors to each other within the `thailand_nb_q` object.

```{r}
phuket_index <- which(region_2018_sf$province_en == "Phuket")
phangnga_index <- which(region_2018_sf$province_en == "Phangnga")

thailand_nb_q[phuket_index][1] <- phangnga_index
thailand_nb_q[phangnga_index][2] <- phuket_index
```

#### Computing Row-Standardised Weight Matrix

Using the contiguity weight matrix, we will use row-standardised weight matrix (style = "W").

```{r}
thailand_wm_rs <- st_weights(thailand_nb_q, style = "W")
```

We then mutate the newly created neighbour list object `thailand_nb_q` and weight matrix `thailand_wm_rs` into our existing `region_2018_sf`. The result will be a new object, which we will call `wm_q_<current-year>`.

```{r}
wm_q_2018 <- region_2018_sf %>%
  mutate(nb = thailand_nb_q,
         wt = thailand_wm_rs,
         .before = 1) 
```

#### Global Moran's I

::: panel-tabset
## Global Moran's I

```{r}
moranI <- global_moran(wm_q_2018$no_cases,
                        wm_q_2018$nb,
                        wm_q_2018$wt)
moranI
```

## Global Moran's I test

```{r}
global_moran_test_2018 <- global_moran_test(wm_q_2018$no_cases,
                            wm_q_2018$nb,
                            wm_q_2018$wt,
                            alternative = "greater")
global_moran_test_2018_statistics <- global_moran_test_2018$estimate["Moran I statistic"]
global_moran_test_2018_p_value <- global_moran_test_2018$p.value
global_moran_test_2018
```

For the year of **2017**, the Moran I statistic shows slight positive spatial autocorrelation, meaning there is some clustering of similar values of drug-related cases, but this clustering is weak and not statistically significant at the **5%** level (though close, with a p-value of **0.0577**). There is weak evidence suggesting that nearby provinces might have similar levels of drug-related cases, but the relationship is **not strong enough** to definitively **conclude spatial clustering**. As such, further investigation is needed to show stronger spatial autocorrelation.

## Global Moran's I permutation test

```{r}
set.seed(4242)
gmoranMC_2018 <- global_moran_perm(wm_q_2018$no_cases,
                  wm_q_2018$nb,
                  wm_q_2018$wt,
                  nsim = 999)
gmoranMC_2018
```
:::

#### Global Geary’s C

Introduced by Geary, Geary's C statistic studies the degree of intensity of a given feature in spatial objects described with the use of a weight matrix. Similarly to Moran's analysis, Geary's C can be used to quantify the extent of spatial autocorrelation in the data.

::: panel-tabset
## Global Geary's C test

The Global Geary's C test, which can be implemented using the `global_c_test()` function from the `sfdep` package.

```{r}
global_c_test_2018 <- global_c_test(wm_q_2018$no_cases,
                                    wm_q_2018$nb,
                                    wm_q_2018$wt,
                                    alternative = "greater")
global_c_test_2018_statistics <- global_c_test_2018$estimate ["Geary C statistic"]
global_c_test_2018_p_value <- global_c_test_2018$p.value
global_c_test_2018
```

## Global Geary's C Permutation Test

Similar to what we did in Moran's I test, we will use `global_c_perm()` function from **sfdep** package with `nsim = 999` which represent 1000 Monte Carlo simulations to be carried out.

```{r}
set.seed(4242)
bperm_2018 <- global_c_perm(wm_q_2018$no_cases,
                  wm_q_2018$nb,
                  wm_q_2018$wt,
                  nsim = 999)
bperm_2018
```
:::

#### Year 2019

Similar that of 2017, we will compute a contiguity weight matrix for the study area, assigning spatial weights to each neighboring polygon, while also manually assigning "Phuket" and "Phangnga" as neighbours.

```{r}
thailand_nb_q <- st_contiguity(region_2019_sf, queen=TRUE)
```

The following code chunk finds the index positions of the provinces "Phuket" and "Phangnga" within the `region_2017_sf` spatial data frame, assigning them as neighbors to each other within the `thailand_nb_q` object.

```{r}
phuket_index <- which(region_2019_sf$province_en == "Phuket")
phangnga_index <- which(region_2019_sf$province_en == "Phangnga")

thailand_nb_q[phuket_index][1] <- phangnga_index
thailand_nb_q[phangnga_index][2] <- phuket_index
```

#### Computing Row-Standardised Weight Matrix

Using the contiguity weight matrix, we will use row-standardised weight matrix (style = "W").

```{r}
thailand_wm_rs <- st_weights(thailand_nb_q, style = "W")
```

We then mutate the newly created neighbour list object `thailand_nb_q` and weight matrix `thailand_wm_rs` into our existing `region_2018_sf`. The result will be a new object, which we will call `wm_q_<current-year>`.

```{r}
wm_q_2019 <- region_2019_sf %>%
  mutate(nb = thailand_nb_q,
         wt = thailand_wm_rs,
         .before = 1) 
```

#### Global Moran's I

::: panel-tabset
## Global Moran's I

```{r}
moranI <- global_moran(wm_q_2019$no_cases,
                        wm_q_2019$nb,
                        wm_q_2019$wt)
moranI
```

## Global Moran's I test

```{r}
global_moran_test_2019 <- global_moran_test(wm_q_2019$no_cases,
                            wm_q_2019$nb,
                            wm_q_2019$wt,
                            alternative = "greater")
global_moran_test_2019_statistics <- global_moran_test_2019$estimate["Moran I statistic"]
global_moran_test_2019_p_value <- global_moran_test_2019$p.value
global_moran_test_2019
```

For the year of **2017**, the Moran I statistic shows slight positive spatial autocorrelation, meaning there is some clustering of similar values of drug-related cases, but this clustering is weak and not statistically significant at the **5%** level (though close, with a p-value of **0.0577**). There is weak evidence suggesting that nearby provinces might have similar levels of drug-related cases, but the relationship is **not strong enough** to definitively **conclude spatial clustering**. As such, further investigation is needed to show stronger spatial autocorrelation.

## Global Moran's I permutation test

```{r}
set.seed(4242)
gmoranMC_2019 <- global_moran_perm(wm_q_2019$no_cases,
                  wm_q_2019$nb,
                  wm_q_2019$wt,
                  nsim = 999)
gmoranMC_2019
```
:::

#### Global Geary’s C

Introduced by Geary, Geary's C statistic studies the degree of intensity of a given feature in spatial objects described with the use of a weight matrix. Similarly to Moran's analysis, Geary's C can be used to quantify the extent of spatial autocorrelation in the data.

::: panel-tabset
## Global Geary's C test

The Global Geary's C test, which can be implemented using the `global_c_test()` function from the `sfdep` package.

```{r}
global_c_test_2019 <- global_c_test(wm_q_2019$no_cases,
                                    wm_q_2019$nb,
                                    wm_q_2019$wt,
                                    alternative = "greater")
global_c_test_2019_statistics <- global_c_test_2019$estimate ["Geary C statistic"]
global_c_test_2019_p_value <- global_c_test_2019$p.value
global_c_test_2019
```

## Global Geary's C Permutation Test

Similar to what we did in Moran's I test, we will use `global_c_perm()` function from **sfdep** package with `nsim = 999` which represent 1000 Monte Carlo simulations to be carried out.

```{r}
set.seed(4242)
bperm_2019 <- global_c_perm(wm_q_2019$no_cases,
                  wm_q_2019$nb,
                  wm_q_2019$wt,
                  nsim = 999)
bperm_2019
```
:::

#### Year 2020

Similar that of 2017, we will compute a contiguity weight matrix for the study area, assigning spatial weights to each neighboring polygon, while also manually assigning "Phuket" and "Phangnga" as neighbours.

```{r}
thailand_nb_q <- st_contiguity(region_2020_sf, queen=TRUE)
```

The following code chunk finds the index positions of the provinces "Phuket" and "Phangnga" within the `region_2017_sf` spatial data frame, assigning them as neighbors to each other within the `thailand_nb_q` object.

```{r}
phuket_index <- which(region_2020_sf$province_en == "Phuket")
phangnga_index <- which(region_2020_sf$province_en == "Phangnga")

thailand_nb_q[phuket_index][1] <- phangnga_index
thailand_nb_q[phangnga_index][2] <- phuket_index
```

#### Computing Row-Standardised Weight Matrix

Using the contiguity weight matrix, we will use row-standardised weight matrix (style = "W").

```{r}
thailand_wm_rs <- st_weights(thailand_nb_q, style = "W")
```

We then mutate the newly created neighbour list object `thailand_nb_q` and weight matrix `thailand_wm_rs` into our existing `region_2018_sf`. The result will be a new object, which we will call `wm_q_<current-year>`.

```{r}
wm_q_2020 <- region_2020_sf %>%
  mutate(nb = thailand_nb_q,
         wt = thailand_wm_rs,
         .before = 1) 
```

#### Global Moran's I

::: panel-tabset
## Global Moran's I

```{r}
moranI <- global_moran(wm_q_2020$no_cases,
                        wm_q_2020$nb,
                        wm_q_2020$wt)
moranI
```

## Global Moran's I test

```{r}
global_moran_test_2020 <- global_moran_test(wm_q_2020$no_cases,
                            wm_q_2020$nb,
                            wm_q_2020$wt,
                            alternative = "greater")
global_moran_test_2020_statistics <- global_moran_test_2020$estimate["Moran I statistic"]
global_moran_test_2020_p_value <- global_moran_test_2020$p.value
global_moran_test_2020
```

For the year of **2017**, the Moran I statistic shows slight positive spatial autocorrelation, meaning there is some clustering of similar values of drug-related cases, but this clustering is weak and not statistically significant at the **5%** level (though close, with a p-value of **0.0577**). There is weak evidence suggesting that nearby provinces might have similar levels of drug-related cases, but the relationship is **not strong enough** to definitively **conclude spatial clustering**. As such, further investigation is needed to show stronger spatial autocorrelation.

## Global Moran's I permutation test

```{r}
set.seed(4242)
gmoranMC_2020 <- global_moran_perm(wm_q_2020$no_cases,
                  wm_q_2020$nb,
                  wm_q_2020$wt,
                  nsim = 999)
gmoranMC_2020
```
:::

#### Global Geary’s C

Introduced by Geary, Geary's C statistic studies the degree of intensity of a given feature in spatial objects described with the use of a weight matrix. Similarly to Moran's analysis, Geary's C can be used to quantify the extent of spatial autocorrelation in the data.

::: panel-tabset
## Global Geary's C test

The Global Geary's C test, which can be implemented using the `global_c_test()` function from the `sfdep` package.

```{r}
global_c_test_2020 <- global_c_test(wm_q_2020$no_cases,
                                    wm_q_2020$nb,
                                    wm_q_2020$wt,
                                    alternative = "greater")
global_c_test_2020_statistics <- global_c_test_2020$estimate ["Geary C statistic"]
global_c_test_2020_p_value <- global_c_test_2020$p.value
global_c_test_2020
```

## Global Geary's C Permutation Test

Similar to what we did in Moran's I test, we will use `global_c_perm()` function from **sfdep** package with `nsim = 999` which represent 1000 Monte Carlo simulations to be carried out.

```{r}
set.seed(4242)
bperm_2020 <- global_c_perm(wm_q_2020$no_cases,
                  wm_q_2020$nb,
                  wm_q_2020$wt,
                  nsim = 999)
bperm_2020
```
:::

#### Year 2021

Similar that of 2017, we will compute a contiguity weight matrix for the study area, assigning spatial weights to each neighboring polygon, while also manually assigning "Phuket" and "Phangnga" as neighbours.

```{r}
thailand_nb_q <- st_contiguity(region_2021_sf, queen=TRUE)
```

The following code chunk finds the index positions of the provinces "Phuket" and "Phangnga" within the `region_2017_sf` spatial data frame, assigning them as neighbors to each other within the `thailand_nb_q` object.

```{r}
phuket_index <- which(region_2021_sf$province_en == "Phuket")
phangnga_index <- which(region_2021_sf$province_en == "Phangnga")

thailand_nb_q[phuket_index][1] <- phangnga_index
thailand_nb_q[phangnga_index][2] <- phuket_index
```

#### Computing Row-Standardised Weight Matrix

Using the contiguity weight matrix, we will use row-standardised weight matrix (style = "W").

```{r}
thailand_wm_rs <- st_weights(thailand_nb_q, style = "W")
```

We then mutate the newly created neighbour list object `thailand_nb_q` and weight matrix `thailand_wm_rs` into our existing `region_2018_sf`. The result will be a new object, which we will call `wm_q_<current-year>`.

```{r}
wm_q_2021 <- region_2021_sf %>%
  mutate(nb = thailand_nb_q,
         wt = thailand_wm_rs,
         .before = 1) 
```

#### Global Moran's I

::: panel-tabset
## Global Moran's I

```{r}
moranI <- global_moran(wm_q_2021$no_cases,
                        wm_q_2021$nb,
                        wm_q_2021$wt)
moranI
```

## Global Moran's I test

```{r}
global_moran_test_2021 <- global_moran_test(wm_q_2021$no_cases,
                            wm_q_2021$nb,
                            wm_q_2021$wt,
                            alternative = "greater")
global_moran_test_2021_statistics <- global_moran_test_2021$estimate["Moran I statistic"]
global_moran_test_2021_p_value <- global_moran_test_2021$p.value
global_moran_test_2021
```

For the year of **2017**, the Moran I statistic shows slight positive spatial autocorrelation, meaning there is some clustering of similar values of drug-related cases, but this clustering is weak and not statistically significant at the **5%** level (though close, with a p-value of **0.0577**). There is weak evidence suggesting that nearby provinces might have similar levels of drug-related cases, but the relationship is **not strong enough** to definitively **conclude spatial clustering**. As such, further investigation is needed to show stronger spatial autocorrelation.

## Global Moran's I permutation test

```{r}
set.seed(4242)
gmoranMC_2021 <- global_moran_perm(wm_q_2021$no_cases,
                  wm_q_2021$nb,
                  wm_q_2021$wt,
                  nsim = 999)
gmoranMC_2021
```
:::

#### Global Geary’s C

Introduced by Geary, Geary's C statistic studies the degree of intensity of a given feature in spatial objects described with the use of a weight matrix. Similarly to Moran's analysis, Geary's C can be used to quantify the extent of spatial autocorrelation in the data.

::: panel-tabset
## Global Geary's C test

The Global Geary's C test, which can be implemented using the `global_c_test()` function from the `sfdep` package.

```{r}
global_c_test_2021 <- global_c_test(wm_q_2021$no_cases,
                                    wm_q_2021$nb,
                                    wm_q_2021$wt,
                                    alternative = "greater")
global_c_test_2021_statistics <- global_c_test_2021$estimate ["Geary C statistic"]
global_c_test_2021_p_value <- global_c_test_2021$p.value
global_c_test_2021
```

## Global Geary's C Permutation Test

Similar to what we did in Moran's I test, we will use `global_c_perm()` function from **sfdep** package with `nsim = 999` which represent 1000 Monte Carlo simulations to be carried out.

```{r}
set.seed(4242)
bperm_2021 <- global_c_perm(wm_q_2021$no_cases,
                  wm_q_2021$nb,
                  wm_q_2021$wt,
                  nsim = 999)
bperm_2021
```
:::

#### Year 2022

Similar that of 2017, we will compute a contiguity weight matrix for the study area, assigning spatial weights to each neighboring polygon, while also manually assigning "Phuket" and "Phangnga" as neighbours.

```{r}
thailand_nb_q <- st_contiguity(region_2022_sf, queen=TRUE)
```

The following code chunk finds the index positions of the provinces "Phuket" and "Phangnga" within the `region_2017_sf` spatial data frame, assigning them as neighbors to each other within the `thailand_nb_q` object.

```{r}
phuket_index <- which(region_2022_sf$province_en == "Phuket")
phangnga_index <- which(region_2022_sf$province_en == "Phangnga")

thailand_nb_q[phuket_index][1] <- phangnga_index
thailand_nb_q[phangnga_index][2] <- phuket_index
```

#### Computing Row-Standardised Weight Matrix

Using the contiguity weight matrix, we will use row-standardised weight matrix (style = "W").

```{r}
thailand_wm_rs <- st_weights(thailand_nb_q, style = "W")
```

We then mutate the newly created neighbour list object `thailand_nb_q` and weight matrix `thailand_wm_rs` into our existing `region_2018_sf`. The result will be a new object, which we will call `wm_q_<current-year>`.

```{r}
wm_q_2022 <- region_2022_sf %>%
  mutate(nb = thailand_nb_q,
         wt = thailand_wm_rs,
         .before = 1) 
```

#### Global Moran's I

::: panel-tabset
## Global Moran's I

```{r}
moranI <- global_moran(wm_q_2022$no_cases,
                        wm_q_2022$nb,
                        wm_q_2022$wt)
moranI
```

## Global Moran's I test

```{r}
global_moran_test_2022 <- global_moran_test(wm_q_2022$no_cases,
                            wm_q_2022$nb,
                            wm_q_2022$wt,
                            alternative = "greater")
global_moran_test_2022_statistics <- global_moran_test_2022$estimate["Moran I statistic"]
global_moran_test_2022_p_value <- global_moran_test_2022$p.value
global_moran_test_2022
```

For the year of **2017**, the Moran I statistic shows slight positive spatial autocorrelation, meaning there is some clustering of similar values of drug-related cases, but this clustering is weak and not statistically significant at the **5%** level (though close, with a p-value of **0.0577**). There is weak evidence suggesting that nearby provinces might have similar levels of drug-related cases, but the relationship is **not strong enough** to definitively **conclude spatial clustering**. As such, further investigation is needed to show stronger spatial autocorrelation.

## Global Moran's I permutation test

```{r}
set.seed(4242)
gmoranMC_2022 <- global_moran_perm(wm_q_2022$no_cases,
                  wm_q_2022$nb,
                  wm_q_2022$wt,
                  nsim = 999)
gmoranMC_2022
```
:::

#### Global Geary’s C

Introduced by Geary, Geary's C statistic studies the degree of intensity of a given feature in spatial objects described with the use of a weight matrix. Similarly to Moran's analysis, Geary's C can be used to quantify the extent of spatial autocorrelation in the data.

::: panel-tabset
## Global Geary's C test

The Global Geary's C test, which can be implemented using the `global_c_test()` function from the `sfdep` package.

```{r}
global_c_test_2022 <- global_c_test(wm_q_2022$no_cases,
                                    wm_q_2022$nb,
                                    wm_q_2022$wt,
                                    alternative = "greater")
global_c_test_2022_statistics <- global_c_test_2022$estimate ["Geary C statistic"]
global_c_test_2022_p_value <- global_c_test_2022$p.value
global_c_test_2022
```

## Global Geary's C Permutation Test

Similar to what we did in Moran's I test, we will use `global_c_perm()` function from **sfdep** package with `nsim = 999` which represent 1000 Monte Carlo simulations to be carried out.

```{r}
set.seed(4242)
bperm_2022 <- global_c_perm(wm_q_2022$no_cases,
                  wm_q_2022$nb,
                  wm_q_2022$wt,
                  nsim = 999)
bperm_2022
```
:::

### 2.6.3 Global Moran's I Permutation test

```{r, fig.height=12, fig.width=12}
# List of gmoranMC objects for each year
gmoranMC_list <- list(gmoranMC_2017, gmoranMC_2018, gmoranMC_2019, 
                      gmoranMC_2020, gmoranMC_2021, gmoranMC_2022)

# Corresponding year labels for the titles
year_labels <- c("2017", "2018", "2019", "2020", "2021", "2022")

# Set up the plotting area to have 3 rows and 2 columns for the six histograms
par(mfrow = c(3, 2))

# Loop through each year and plot the histogram
for (i in 1:length(gmoranMC_list)) {
  gmoranMC <- gmoranMC_list[[i]]
  year <- year_labels[i]
  
  # Plot the histogram for the current year
  hist(gmoranMC$res, 
       main = paste("Global Moran's I MC Results", year), 
       breaks = 20,
       xlab = "Monte-Carlo Results", 
       ylab = "Frequency")
  
  # Add a vertical line for the observed Moran's I statistic
  abline(v = gmoranMC$statistic, col = "red")
}
```

### 2.6.4 Global Geary's C Permutation test

::: panel-tabset
```{r, fig.height=12, fig.width=12}
# List of bperm objects for each year
gmoranMC_list <- list(bperm_2017, bperm_2018, bperm_2019, 
                      bperm_2020, bperm_2021, bperm_2022)

# Corresponding year labels for the titles
year_labels <- c("2017", "2018", "2019", "2020", "2021", "2022")

# Set up the plotting area to have 3 rows and 2 columns for the six histograms
par(mfrow = c(3, 2))

# Loop through each year and plot the histogram
for (i in 1:length(gmoranMC_list)) {
  gmoranMC <- gmoranMC_list[[i]]
  year <- year_labels[i]
  
  # Plot the histogram for the current year
  hist(gmoranMC$res, 
       main = paste("Global Moran's I MC Results", year),
       breaks = 20,
       xlab = "Monte-Carlo Results", 
       ylab = "Frequency")
  
  # Add a vertical line for the observed Moran's I statistic
  abline(v = gmoranMC$statistic, col = "red")
}
```
:::

### 2.6.5 Temporal Trends (2017-2022)

We can then analyze the spatial patterns of drug-related cases in Thailand over the period from 2017 to 2022 using Moran’s I and Geary’s C global spatial autocorrelation tests. The Moran’s I statistic identifies whether similar case values are clustered across regions, while Geary’s C focuses on local-level similarity, both crucial in understanding the distribution of drug-related offenses over time.

```{r}
# Create a data frame to store Moran's I statistics and p-values
moran_i_results <- data.frame(
  Year = c(2017, 2018, 2019, 2020, 2021, 2022),
  Moran_I_Stat = c(global_moran_test_2017_statistics, global_moran_test_2018_statistics,
                   global_moran_test_2019_statistics, global_moran_test_2020_statistics,
                   global_moran_test_2021_statistics, global_moran_test_2022_statistics),
  Moran_I_p_value = c(global_moran_test_2017_p_value, global_moran_test_2018_p_value,
                      global_moran_test_2019_p_value, global_moran_test_2020_p_value,
                      global_moran_test_2021_p_value, global_moran_test_2022_p_value)
)

# Consolidate the Geary C test data into a data frame
geary_c_results <- data.frame(
  Year = c(2017, 2018, 2019, 2020, 2021, 2022),
  Geary_C_Stat = c(global_c_test_2017_statistics, global_c_test_2018_statistics, 
                   global_c_test_2019_statistics, global_c_test_2020_statistics, 
                   global_c_test_2021_statistics, global_c_test_2022_statistics),
  Geary_C_p_value = c(global_c_test_2017_p_value, global_c_test_2018_p_value, 
                      global_c_test_2019_p_value, global_c_test_2020_p_value, 
                      global_c_test_2021_p_value, global_c_test_2022_p_value)
)
```

::: **Moran’s I (2017 - 2022)** 2017: Moran’s I = 0.0821, p-value = 0.0577 2018: Moran’s I = 0.0952, p-value = 0.0423 2019: Moran’s I = 0.1410, p-value = 0.0149 2020: Moran’s I = 0.0875, p-value = 0.0835 2021: Moran’s I = 0.2013, p-value = 0.0024 2022: Moran’s I = 0.2133, p-value = 0.0015

**Geary’s C (2017 - 2022)** 2017: Geary’s C = 1.0258, p-value = 0.5714 2018: Geary’s C = 1.0037, p-value = 0.5106 2019: Geary’s C = 0.9167, p-value = 0.2260 2020: Geary’s C = 0.9528, p-value = 0.3234 2021: Geary’s C = 0.8489, p-value = 0.0433 2022: Geary’s C = 0.8377, p-value = 0.0292 :::

```{r}
# Plot Moran's I Statistic over the years
ggplot(moran_i_results, aes(x = Year, y = Moran_I_Stat)) +
  geom_line() + 
  geom_point() +
  labs(title = "Moran's I Statistic Trend (2017-2022)", 
       x = "Year", 
       y = "Moran's I Statistic") +
  theme_minimal()
```

```{r}
# Plot p-values over the years
ggplot(moran_i_results, aes(x = Year, y = Moran_I_p_value)) +
  geom_line() + 
  geom_point() +
  geom_hline(yintercept = 0.05, linetype = "dashed", color = "red") +  # Significance threshold
  labs(title = "Moran's I Test p-values (2017-2022)", 
       x = "Year", 
       y = "p-value") +
  theme_minimal()
```

::: {.callout-tip title="Reflection"}
**Moran’s I (2017 - 2022)**

**2017**: Moran’s I = 0.0821, p-value = 0.0577

**2018**: Moran’s I = 0.0952, p-value = 0.0423

**2019**: Moran’s I = 0.1410, p-value = 0.0149

**2020**: Moran’s I = 0.0875, p-value = 0.0835

**2021**: Moran’s I = 0.2013, p-value = 0.0024

**2022**: Moran’s I = 0.2133, p-value = 0.0015

**Key Insights**:

-   **2017–2019**: There is a gradual increase in spatial autocorrelation, with clustering becoming statistically significant by **2018** and peaking in **2019**.

-   **2020**: A slight drop in Moran’s I indicates weaker spatial clustering, and the p-value suggests the autocorrelation is no longer significant. This could indicate that drug-related cases became more dispersed or random in 2020.

-   **2021–2022**: A sharp rise in Moran’s I shows that spatial clustering of drug-related cases became very strong in these years, and it is statistically significant with p-values well below 0.05. Drug-related cases are now highly concentrated in certain areas.
:::

```{r}
# Plot Geary C Statistic over the years
ggplot(geary_c_results, aes(x = Year, y = Geary_C_Stat)) +
  geom_line() + 
  geom_point() +
  labs(title = "Geary C Statistic Trend (2017-2022)", 
       x = "Year", 
       y = "Geary C Statistic") +
  theme_minimal()
```

```{r}
# Plot p-values over the years
ggplot(geary_c_results, aes(x = Year, y = Geary_C_p_value)) +
  geom_line() + 
  geom_point() +
  geom_hline(yintercept = 0.05, linetype = "dashed", color = "red") +  # Mark significance threshold
  labs(title = "Geary C Test p-values (2017-2022)", 
       x = "Year", 
       y = "p-value") +
  theme_minimal()
```

::: {.callout-tip title="Reflection"}
**Geary’s C (2017 - 2022)**

**2017**: Geary’s C = 1.0258, p-value = 0.5714

**2018**: Geary’s C = 1.0037, p-value = 0.5106

**2019**: Geary’s C = 0.9167, p-value = 0.2260

**2020**: Geary’s C = 0.9528, p-value = 0.3234

**2021**: Geary’s C = 0.8489, p-value = 0.0433

**2022**: Geary’s C = 0.8377, p-value = 0.0292

**Key Insights**:

-   **2017–2018**: Geary’s C values are very close to 1, indicating no significant spatial autocorrelation, meaning the distribution of drug-related cases was largely random.

-   **2019**: The Geary’s C statistic starts to dip below 1, indicating emerging spatial autocorrelation, though it is not yet statistically significant.

-   **2020**: Geary’s C rises slightly, indicating a slight weakening of spatial autocorrelation, but the cases are still mostly random with no significant clustering.

-   **2021–2022**: A marked decrease in Geary’s C below 1, coupled with p-values dropping below 0.05, suggests significant clustering of similar values. This means that in the last two years, drug-related cases are no longer random and are now highly clustered.
:::

### 2.6.6 Conclusion

From 2017 to 2022, both Moran’s I and Geary’s C statistics reveal an evolving spatial structure of drug-related cases. While earlier years exhibit weaker or random spatial patterns, by 2021 and 2022, significant clustering emerged, indicating an increase in spatial autocorrelation. This shift reflects that drug-related incidents are becoming more concentrated in specific areas, which could suggest targeted intervention zones for policy and law enforcement.

## 2.7 Local Measures of Spatial Autocorrelation

Building on the insights gained from global measures, local spatial autocorrelation focuses on identifying specific regions within the broader area that deviate from global trends. Techniques like Local Moran’s I allow for the detection of localized clusters and outliers, revealing spatial heterogeneity that might be masked by global statistics. This localized approach is crucial for pinpointing areas of high significance, enabling targeted interventions and more refined spatial decision-making.

### 2.7.1 Local Moran's I

::: panel-tabset
## Year 2017

```{r}
set.seed(4242)
lisa_2017 <- wm_q_2017 %>% 
  mutate(local_moran = local_moran(
    no_cases, nb, wt, nsim = 99),
         .before = 1) %>%
  unnest(local_moran)
lisa_2017
```

### Visualising Local Moran’s I_i

```{r}
#| fig-width: 12
#| fig-height: 10
#| code-fold: true
#| code-summary: "Show the code"
tm_shape(lisa_2017)+
  tm_fill("ii", 
          palette = c("#b7dce9","#e1ecbb","#f5f3a6",
                      "#f8d887","#ec9a64","#d21b1c"),
          title = "Local Moran's I",
          midpoint = NA,
          legend.hist = TRUE, 
          legend.is.portrait = TRUE,
          legend.hist.z = 0.1) +
  tm_borders(col = "black", alpha = 0.6)+
  tm_layout(main.title = "Province-level Spatial Autocorrelation \n of drug use cases in Thailand",
            main.title.position = "center",
            main.title.size = 1.7,
            main.title.fontface = "bold",
            legend.title.size = 1.8,
            legend.text.size = 1.3,
            frame = TRUE) +
  tm_borders(alpha = 0.5) +
  tm_compass(type="8star", text.size = 1.5, size = 3, position=c("RIGHT", "TOP")) +
  tm_scale_bar(position=c("LEFT", "BOTTOM"), text.size=1.2) +
  tm_grid(labels.size = 1,alpha =0.2)
```

### Visualising Local Moran’s I_i p-value

```{r, fig.height=12, fig.width=12}
#| code-fold: true
#| code-summary: "Show the code"
tm_shape(lisa_2017)+
  tm_fill("p_ii_sim", 
          palette = c("#b7dce9","#c9e3d2","#f5f3a6","#ec9a64","#d21b1c"),
          title = "p-value",
          midpoint = NA,
          legend.hist = TRUE, 
          legend.is.portrait = TRUE,
          legend.hist.z = 0.1) +
  tm_borders(col = "black", alpha = 0.6)+
  tm_layout(main.title = "Statistical Significance of Spatial \n Autocorrelation of drug use cases in Thailand",
            main.title.position = "center",
            main.title.size = 1.7,
            main.title.fontface = "bold",
            legend.title.size = 1.8,
            legend.text.size = 1.3,
            frame = TRUE) +
  tm_borders(alpha = 0.5) +
  tm_compass(type="8star", text.size = 1.5, size = 3, position=c("RIGHT", "TOP")) +
  tm_scale_bar(position=c("LEFT", "BOTTOM"), text.size=1.2) +
  tm_grid(labels.size = 1,alpha =0.2)
```

### Visualising Statistically Significant Local Spatial Autocorrelation Map

```{r, fig.height=12, fig.width=12}
#| code-fold: true
#| code-summary: "Show the code"
lisa_2017_sig <- lisa_2017  %>%
  filter(p_ii_sim < 0.05) %>% mutate(label = province_en)

tm_shape(lisa_2017)+
  tm_polygons() +
  tm_borders(col = "black", alpha = 0.6)+
tm_shape(lisa_2017_sig)+
  tm_fill("ii", 
          palette = c("#b7dce9","#e1ecbb","#f5f3a6",
                      "#f8d887","#ec9a64","#d21b1c"),
          breaks = c(0, 0.001, 0.01, 0.05, 1),
          labels = c("0.001", "0.01", "0.05", "Not sig"),
          title = "Local Moran's I (p < 0.05)",
          midpoint = NA,
          legend.hist = TRUE, 
          legend.is.portrait = TRUE,
          legend.hist.z = 0.1) +
  tm_borders(col = "black", alpha = 0.6)+
  tm_layout(main.title = "Statistically Significant Village-Level Spatial \n Autocorrelation Map of drug use cases \n in Thailand",
            main.title.position = "center",
            main.title.size = 1.7,
            main.title.fontface = "bold",
            legend.title.size = 1.8,
            legend.text.size = 1.3,
            frame = TRUE) +
  tm_borders(alpha = 0.5) +
  tm_compass(type="8star", text.size = 1.5, size = 3, position=c("RIGHT", "TOP")) +
  tm_scale_bar(position=c("LEFT", "BOTTOM"), text.size=1.2) +
  tm_grid(labels.size = 1,alpha =0.2)
```

## Year 2018

```{r}
set.seed(4242)
lisa_2018 <- wm_q_2018 %>% 
  mutate(local_moran = local_moran(
    no_cases, nb, wt, nsim = 99),
         .before = 1) %>%
  unnest(local_moran)
lisa_2018
```

### Visualising Local Moran’s I_i

```{r, fig.height=12, fig.width=15}
#| code-fold: true
#| code-summary: "Show the code"
tm_shape(lisa_2018)+
  tm_fill("ii", 
          palette = c("#b7dce9","#e1ecbb","#f5f3a6",
                      "#f8d887","#ec9a64","#d21b1c"),
          title = "Local Moran's I",
          midpoint = NA,
          legend.hist = TRUE, 
          legend.is.portrait = TRUE,
          legend.hist.z = 0.1) +
  tm_borders(col = "black", alpha = 0.6)+
  tm_layout(main.title = "Province-level Spatial Autocorrelation \n of drug use cases in Thailand",
            main.title.position = "center",
            main.title.size = 1.7,
            main.title.fontface = "bold",
            legend.title.size = 1.8,
            legend.text.size = 1.3,
            frame = TRUE) +
  tm_borders(alpha = 0.5) +
  tm_compass(type="8star", text.size = 1.5, size = 3, position=c("RIGHT", "TOP")) +
  tm_scale_bar(position=c("LEFT", "BOTTOM"), text.size=1.2) +
  tm_grid(labels.size = 1,alpha =0.2)
```

### Visualising Local Moran’s I_i p-value

```{r, fig.height=12, fig.width=12}
#| code-fold: true
#| code-summary: "Show the code"
tm_shape(lisa_2018)+
  tm_fill("p_ii_sim", 
          palette = c("#b7dce9","#c9e3d2","#f5f3a6","#ec9a64","#d21b1c"),
          title = "p-value",
          midpoint = NA,
          legend.hist = TRUE, 
          legend.is.portrait = TRUE,
          legend.hist.z = 0.1) +
  tm_borders(col = "black", alpha = 0.6)+
  tm_layout(main.title = "Statistical Significance of Spatial \n Autocorrelation of drug use cases in Thailand",
            main.title.position = "center",
            main.title.size = 1.7,
            main.title.fontface = "bold",
            legend.title.size = 1.8,
            legend.text.size = 1.3,
            frame = TRUE) +
  tm_borders(alpha = 0.5) +
  tm_compass(type="8star", text.size = 1.5, size = 3, position=c("RIGHT", "TOP")) +
  tm_scale_bar(position=c("LEFT", "BOTTOM"), text.size=1.2) +
  tm_grid(labels.size = 1,alpha =0.2)
```

### Visualising Statistically Significant Local Spatial Autocorrelation Map

```{r, fig.height=12, fig.width=12}
#| code-fold: true
#| code-summary: "Show the code"
lisa_2018_sig <- lisa_2018  %>%
  filter(p_ii_sim < 0.05) %>% mutate(label = province_en)

tm_shape(lisa_2018)+
  tm_polygons() +
  tm_borders(col = "black", alpha = 0.6)+
tm_shape(lisa_2018_sig)+
  tm_fill("ii", 
          palette = c("#b7dce9","#e1ecbb","#f5f3a6",
                      "#f8d887","#ec9a64","#d21b1c"),
          breaks = c(0, 0.001, 0.01, 0.05, 1),
          labels = c("0.001", "0.01", "0.05", "Not sig"),
          title = "Local Moran's I (p < 0.05)",
          midpoint = NA,
          legend.hist = TRUE, 
          legend.is.portrait = TRUE,
          legend.hist.z = 0.1) +
  tm_borders(col = "black", alpha = 0.6)+
  tm_layout(main.title = "Statistically Significant Village-Level Spatial \n Autocorrelation Map of drug use cases \n in Thailand",
            main.title.position = "center",
            main.title.size = 1.7,
            main.title.fontface = "bold",
            legend.title.size = 1.8,
            legend.text.size = 1.3,
            frame = TRUE) +
  tm_borders(alpha = 0.5) +
  tm_compass(type="8star", text.size = 1.5, size = 3, position=c("RIGHT", "TOP")) +
  tm_scale_bar(position=c("LEFT", "BOTTOM"), text.size=1.2) +
  tm_grid(labels.size = 1,alpha =0.2)
```

## Year 2019

```{r}
set.seed(4242)
lisa_2019 <- wm_q_2019 %>% 
  mutate(local_moran = local_moran(
    no_cases, nb, wt, nsim = 99),
         .before = 1) %>%
  unnest(local_moran)
lisa_2019
```

### Visualising Local Moran’s I_i

```{r, fig.height=12, fig.width=15}
#| code-fold: true
#| code-summary: "Show the code"
tm_shape(lisa_2019)+
  tm_fill("ii", 
          palette = c("#b7dce9","#e1ecbb","#f5f3a6",
                      "#f8d887","#ec9a64","#d21b1c"),
          title = "Local Moran's I",
          midpoint = NA,
          legend.hist = TRUE, 
          legend.is.portrait = TRUE,
          legend.hist.z = 0.1) +
  tm_borders(col = "black", alpha = 0.6)+
  tm_layout(main.title = "Province-level Spatial Autocorrelation \n of drug use cases in Thailand",
            main.title.position = "center",
            main.title.size = 1.7,
            main.title.fontface = "bold",
            legend.title.size = 1.8,
            legend.text.size = 1.3,
            frame = TRUE) +
  tm_borders(alpha = 0.5) +
  tm_compass(type="8star", text.size = 1.5, size = 3, position=c("RIGHT", "TOP")) +
  tm_scale_bar(position=c("LEFT", "BOTTOM"), text.size=1.2) +
  tm_grid(labels.size = 1,alpha =0.2)
```

### Visualising Local Moran’s I_i p-value

```{r, fig.height=12, fig.width=12}
#| code-fold: true
#| code-summary: "Show the code"
tm_shape(lisa_2019)+
  tm_fill("p_ii_sim", 
          palette = c("#b7dce9","#c9e3d2","#f5f3a6","#ec9a64","#d21b1c"),
          title = "p-value",
          midpoint = NA,
          legend.hist = TRUE, 
          legend.is.portrait = TRUE,
          legend.hist.z = 0.1) +
  tm_borders(col = "black", alpha = 0.6)+
  tm_layout(main.title = "Statistical Significance of Spatial \n Autocorrelation of drug use cases in Thailand",
            main.title.position = "center",
            main.title.size = 1.7,
            main.title.fontface = "bold",
            legend.title.size = 1.8,
            legend.text.size = 1.3,
            frame = TRUE) +
  tm_borders(alpha = 0.5) +
  tm_compass(type="8star", text.size = 1.5, size = 3, position=c("RIGHT", "TOP")) +
  tm_scale_bar(position=c("LEFT", "BOTTOM"), text.size=1.2) +
  tm_grid(labels.size = 1,alpha =0.2)
```

### Visualising Statistically Significant Local Spatial Autocorrelation Map

```{r, fig.height=12, fig.width=12}
#| code-fold: true
#| code-summary: "Show the code"
lisa_2019_sig <- lisa_2019  %>%
  filter(p_ii_sim < 0.05) %>% mutate(label = province_en)

tm_shape(lisa_2019)+
  tm_polygons() +
  tm_borders(col = "black", alpha = 0.6)+
tm_shape(lisa_2019_sig)+
  tm_fill("ii", 
          palette = c("#b7dce9","#e1ecbb","#f5f3a6",
                      "#f8d887","#ec9a64","#d21b1c"),
          breaks = c(0, 0.001, 0.01, 0.05, 1),
          labels = c("0.001", "0.01", "0.05", "Not sig"),
          title = "Local Moran's I (p < 0.05)",
          midpoint = NA,
          legend.hist = TRUE, 
          legend.is.portrait = TRUE,
          legend.hist.z = 0.1) +
  tm_borders(col = "black", alpha = 0.6)+
  tm_layout(main.title = "Statistically Significant Village-Level Spatial \n Autocorrelation Map of drug use cases \n in Thailand",
            main.title.position = "center",
            main.title.size = 1.7,
            main.title.fontface = "bold",
            legend.title.size = 1.8,
            legend.text.size = 1.3,
            frame = TRUE) +
  tm_borders(alpha = 0.5) +
  tm_compass(type="8star", text.size = 1.5, size = 3, position=c("RIGHT", "TOP")) +
  tm_scale_bar(position=c("LEFT", "BOTTOM"), text.size=1.2) +
  tm_grid(labels.size = 1,alpha =0.2)
```

## Year 2020

```{r}
set.seed(4242)
lisa_2020 <- wm_q_2020 %>% 
  mutate(local_moran = local_moran(
    no_cases, nb, wt, nsim = 99),
         .before = 1) %>%
  unnest(local_moran)
lisa_2020
```

### Visualising Local Moran’s I_i

```{r, fig.height=12, fig.width=15}
#| code-fold: true
#| code-summary: "Show the code"
tm_shape(lisa_2020)+
  tm_fill("ii", 
          palette = c("#b7dce9","#e1ecbb","#f5f3a6",
                      "#f8d887","#ec9a64","#d21b1c"),
          title = "Local Moran's I",
          midpoint = NA,
          legend.hist = TRUE, 
          legend.is.portrait = TRUE,
          legend.hist.z = 0.1) +
  tm_borders(col = "black", alpha = 0.6)+
  tm_layout(main.title = "Province-level Spatial Autocorrelation \n of drug use cases in Thailand",
            main.title.position = "center",
            main.title.size = 1.7,
            main.title.fontface = "bold",
            legend.title.size = 1.8,
            legend.text.size = 1.3,
            frame = TRUE) +
  tm_borders(alpha = 0.5) +
  tm_compass(type="8star", text.size = 1.5, size = 3, position=c("RIGHT", "TOP")) +
  tm_scale_bar(position=c("LEFT", "BOTTOM"), text.size=1.2) +
  tm_grid(labels.size = 1,alpha =0.2)
```

### Visualising Local Moran’s I_i p-value

```{r, fig.height=12, fig.width=12}
#| code-fold: true
#| code-summary: "Show the code"
tm_shape(lisa_2020)+
  tm_fill("p_ii_sim", 
          palette = c("#b7dce9","#c9e3d2","#f5f3a6","#ec9a64","#d21b1c"),
          title = "p-value",
          midpoint = NA,
          legend.hist = TRUE, 
          legend.is.portrait = TRUE,
          legend.hist.z = 0.1) +
  tm_borders(col = "black", alpha = 0.6)+
  tm_layout(main.title = "Statistical Significance of Spatial \n Autocorrelation of drug use cases in Thailand",
            main.title.position = "center",
            main.title.size = 1.7,
            main.title.fontface = "bold",
            legend.title.size = 1.8,
            legend.text.size = 1.3,
            frame = TRUE) +
  tm_borders(alpha = 0.5) +
  tm_compass(type="8star", text.size = 1.5, size = 3, position=c("RIGHT", "TOP")) +
  tm_scale_bar(position=c("LEFT", "BOTTOM"), text.size=1.2) +
  tm_grid(labels.size = 1,alpha =0.2)
```

### Visualising Statistically Significant Local Spatial Autocorrelation Map

```{r, fig.height=12, fig.width=12}
#| code-fold: true
#| code-summary: "Show the code"
lisa_2020_sig <- lisa_2020  %>%
  filter(p_ii_sim < 0.05) %>% mutate(label = province_en)

tm_shape(lisa_2020)+
  tm_polygons() +
  tm_borders(col = "black", alpha = 0.6)+
tm_shape(lisa_2020_sig)+
  tm_fill("ii", 
          palette = c("#b7dce9","#e1ecbb","#f5f3a6",
                      "#f8d887","#ec9a64","#d21b1c"),
          breaks = c(0, 0.001, 0.01, 0.05, 1),
          labels = c("0.001", "0.01", "0.05", "Not sig"),
          title = "Local Moran's I (p < 0.05)",
          midpoint = NA,
          legend.hist = TRUE, 
          legend.is.portrait = TRUE,
          legend.hist.z = 0.1) +
  tm_borders(col = "black", alpha = 0.6)+
  tm_layout(main.title = "Statistically Significant Village-Level Spatial \n Autocorrelation Map of drug use cases \n in Thailand",
            main.title.position = "center",
            main.title.size = 1.7,
            main.title.fontface = "bold",
            legend.title.size = 1.8,
            legend.text.size = 1.3,
            frame = TRUE) +
  tm_borders(alpha = 0.5) +
  tm_compass(type="8star", text.size = 1.5, size = 3, position=c("RIGHT", "TOP")) +
  tm_scale_bar(position=c("LEFT", "BOTTOM"), text.size=1.2) +
  tm_grid(labels.size = 1,alpha =0.2)
```

## Year 2021

```{r}
set.seed(4242)
lisa_2021 <- wm_q_2021 %>% 
  mutate(local_moran = local_moran(
    no_cases, nb, wt, nsim = 99),
         .before = 1) %>%
  unnest(local_moran)
lisa_2021
```

### Visualising Local Moran’s I_i

```{r, fig.height=12, fig.width=15}
#| code-fold: true
#| code-summary: "Show the code"
tm_shape(lisa_2021)+
  tm_fill("ii", 
          palette = c("#b7dce9","#e1ecbb","#f5f3a6",
                      "#f8d887","#ec9a64","#d21b1c"),
          title = "Local Moran's I",
          midpoint = NA,
          legend.hist = TRUE, 
          legend.is.portrait = TRUE,
          legend.hist.z = 0.1) +
  tm_borders(col = "black", alpha = 0.6)+
  tm_layout(main.title = "Province-level Spatial Autocorrelation \n of drug use cases in Thailand",
            main.title.position = "center",
            main.title.size = 1.7,
            main.title.fontface = "bold",
            legend.title.size = 1.8,
            legend.text.size = 1.3,
            frame = TRUE) +
  tm_borders(alpha = 0.5) +
  tm_compass(type="8star", text.size = 1.5, size = 3, position=c("RIGHT", "TOP")) +
  tm_scale_bar(position=c("LEFT", "BOTTOM"), text.size=1.2) +
  tm_grid(labels.size = 1,alpha =0.2)
```

### Visualising Local Moran’s I_i p-value

```{r, fig.height=12, fig.width=12}
#| code-fold: true
#| code-summary: "Show the code"
tm_shape(lisa_2021)+
  tm_fill("p_ii_sim", 
          palette = c("#b7dce9","#c9e3d2","#f5f3a6","#ec9a64","#d21b1c"),
          title = "p-value",
          midpoint = NA,
          legend.hist = TRUE, 
          legend.is.portrait = TRUE,
          legend.hist.z = 0.1) +
  tm_borders(col = "black", alpha = 0.6)+
  tm_layout(main.title = "Statistical Significance of Spatial \n Autocorrelation of drug use cases in Thailand",
            main.title.position = "center",
            main.title.size = 1.7,
            main.title.fontface = "bold",
            legend.title.size = 1.8,
            legend.text.size = 1.3,
            frame = TRUE) +
  tm_borders(alpha = 0.5) +
  tm_compass(type="8star", text.size = 1.5, size = 3, position=c("RIGHT", "TOP")) +
  tm_scale_bar(position=c("LEFT", "BOTTOM"), text.size=1.2) +
  tm_grid(labels.size = 1,alpha =0.2)
```

### Visualising Statistically Significant Local Spatial Autocorrelation Map

```{r, fig.height=12, fig.width=12}
#| code-fold: true
#| code-summary: "Show the code"
lisa_2021_sig <- lisa_2021  %>%
  filter(p_ii_sim < 0.05) %>% mutate(label = province_en)

tm_shape(lisa_2021)+
  tm_polygons() +
  tm_borders(col = "black", alpha = 0.6)+
tm_shape(lisa_2021_sig)+
  tm_fill("ii", 
          palette = c("#b7dce9","#e1ecbb","#f5f3a6",
                      "#f8d887","#ec9a64","#d21b1c"),
          breaks = c(0, 0.001, 0.01, 0.05, 1),
          labels = c("0.001", "0.01", "0.05", "Not sig"),
          title = "Local Moran's I (p < 0.05)",
          midpoint = NA,
          legend.hist = TRUE, 
          legend.is.portrait = TRUE,
          legend.hist.z = 0.1) +
  tm_borders(col = "black", alpha = 0.6)+
  tm_layout(main.title = "Statistically Significant Village-Level Spatial \n Autocorrelation Map of drug use cases \n in Thailand",
            main.title.position = "center",
            main.title.size = 1.7,
            main.title.fontface = "bold",
            legend.title.size = 1.8,
            legend.text.size = 1.3,
            frame = TRUE) +
  tm_borders(alpha = 0.5) +
  tm_compass(type="8star", text.size = 1.5, size = 3, position=c("RIGHT", "TOP")) +
  tm_scale_bar(position=c("LEFT", "BOTTOM"), text.size=1.2) +
  tm_grid(labels.size = 1,alpha =0.2)
```

## Year 2022

```{r}
lisa_2022 <- wm_q_2022 %>% 
  mutate(local_moran = local_moran(
    no_cases, nb, wt, nsim = 99),
         .before = 1) %>%
  unnest(local_moran)
lisa_2022
```

### Visualising Local Moran’s I_i

```{r, fig.height=12, fig.width=15}
#| code-fold: true
#| code-summary: "Show the code"
tm_shape(lisa_2022)+
  tm_fill("ii", 
          palette = c("#b7dce9","#e1ecbb","#f5f3a6",
                      "#f8d887","#ec9a64","#d21b1c"),
          title = "Local Moran's I",
          midpoint = NA,
          legend.hist = TRUE, 
          legend.is.portrait = TRUE,
          legend.hist.z = 0.1) +
  tm_borders(col = "black", alpha = 0.6)+
  tm_layout(main.title = "Province-level Spatial Autocorrelation \n of drug use cases in Thailand",
            main.title.position = "center",
            main.title.size = 1.7,
            main.title.fontface = "bold",
            legend.title.size = 1.8,
            legend.text.size = 1.3,
            frame = TRUE) +
  tm_borders(alpha = 0.5) +
  tm_compass(type="8star", text.size = 1.5, size = 3, position=c("RIGHT", "TOP")) +
  tm_scale_bar(position=c("LEFT", "BOTTOM"), text.size=1.2) +
  tm_grid(labels.size = 1,alpha =0.2)
```

### Visualising Local Moran’s I_i p-value

```{r, fig.height=12, fig.width=12}
#| code-fold: true
#| code-summary: "Show the code"
tm_shape(lisa_2022)+
  tm_fill("p_ii_sim", 
          palette = c("#b7dce9","#c9e3d2","#f5f3a6","#ec9a64","#d21b1c"),
          title = "p-value",
          midpoint = NA,
          legend.hist = TRUE, 
          legend.is.portrait = TRUE,
          legend.hist.z = 0.1) +
  tm_borders(col = "black", alpha = 0.6)+
  tm_layout(main.title = "Statistical Significance of Spatial \n Autocorrelation of drug use cases in Thailand",
            main.title.position = "center",
            main.title.size = 1.7,
            main.title.fontface = "bold",
            legend.title.size = 1.8,
            legend.text.size = 1.3,
            frame = TRUE) +
  tm_borders(alpha = 0.5) +
  tm_compass(type="8star", text.size = 1.5, size = 3, position=c("RIGHT", "TOP")) +
  tm_scale_bar(position=c("LEFT", "BOTTOM"), text.size=1.2) +
  tm_grid(labels.size = 1,alpha =0.2)
```

### Visualising Statistically Significant Local Spatial Autocorrelation Map

```{r, fig.height=12, fig.width=12}
#| code-fold: true
#| code-summary: "Show the code"
lisa_2022_sig <- lisa_2022  %>%
  filter(p_ii_sim < 0.05) %>% mutate(label = province_en)

tm_shape(lisa_2022)+
  tm_polygons() +
  tm_borders(col = "black", alpha = 0.6)+
tm_shape(lisa_2022_sig)+
  tm_fill("ii", 
          palette = c("#b7dce9","#e1ecbb","#f5f3a6",
                      "#f8d887","#ec9a64","#d21b1c"),
          breaks = c(0, 0.001, 0.01, 0.05, 1),
          labels = c("0.001", "0.01", "0.05", "Not sig"),
          title = "Local Moran's I (p < 0.05)",
          midpoint = NA,
          legend.hist = TRUE, 
          legend.is.portrait = TRUE,
          legend.hist.z = 0.1) +
  tm_borders(col = "black", alpha = 0.6)+
  tm_layout(main.title = "Statistically Significant Village-Level Spatial \n Autocorrelation Map of drug use cases \n in Thailand",
            main.title.position = "center",
            main.title.size = 1.7,
            main.title.fontface = "bold",
            legend.title.size = 1.8,
            legend.text.size = 1.3,
            frame = TRUE) +
  tm_borders(alpha = 0.5) +
  tm_compass(type="8star", text.size = 1.5, size = 3, position=c("RIGHT", "TOP")) +
  tm_scale_bar(position=c("LEFT", "BOTTOM"), text.size=1.2) +
  tm_grid(labels.size = 1,alpha =0.2)
```
:::

### 2.7.2 Statistically Significant Local Spatial Autocorrelation Map (2017 - 2022)

```{r, fig.height=12, fig.width=12}
# Load grid package for overall title
library(grid)

# List of data for each year
lisa_data <- list(
  "2017" = list(lisa = lisa_2017, sig = lisa_2017_sig),
  "2018" = list(lisa = lisa_2018, sig = lisa_2018_sig),
  "2019" = list(lisa = lisa_2019, sig = lisa_2019_sig),
  "2020" = list(lisa = lisa_2020, sig = lisa_2020_sig),
  "2021" = list(lisa = lisa_2021, sig = lisa_2021_sig),
  "2022" = list(lisa = lisa_2022, sig = lisa_2022_sig)
)

# Initialize an empty list to store tmap objects
maps <- list()

# Loop through each year's data and create a map
for (year in names(lisa_data)) {
  map <- tm_shape(lisa_data[[year]]$lisa) +
    tm_polygons(id = "label") +
    tm_borders(col = "black", alpha = 0.6) +
  tm_shape(lisa_data[[year]]$sig) +
    tm_fill("ii", 
            palette = c("#b7dce9","#e1ecbb","#f5f3a6",
                        "#f8d887","#ec9a64","#d21b1c"),
            breaks = c(0, 0.001, 0.01, 0.05, 1),
            labels = c("0.001", "0.01", "0.05", "Not sig"),
            title = paste("Local Moran's I", year, "(p < 0.05)"),
            midpoint = NA,
            id = "label") +
    tm_borders(col = "black", alpha = 0.6) +
    # Add title to individual plot
    tm_layout(title = paste("Year", year), title.position = c("center", "top"))
  
  # Store the map in the list
  maps[[year]] <- map
}

# Arrange the maps side by side
tmap_arrange(
  maps$`2017`, maps$`2018`, maps$`2019`,
  maps$`2020`, maps$`2021`, maps$`2022`,
  ncol = 3
)
```

### 2.7.3 Visualising Statistically Significant Local Spatial Autocorrelation Map

The Local Indicator of Spatial Association (LISA) can provide insights into spatial clustering and outliers of drug-related incidents. Specifically, LISA identifies areas with significant spatial patterns, where the clustering of similar values occurs or where outliers stand out. This can help detect areas with unusually high or low concentrations of drug offenses.

Here’s how we can interpret the LISA classifications for drug use cases:

-   **High-Low Outliers**: Provinces with a high number of drug use cases surrounded by provinces with lower numbers. These could be hotspots of drug activity that differ significantly from their neighbors.

-   **Low-High Outliers**: Provinces with a low number of drug use cases, but surrounded by provinces with higher levels of drug offenses. This could indicate areas with protective factors or lower vulnerability, even though they are located near hotspots.

-   **High-High Clusters**: Provinces with a high concentration of drug use cases, surrounded by provinces that also have high numbers of offenses. This indicates regional hotspots of drug activity where intervention may be needed.

-   **Low-Low Clusters**: Provinces with a low number of drug use cases, surrounded by provinces with similarly low levels. These regions could represent areas with effective prevention measures or lower exposure to drug-related issues.

In each year's `lisa` sf data.frame that we created when calculating local Moran’s I, we can find three fields contain the LISA categories. They are `mean`, `median` and `pysal`. We will use mean column to visualise LISA classification maps with relevant tmap functions.

#### 2.7.3.1 Country-wide view
```{r}
#| fig-width: 12
#| fig-height: 10
#| code-fold: true
#| code-summary: "Show the code"

tmap_mode("plot")
study_area_lisa_2017 <- tm_shape(lisa_2017)+
  tm_polygons() +
  tm_borders(col = "black", alpha = 0.6)+
tm_shape(lisa_2017_sig)+
  tm_fill("mean", 
          palette = c("#b7dce9","#ec9a64","#e1ecbb", "#d21b1c"),
          title = "LISA class",
          midpoint = NA,
          legend.hist = TRUE, 
          legend.is.portrait = TRUE,
          legend.hist.z = 0.1) +
  tm_borders(col = "black", alpha = 0.6)+
  tm_layout(main.title = "2017 Thai LISA map",
            main.title.size = 1,
            legend.outside = TRUE,
            legend.outside.position = "right",
            frame = TRUE) +
  tm_borders(alpha = 0.5) +
  tm_scale_bar(position=c("LEFT", "BOTTOM"), text.size=1.2) +
  tm_grid(labels.size = 1,alpha =0.2)

study_area_lisa_2018 <- tm_shape(lisa_2018)+
  tm_polygons() +
  tm_borders(col = "black", alpha = 0.6)+
tm_shape(lisa_2018_sig)+
  tm_fill("mean", 
          palette = c("#b7dce9","#ec9a64","#e1ecbb", "#d21b1c"),
          title = "LISA class",
          midpoint = NA,
          legend.hist = TRUE, 
          legend.is.portrait = TRUE,
          legend.hist.z = 0.1) +
  tm_borders(col = "black", alpha = 0.6)+
  tm_layout(main.title = "2018 Thai LISA map",
            main.title.size = 1,
            legend.outside = TRUE,
            legend.outside.position = "right",
            frame = TRUE) +
  tm_borders(alpha = 0.5) +
  tm_scale_bar(position=c("LEFT", "BOTTOM"), text.size=1.2) +
  tm_grid(labels.size = 1,alpha =0.2)

study_area_lisa_2019 <- tm_shape(lisa_2019)+
  tm_polygons() +
  tm_borders(col = "black", alpha = 0.6)+
tm_shape(lisa_2019_sig)+
  tm_fill("mean", 
          palette = c("#b7dce9","#ec9a64","#e1ecbb", "#d21b1c"),
          title = "LISA class",
          midpoint = NA,
          legend.hist = TRUE, 
          legend.is.portrait = TRUE,
          legend.hist.z = 0.1) +
  tm_borders(col = "black", alpha = 0.6)+
  tm_layout(main.title = "2019 Thai LISA map",
            main.title.size = 1,
            legend.outside = TRUE,
            legend.outside.position = "right",
            frame = TRUE) +
  tm_borders(alpha = 0.5) +
  tm_scale_bar(position=c("LEFT", "BOTTOM"), text.size=1.2) +
  tm_grid(labels.size = 1,alpha =0.2)

study_area_lisa_2020 <- tm_shape(lisa_2020)+
  tm_polygons() +
  tm_borders(col = "black", alpha = 0.6)+
tm_shape(lisa_2020_sig)+
  tm_fill("mean", 
          palette = c("#b7dce9","#ec9a64","#e1ecbb", "#d21b1c"),
          title = "LISA class",
          midpoint = NA,
          legend.hist = TRUE, 
          legend.is.portrait = TRUE,
          legend.hist.z = 0.1) +
  tm_borders(col = "black", alpha = 0.6)+
  tm_layout(main.title = "2020 Thai LISA map",
            main.title.size = 1,
            legend.outside = TRUE,
            legend.outside.position = "right",
            frame = TRUE) +
  tm_borders(alpha = 0.5) +
  tm_scale_bar(position=c("LEFT", "BOTTOM"), text.size=1.2) +
  tm_grid(labels.size = 1,alpha =0.2)

study_area_lisa_2021 <- tm_shape(lisa_2021)+
  tm_polygons() +
  tm_borders(col = "black", alpha = 0.6)+
tm_shape(lisa_2021_sig)+
  tm_fill("mean", 
          palette = c("#b7dce9","#ec9a64","#e1ecbb", "#d21b1c"),
          title = "LISA class",
          midpoint = NA,
          legend.hist = TRUE, 
          legend.is.portrait = TRUE,
          legend.hist.z = 0.1) +
  tm_borders(col = "black", alpha = 0.6)+
  tm_layout(main.title = "2021 Thai LISA map",
            main.title.size = 1,
            legend.outside = TRUE,
            legend.outside.position = "right",
            frame = TRUE) +
  tm_borders(alpha = 0.5) +
  tm_scale_bar(position=c("LEFT", "BOTTOM"), text.size=1.2) +
  tm_grid(labels.size = 1,alpha =0.2)

study_area_lisa_2022 <- tm_shape(lisa_2022)+
  tm_polygons() +
  tm_borders(col = "black", alpha = 0.6)+
tm_shape(lisa_2022_sig)+
  tm_fill("mean", 
          palette = c("#b7dce9","#ec9a64","#e1ecbb", "#d21b1c"),
          title = "LISA class",
          midpoint = NA,
          legend.hist = TRUE, 
          legend.is.portrait = TRUE,
          legend.hist.z = 0.1) +
  tm_borders(col = "black", alpha = 0.6)+
  tm_layout(main.title = "2022 Thai LISA map",
            main.title.size = 1,
            legend.outside = TRUE,
            legend.outside.position = "right",
            frame = TRUE) +
  tm_borders(alpha = 0.5) +
  tm_scale_bar(position=c("LEFT", "BOTTOM"), text.size=1.2) +
  tm_grid(labels.size = 1,alpha =0.2)
```
::: panel-tabset
## Year 2017
```{r}
study_area_lisa_2017
```
## Year 2018
```{r}
study_area_lisa_2018
```
## Year 2019
```{r}
study_area_lisa_2019
```
## Year 2020
```{r}
study_area_lisa_2020
```
## Year 2021
```{r}
study_area_lisa_2021
```
## Year 2022
```{r}
study_area_lisa_2022
```
:::

On a national scale, provinces, especially smaller ones, may appear too small to analyze effectively, making it difficult to clearly see the distribution of the LISA classifications. A regional view, with better zoom and focus, can improve the clarity of visualization. It becomes easier to distinguish between clusters and outliers, especially in densely populated or small-area provinces. 

#### 2.7.3.2 Regional view

Thailand is variably divided into different sets of regions, the most notable of which are the six-region grouping used in geographic studies, and the four-region grouping consistent with the Monthon administrative regional grouping system formerly used by the Ministry of Interior. These regions are the largest subdivisions of the country.

In contrast to the administrative divisions of the provinces of Thailand, the regions no longer have an administrative character, but are used for statistical or academic purposes.

A six-region system is commonly used for geographical and scientific purposes. This system dates to 1935. It was formalised in 1977 by the National Geographical Committee, which was appointed by the National Research Council. It divides the country into the following regions:

-   Northern Thailand
-   Northeastern Thailand
-   Western Thailand
-   Central Thailand
-   Eastern Thailand
-   Southern Thailand

The four-region system, used in some administrative and statistical contexts, and also as a loose cultural grouping, includes the western and eastern regions within the central region, while grouping the provinces of Sukhothai, Phitsanulok, Phichit, Kamphaeng Phet, Phetchabun, Nakhon Sawan, and Uthai Thani in the northern region. This is also the regional system most commonly used on national television, when discussing regional events. It divides the country into the following regions:

-   Northern Thailand
-   Northeastern Thailand (Isan)
-   Central Thailand
-   Southern Thailand

The Thai Meteorological Department divides the country into six regions for meteorological purposes. It differs from the four-region system in that the east is regarded as a separate region, the south is divided into east and west coasts, and Nakhon Sawan and Uthai Thani are grouped in the central region.

![](image/distribution.png)

::: {.callout-tip title="Notes"}
LISA relies on the spatial relationships between neighboring areas. If you remove certain provinces from the analysis when zooming into a region, the LISA statistics could change due to the loss of spatial context. To maintain the integrity of LISA classifications in a regional view, we will ensure that the entire neighborhood structure is still considered. Even though you may only visualize a specific region, the calculations should still include all neighboring provinces, not just those within the selected region.

It is important to keep the spatial dependencies intact by including all neighboring provinces in the LISA calculations. This ensures that the regional LISA classifications remain consistent with the national analysis, and the spatial clustering or outlier detection is not compromised due to changes in the geographical scope. The regional view should be treated as a zoomed-in perspective of the national LISA results, without altering the underlying spatial relationships.
:::

Given the geographical scope of the study, we will adopt a six-region geographical distribution, focusing on the provincial level. This approach not only allows for a regionally nuanced analysis but also reduces the computational load within the R environment, making the analysis more efficient.

```{r}
# Define provinces for each region
northeastern <- c("Amnat Charoen", "Bueng Kan", "Buri Ram", "Chaiyaphum", "Kalasin", 
                  "Khon Kaen", "Loei", "Maha Sarakham", "Mukdahan", "Nakhon Phanom", 
                  "Nakhon Ratchasima", "Nong Bua Lam Phu", "Nong Khai", "Roi Et", 
                  "Sakon Nakhon", "Si Sa Ket", "Surin", "Ubon Ratchathani", "Udon Thani", 
                  "Yasothon")

northern <- c("Chiang Mai", "Chiang Rai", "Lampang", "Lamphun", "Mae Hong Son", 
              "Nan", "Phayao", "Phrae", "Uttaradit")

western <- c("Tak", "Kanchanaburi", "Ratchaburi", "Phetchaburi", "Prachuap Khiri Khan")

central <- c("Kamphaeng Phet", "Phetchabun", "Phichit", "Phitsanulok", "Sukhothai", 
             "Nakhon Sawan", "Uthai Thani", "Ang Thong", "Bangkok", "Chai Nat", 
             "Lop Buri", "Nakhon Pathom", "Nonthaburi", "Pathum Thani", 
             "Phra Nakhon Si Ayutthaya", "Samut Prakan", "Samut Sakhon", 
             "Samut Songkhram", "Saraburi", "Sing Buri", "Suphan Buri", "Nakhon Nayok")

eastern <- c("Chachoengsao", "Chanthaburi", "Chon Buri", "Prachin Buri", "Rayong", 
             "Sa Kaeo", "Trat")

southern <- c("Chumphon", "Nakhon Si Thammarat", "Narathiwat", "Pattani", 
              "Phatthalung", "Songkhla", "Surat Thani", "Yala", "Krabi", 
              "Phangnga", "Phuket", "Ranong", "Satun", "Trang")
```

Using a combination of the **Local Moran’s I** plot, which visualizes the degree of spatial autocorrelation, and the **p-value** plot, which highlights statistically significant areas, we can gain deeper insights into the spatial dynamics of drug use incidents within the region. This dual visualization approach ensures that identified patterns are both meaningful and reliable, allowing for more informed decision-making in policy development and resource allocation to tackle drug-related issues in specific regions.

::: {.callout-tip title="Notes"}
The **Local Moran's I plot** and the **p-value** of Local Moran's I plot work together to help identify significant spatial patterns in the distribution of drug use cases across regions. The Local Moran's I plot shows the degree of spatial autocorrelation, indicating where clusters of similar values (either high or low) occur. This plot helps highlight potential hotspots (high values surrounded by high values) or cold spots (low values surrounded by low values), as well as potential outliers (where high values are surrounded by low values or vice versa).

However, the Local Moran's I values alone do not indicate whether these patterns are statistically significant. This is where the p-value of Local Moran’s I plot comes into play. It shows the significance levels of the spatial patterns, with red areas indicating highly significant clusters and blue/green areas representing non-significant patterns. This plot helps validate whether the clusters or outliers seen in the Local Moran’s I plot are meaningful or if they occurred randomly.

**By using both plots together**, we can accurately classify regions into **LISA categories** such as High-High clusters (significant hotspots of high drug use cases), Low-Low clusters (regions of low drug use cases surrounded by similar values), and outliers (provinces where values deviate significantly from their neighbors). The combination of these plots ensures that we can distinguish between true spatial patterns and random variation, leading to more reliable insights into the distribution of drug-related incidents.
:::


::: panel-tabset
## Year 2017

```{r}
#| code-fold: true
#| code-summary: "Show the code"
northeastern_lisa_2017 <- lisa_2017 %>% filter(province_en %in% northeastern)
northern_lisa_2017 <- lisa_2017 %>% filter(province_en %in% northern)
western_lisa_2017 <- lisa_2017 %>% filter(province_en %in% western)
central_lisa_2017 <- lisa_2017 %>% filter(province_en %in% central)
eastern_lisa_2017 <- lisa_2017 %>% filter(province_en %in% eastern)
southern_lisa_2017 <- lisa_2017 %>% filter(province_en %in% southern)

northeastern_lisa_2017_sig <- lisa_2017_sig %>% filter(province_en %in% northeastern)
northern_lisa_2017_sig <- lisa_2017_sig %>% filter(province_en %in% northern)
western_lisa_2017_sig <- lisa_2017_sig %>% filter(province_en %in% western)
central_lisa_2017_sig <- lisa_2017_sig %>% filter(province_en %in% central)
eastern_lisa_2017_sig <- lisa_2017_sig %>% filter(province_en %in% eastern)
southern_lisa_2017_sig <- lisa_2017_sig %>% filter(province_en %in% southern)
```

### Northeastern Region

```{r}
#| code-fold: true
#| code-summary: "Show the code"
#| fig-width: 12

northeastern_local <- tm_shape(northeastern_lisa_2017)+
  tm_fill("ii", 
          palette = c("#e1ecbb","#f5f3a6", "#ec9a64","#de573e","#d21b1c"),
          title = "Local Moran's I",
          midpoint = NA) +
  tm_borders(col = "black", alpha = 0.6)+
  tm_layout(main.title = "Village-Level Spatial Autocorrelation \nof drug use cases in Northeastern Region",
            main.title.position = "center",
            main.title.size = 1.3,
            main.title.fontface = "bold",
            legend.title.size = 1,
            legend.text.size = 0.8,
            frame = TRUE) +
  tm_borders(alpha = 0.5) +
  tm_compass(type="8star", text.size = 1, size = 2, position=c("RIGHT", "TOP")) +
  tm_scale_bar(position=c("LEFT", "BOTTOM"), text.size=1) +
  tm_grid(labels.size = 1,alpha =0.2)

northeastern_sig <- tm_shape(northeastern_lisa_2017)+
  tm_fill("p_ii_sim", 
          palette = c("#d21b1c","#ec9a64","#f5f3a6","#c9e3d2","#b7dce9"),
          breaks = c(0, 0.001, 0.01, 0.05, 1),
          labels = c("0.001", "0.01", "0.05", "Not sig"), 
          title = "p-value",
          midpoint = NA) +
  tm_borders(col = "black", alpha = 0.6)+
  tm_layout(main.title = "Statistical Significance of Spatial Autocorrelation\n of drug use cases in Northeastern Region",
            main.title.position = "center",
            main.title.size = 1.3,
            main.title.fontface = "bold",
            legend.title.size = 1,
            legend.text.size = 0.8,
            frame = TRUE) +
  tm_borders(alpha = 0.5) +
  tm_compass(type="8star", text.size = 1, size = 2, position=c("RIGHT", "TOP")) +
  tm_scale_bar(position=c("LEFT", "BOTTOM"), text.size=1) +
  tm_grid(labels.size = 1,alpha =0.2)

tmap_arrange(northeastern_local,northeastern_sig, asp=1, ncol=2)
```

### Northern Region

```{r}
#| code-fold: true
#| code-summary: "Show the code"
#| fig-width: 12

northern_local <- tm_shape(northern_lisa_2017)+
  tm_fill("ii", 
          palette = c("#e1ecbb","#f5f3a6", "#ec9a64","#de573e","#d21b1c"),
          title = "Local Moran's I",
          midpoint = NA) +
  tm_borders(col = "black", alpha = 0.6)+
  tm_layout(main.title = "Village-Level Spatial Autocorrelation \nof drug use cases in Northern Region",
            main.title.position = "center",
            main.title.size = 1.3,
            main.title.fontface = "bold",
            legend.title.size = 1,
            legend.text.size = 0.8,
            frame = TRUE) +
  tm_borders(alpha = 0.5) +
  tm_compass(type="8star", text.size = 1, size = 2, position=c("RIGHT", "TOP")) +
  tm_scale_bar(position=c("LEFT", "BOTTOM"), text.size=1) +
  tm_grid(labels.size = 1,alpha =0.2)

northern_sig <- tm_shape(northern_lisa_2017)+
  tm_fill("p_ii_sim", 
          palette = c("#d21b1c","#ec9a64","#f5f3a6","#c9e3d2","#b7dce9"),
          breaks = c(0, 0.001, 0.01, 0.05, 1),
          labels = c("0.001", "0.01", "0.05", "Not sig"), 
          title = "p-value",
          midpoint = NA) +
  tm_borders(col = "black", alpha = 0.6)+
  tm_layout(main.title = "Statistical Significance of Spatial Autocorrelation\n of drug use cases in Northern Region",
            main.title.position = "center",
            main.title.size = 1.3,
            main.title.fontface = "bold",
            legend.title.size = 1,
            legend.text.size = 0.8,
            frame = TRUE) +
  tm_borders(alpha = 0.5) +
  tm_compass(type="8star", text.size = 1, size = 2, position=c("RIGHT", "TOP")) +
  tm_scale_bar(position=c("LEFT", "BOTTOM"), text.size=1) +
  tm_grid(labels.size = 1,alpha =0.2)

tmap_arrange(northern_local,northern_sig, asp=1, ncol=2)
```

### Western Region

```{r}
#| code-fold: true
#| code-summary: "Show the code"
#| fig-width: 12

western_local <- tm_shape(western_lisa_2017)+
  tm_fill("ii", 
          palette = c("#e1ecbb","#f5f3a6", "#ec9a64","#de573e","#d21b1c"),
          title = "Local Moran's I",
          midpoint = NA) +
  tm_borders(col = "black", alpha = 0.6)+
  tm_layout(main.title = "Village-Level Spatial Autocorrelation \nof drug use cases in Western Region",
            main.title.position = "center",
            main.title.size = 1.3,
            main.title.fontface = "bold",
            legend.title.size = 1,
            legend.text.size = 0.8,
            frame = TRUE) +
  tm_borders(alpha = 0.5) +
  tm_compass(type="8star", text.size = 1, size = 2, position=c("RIGHT", "TOP")) +
  tm_scale_bar(position=c("LEFT", "BOTTOM"), text.size=1) +
  tm_grid(labels.size = 1,alpha =0.2)

western_sig <- tm_shape(western_lisa_2017)+
  tm_fill("p_ii_sim", 
          palette = c("#d21b1c","#ec9a64","#f5f3a6","#c9e3d2","#b7dce9"),
          breaks = c(0, 0.001, 0.01, 0.05, 1),
          labels = c("0.001", "0.01", "0.05", "Not sig"), 
          title = "p-value",
          midpoint = NA) +
  tm_borders(col = "black", alpha = 0.6)+
  tm_layout(main.title = "Statistical Significance of Spatial Autocorrelation\n of drug use cases in Western Region",
            main.title.position = "center",
            main.title.size = 1.3,
            main.title.fontface = "bold",
            legend.title.size = 1,
            legend.text.size = 0.8,
            frame = TRUE) +
  tm_borders(alpha = 0.5) +
  tm_compass(type="8star", text.size = 1, size = 2, position=c("RIGHT", "TOP")) +
  tm_scale_bar(position=c("LEFT", "BOTTOM"), text.size=1) +
  tm_grid(labels.size = 1,alpha =0.2)

tmap_arrange(western_local,western_sig, asp=1, ncol=2)
```

### Central Region

```{r}
#| code-fold: true
#| code-summary: "Show the code"
#| fig-width: 12

central_local <- tm_shape(central_lisa_2017)+
  tm_fill("ii", 
          palette = c("#e1ecbb","#f5f3a6", "#ec9a64","#de573e","#d21b1c"),
          title = "Local Moran's I",
          midpoint = NA) +
  tm_borders(col = "black", alpha = 0.6)+
  tm_layout(main.title = "Village-Level Spatial Autocorrelation \nof drug use cases in Central Region",
            main.title.position = "center",
            main.title.size = 1.3,
            main.title.fontface = "bold",
            legend.title.size = 1,
            legend.text.size = 0.8,
            frame = TRUE) +
  tm_borders(alpha = 0.5) +
  tm_compass(type="8star", text.size = 1, size = 2, position=c("RIGHT", "TOP")) +
  tm_scale_bar(position=c("LEFT", "BOTTOM"), text.size=1) +
  tm_grid(labels.size = 1,alpha =0.2)

central_sig <- tm_shape(central_lisa_2017)+
  tm_fill("p_ii_sim", 
          palette = c("#d21b1c","#ec9a64","#f5f3a6","#c9e3d2","#b7dce9"),
          breaks = c(0, 0.001, 0.01, 0.05, 1),
          labels = c("0.001", "0.01", "0.05", "Not sig"), 
          title = "p-value",
          midpoint = NA) +
  tm_borders(col = "black", alpha = 0.6)+
  tm_layout(main.title = "Statistical Significance of Spatial Autocorrelation\n of drug use cases in Central Region",
            main.title.position = "center",
            main.title.size = 1.3,
            main.title.fontface = "bold",
            legend.title.size = 1,
            legend.text.size = 0.8,
            frame = TRUE) +
  tm_borders(alpha = 0.5) +
  tm_compass(type="8star", text.size = 1, size = 2, position=c("RIGHT", "TOP")) +
  tm_scale_bar(position=c("LEFT", "BOTTOM"), text.size=1) +
  tm_grid(labels.size = 1,alpha =0.2)

tmap_arrange(central_local,central_sig, asp=1, ncol=2)
```

### Eastern Region

```{r}
#| code-fold: true
#| code-summary: "Show the code"
#| fig-width: 12

eastern_local <- tm_shape(eastern_lisa_2017)+
  tm_fill("ii", 
          palette = c("#e1ecbb","#f5f3a6", "#ec9a64","#de573e","#d21b1c"),
          title = "Local Moran's I",
          midpoint = NA) +
  tm_borders(col = "black", alpha = 0.6)+
  tm_layout(main.title = "Village-Level Spatial Autocorrelation \nof drug use cases in Eastern Region",
            main.title.position = "center",
            main.title.size = 1.3,
            main.title.fontface = "bold",
            legend.title.size = 1,
            legend.text.size = 0.8,
            frame = TRUE) +
  tm_borders(alpha = 0.5) +
  tm_compass(type="8star", text.size = 1, size = 2, position=c("RIGHT", "TOP")) +
  tm_scale_bar(position=c("LEFT", "BOTTOM"), text.size=1) +
  tm_grid(labels.size = 1,alpha =0.2)

eastern_sig <- tm_shape(eastern_lisa_2017)+
  tm_fill("p_ii_sim", 
          palette = c("#d21b1c","#ec9a64","#f5f3a6","#c9e3d2","#b7dce9"),
          breaks = c(0, 0.001, 0.01, 0.05, 1),
          labels = c("0.001", "0.01", "0.05", "Not sig"), 
          title = "p-value",
          midpoint = NA) +
  tm_borders(col = "black", alpha = 0.6)+
  tm_layout(main.title = "Statistical Significance of Spatial Autocorrelation\n of drug use cases in Eastern Region",
            main.title.position = "center",
            main.title.size = 1.3,
            main.title.fontface = "bold",
            legend.title.size = 1,
            legend.text.size = 0.8,
            frame = TRUE) +
  tm_borders(alpha = 0.5) +
  tm_compass(type="8star", text.size = 1, size = 2, position=c("RIGHT", "TOP")) +
  tm_scale_bar(position=c("LEFT", "BOTTOM"), text.size=1) +
  tm_grid(labels.size = 1,alpha =0.2)

tmap_arrange(eastern_local,eastern_sig, asp=1, ncol=2)
```

### Southern Region

```{r}
#| code-fold: true
#| code-summary: "Show the code"
#| fig-width: 12

southern_local <- tm_shape(southern_lisa_2017)+
  tm_fill("ii", 
          palette = c("#e1ecbb","#f5f3a6", "#ec9a64","#de573e","#d21b1c"),
          title = "Local Moran's I",
          midpoint = NA) +
  tm_borders(col = "black", alpha = 0.6)+
  tm_layout(main.title = "Village-Level Spatial Autocorrelation \nof drug use cases in Southern Region",
            main.title.position = "center",
            main.title.size = 1.3,
            main.title.fontface = "bold",
            legend.title.size = 1,
            legend.text.size = 0.8,
            frame = TRUE) +
  tm_borders(alpha = 0.5) +
  tm_compass(type="8star", text.size = 1, size = 2, position=c("RIGHT", "TOP")) +
  tm_scale_bar(position=c("LEFT", "BOTTOM"), text.size=1) +
  tm_grid(labels.size = 1,alpha =0.2)

southern_sig <- tm_shape(southern_lisa_2017)+
  tm_fill("p_ii_sim", 
          palette = c("#d21b1c","#ec9a64","#f5f3a6","#c9e3d2","#b7dce9"),
          breaks = c(0, 0.001, 0.01, 0.05, 1),
          labels = c("0.001", "0.01", "0.05", "Not sig"), 
          title = "p-value",
          midpoint = NA) +
  tm_borders(col = "black", alpha = 0.6)+
  tm_layout(main.title = "Statistical Significance of Spatial Autocorrelation\n of drug use cases in Southern Region",
            main.title.position = "center",
            main.title.size = 1.3,
            main.title.fontface = "bold",
            legend.title.size = 1,
            legend.text.size = 0.8,
            frame = TRUE) +
  tm_borders(alpha = 0.5) +
  tm_compass(type="8star", text.size = 1, size = 2, position=c("RIGHT", "TOP")) +
  tm_scale_bar(position=c("LEFT", "BOTTOM"), text.size=1) +
  tm_grid(labels.size = 1,alpha =0.2)

tmap_arrange(southern_local,southern_sig, asp=1, ncol=2)
```

### Analysis & Discussion

```{r}
#| code-fold: true
#| code-summary: "Show the code"
#| fig-width: 12

# Create the second map for northeastern_lisa_2017
northeastern_map <- tm_shape(northeastern_lisa_2017) +
  tm_polygons(id="label") +
  tm_borders(col = "black", alpha = 0.6) +
  tm_shape(northeastern_lisa_2017_sig) +
  tm_fill("mean", 
          palette = c("#b7dce9","#ec9a64","#e1ecbb", "#d21b1c"),
          title = "LISA class",
          midpoint = NA,
          legend.hist = TRUE, 
          legend.is.portrait = TRUE,
          legend.hist.z = 0.5) +
  tm_borders(col = "black", alpha = 0.6) +
  tm_layout(main.title = "2017 LISA plot of northeastern region",
            main.title.size = 0.8,
            legend.outside = TRUE)

# Create the first map for central_lisa_2017
central_map <- tm_shape(central_lisa_2017) +
  tm_polygons(id="label") +
  tm_borders(col = "black", alpha = 0.6) +
  tm_shape(central_lisa_2017_sig) +
  tm_fill("mean", 
          palette = c("#b7dce9","#ec9a64","#e1ecbb", "#d21b1c"),
          title = "LISA class",
          midpoint = NA,
          legend.hist = TRUE, 
          legend.is.portrait = TRUE,
          legend.hist.z = 0.5) +
  tm_borders(col = "black", alpha = 0.6) +
  tm_layout(main.title = "2017 LISA plot of central region",
            main.title.size = 0.8,
            legend.outside = TRUE)

# Arrange the two maps side by side
tmap_arrange(northeastern_map, central_map, asp=1, ncol=2)
```
Within the year 2017, the northeastern and central regions of Thailand present an intriguing spatial autocorrelation pattern characterized by the co-existence of **Low-Low** and **Low-High** clusters in the central region, and **High-High** clusters in the northeastern region.

In contrast, the **Northeastern region** (left plot) shows a pronounced **High-High** cluster in the eastern border provinces, where both the province and its neighbors experience high rates of drug use. This significant clustering highlights a potential hotspot in the northeastern part of Thailand, indicating areas that may require targeted interventions for drug-related issues.

In the **Central region** (right plot), we observe a combination of **Low-Low** clusters in the province of **Singburi**, where areas with low drug use rates are surrounded by similarly low-use neighbors, and **Low-High** clusters in the south, where provinces with higher drug use rates are adjacent to those with lower rates. This pattern suggests a transitional area where drug use may be increasing, potentially influenced by neighboring provinces that are experiencing higher levels of drug-related incidents. The close proximity could indicate a spillover effect, notably into the provinces of **Nonthaburi** and **Samut Prakan**, highlighting the importance of monitoring and addressing drug use in these interconnected areas to prevent further escalation. Overall, the central region's mixed clustering patterns reveal a complex landscape of drug use, necessitating tailored strategies for intervention and prevention.

## Year 2018

```{r}
#| code-fold: true
#| code-summary: "Show the code"
northeastern_lisa_2018 <- lisa_2018 %>% filter(province_en %in% northeastern)
northern_lisa_2018 <- lisa_2018 %>% filter(province_en %in% northern)
western_lisa_2018 <- lisa_2018 %>% filter(province_en %in% western)
central_lisa_2018 <- lisa_2018 %>% filter(province_en %in% central)
eastern_lisa_2018 <- lisa_2018 %>% filter(province_en %in% eastern)
southern_lisa_2018 <- lisa_2018 %>% filter(province_en %in% southern)

northeastern_lisa_2018_sig <- lisa_2018_sig %>% filter(province_en %in% northeastern)
northern_lisa_2018_sig <- lisa_2018_sig %>% filter(province_en %in% northern)
western_lisa_2018_sig <- lisa_2018_sig %>% filter(province_en %in% western)
central_lisa_2018_sig <- lisa_2018_sig %>% filter(province_en %in% central)
eastern_lisa_2018_sig <- lisa_2018_sig %>% filter(province_en %in% eastern)
southern_lisa_2018_sig <- lisa_2018_sig %>% filter(province_en %in% southern)
```

### Northeastern Region

```{r}
#| code-fold: true
#| code-summary: "Show the code"
#| fig-width: 12

northeastern_local <- tm_shape(northeastern_lisa_2018)+
  tm_fill("ii", 
          palette = c("#e1ecbb","#f5f3a6", "#ec9a64","#de573e","#d21b1c"),
          title = "Local Moran's I",
          midpoint = NA) +
  tm_borders(col = "black", alpha = 0.6)+
  tm_layout(main.title = "Village-Level Spatial Autocorrelation \nof drug use cases in Northeastern Region",
            main.title.position = "center",
            main.title.size = 1.3,
            main.title.fontface = "bold",
            legend.title.size = 1,
            legend.text.size = 0.8,
            frame = TRUE) +
  tm_borders(alpha = 0.5) +
  tm_compass(type="8star", text.size = 1, size = 2, position=c("RIGHT", "TOP")) +
  tm_scale_bar(position=c("LEFT", "BOTTOM"), text.size=1) +
  tm_grid(labels.size = 1,alpha =0.2)

northeastern_sig <- tm_shape(northeastern_lisa_2018)+
  tm_fill("p_ii_sim", 
          palette = c("#d21b1c","#ec9a64","#f5f3a6","#c9e3d2","#b7dce9"),
          breaks = c(0, 0.001, 0.01, 0.05, 1),
          labels = c("0.001", "0.01", "0.05", "Not sig"), 
          title = "p-value",
          midpoint = NA) +
  tm_borders(col = "black", alpha = 0.6)+
  tm_layout(main.title = "Statistical Significance of Spatial Autocorrelation\n of drug use cases in Northeastern Region",
            main.title.position = "center",
            main.title.size = 1.3,
            main.title.fontface = "bold",
            legend.title.size = 1,
            legend.text.size = 0.8,
            frame = TRUE) +
  tm_borders(alpha = 0.5) +
  tm_compass(type="8star", text.size = 1, size = 2, position=c("RIGHT", "TOP")) +
  tm_scale_bar(position=c("LEFT", "BOTTOM"), text.size=1) +
  tm_grid(labels.size = 1,alpha =0.2)

tmap_arrange(northeastern_local,northeastern_sig, asp=1, ncol=2)
```

### Northern Region

```{r}
#| code-fold: true
#| code-summary: "Show the code"
#| fig-width: 12

northern_local <- tm_shape(northern_lisa_2018)+
  tm_fill("ii", 
          palette = c("#e1ecbb","#f5f3a6", "#ec9a64","#de573e","#d21b1c"),
          title = "Local Moran's I",
          midpoint = NA) +
  tm_borders(col = "black", alpha = 0.6)+
  tm_layout(main.title = "Village-Level Spatial Autocorrelation \nof drug use cases in Northern Region",
            main.title.position = "center",
            main.title.size = 1.3,
            main.title.fontface = "bold",
            legend.title.size = 1,
            legend.text.size = 0.8,
            frame = TRUE) +
  tm_borders(alpha = 0.5) +
  tm_compass(type="8star", text.size = 1, size = 2, position=c("RIGHT", "TOP")) +
  tm_scale_bar(position=c("LEFT", "BOTTOM"), text.size=1) +
  tm_grid(labels.size = 1,alpha =0.2)

northern_sig <- tm_shape(northern_lisa_2018)+
  tm_fill("p_ii_sim", 
          palette = c("#d21b1c","#ec9a64","#f5f3a6","#c9e3d2","#b7dce9"),
          breaks = c(0, 0.001, 0.01, 0.05, 1),
          labels = c("0.001", "0.01", "0.05", "Not sig"), 
          title = "p-value",
          midpoint = NA) +
  tm_borders(col = "black", alpha = 0.6)+
  tm_layout(main.title = "Statistical Significance of Spatial Autocorrelation\n of drug use cases in Northern Region",
            main.title.position = "center",
            main.title.size = 1.3,
            main.title.fontface = "bold",
            legend.title.size = 1,
            legend.text.size = 0.8,
            frame = TRUE) +
  tm_borders(alpha = 0.5) +
  tm_compass(type="8star", text.size = 1, size = 2, position=c("RIGHT", "TOP")) +
  tm_scale_bar(position=c("LEFT", "BOTTOM"), text.size=1) +
  tm_grid(labels.size = 1,alpha =0.2)

tmap_arrange(northern_local,northern_sig, asp=1, ncol=2)
```

### Western Region

```{r}
#| code-fold: true
#| code-summary: "Show the code"
#| fig-width: 12

western_local <- tm_shape(western_lisa_2018)+
  tm_fill("ii", 
          palette = c("#e1ecbb","#f5f3a6", "#ec9a64","#de573e","#d21b1c"),
          title = "Local Moran's I",
          midpoint = NA) +
  tm_borders(col = "black", alpha = 0.6)+
  tm_layout(main.title = "Village-Level Spatial Autocorrelation \nof drug use cases in Western Region",
            main.title.position = "center",
            main.title.size = 1.3,
            main.title.fontface = "bold",
            legend.title.size = 1,
            legend.text.size = 0.8,
            frame = TRUE) +
  tm_borders(alpha = 0.5) +
  tm_compass(type="8star", text.size = 1, size = 2, position=c("RIGHT", "TOP")) +
  tm_scale_bar(position=c("LEFT", "BOTTOM"), text.size=1) +
  tm_grid(labels.size = 1,alpha =0.2)

western_sig <- tm_shape(western_lisa_2018)+
  tm_fill("p_ii_sim", 
          palette = c("#d21b1c","#ec9a64","#f5f3a6","#c9e3d2","#b7dce9"),
          breaks = c(0, 0.001, 0.01, 0.05, 1),
          labels = c("0.001", "0.01", "0.05", "Not sig"), 
          title = "p-value",
          midpoint = NA) +
  tm_borders(col = "black", alpha = 0.6)+
  tm_layout(main.title = "Statistical Significance of Spatial Autocorrelation\n of drug use cases in Western Region",
            main.title.position = "center",
            main.title.size = 1.3,
            main.title.fontface = "bold",
            legend.title.size = 1,
            legend.text.size = 0.8,
            frame = TRUE) +
  tm_borders(alpha = 0.5) +
  tm_compass(type="8star", text.size = 1, size = 2, position=c("RIGHT", "TOP")) +
  tm_scale_bar(position=c("LEFT", "BOTTOM"), text.size=1) +
  tm_grid(labels.size = 1,alpha =0.2)

tmap_arrange(western_local,western_sig, asp=1, ncol=2)
```

### Central Region

```{r}
#| code-fold: true
#| code-summary: "Show the code"
#| fig-width: 12

central_local <- tm_shape(central_lisa_2018)+
  tm_fill("ii", 
          palette = c("#e1ecbb","#f5f3a6", "#ec9a64","#de573e","#d21b1c"),
          title = "Local Moran's I",
          midpoint = NA) +
  tm_borders(col = "black", alpha = 0.6)+
  tm_layout(main.title = "Village-Level Spatial Autocorrelation \nof drug use cases in Central Region",
            main.title.position = "center",
            main.title.size = 1.3,
            main.title.fontface = "bold",
            legend.title.size = 1,
            legend.text.size = 0.8,
            frame = TRUE) +
  tm_borders(alpha = 0.5) +
  tm_compass(type="8star", text.size = 1, size = 2, position=c("RIGHT", "TOP")) +
  tm_scale_bar(position=c("LEFT", "BOTTOM"), text.size=1) +
  tm_grid(labels.size = 1,alpha =0.2)

central_sig <- tm_shape(central_lisa_2018)+
  tm_fill("p_ii_sim", 
          palette = c("#d21b1c","#ec9a64","#f5f3a6","#c9e3d2","#b7dce9"),
          breaks = c(0, 0.001, 0.01, 0.05, 1),
          labels = c("0.001", "0.01", "0.05", "Not sig"), 
          title = "p-value",
          midpoint = NA) +
  tm_borders(col = "black", alpha = 0.6)+
  tm_layout(main.title = "Statistical Significance of Spatial Autocorrelation\n of drug use cases in Central Region",
            main.title.position = "center",
            main.title.size = 1.3,
            main.title.fontface = "bold",
            legend.title.size = 1,
            legend.text.size = 0.8,
            frame = TRUE) +
  tm_borders(alpha = 0.5) +
  tm_compass(type="8star", text.size = 1, size = 2, position=c("RIGHT", "TOP")) +
  tm_scale_bar(position=c("LEFT", "BOTTOM"), text.size=1) +
  tm_grid(labels.size = 1,alpha =0.2)

tmap_arrange(central_local,central_sig, asp=1, ncol=2)
```

### Eastern Region

```{r}
#| code-fold: true
#| code-summary: "Show the code"
#| fig-width: 12

eastern_local <- tm_shape(eastern_lisa_2018)+
  tm_fill("ii", 
          palette = c("#e1ecbb","#f5f3a6", "#ec9a64","#de573e","#d21b1c"),
          title = "Local Moran's I",
          midpoint = NA) +
  tm_borders(col = "black", alpha = 0.6)+
  tm_layout(main.title = "Village-Level Spatial Autocorrelation \nof drug use cases in Eastern Region",
            main.title.position = "center",
            main.title.size = 1.3,
            main.title.fontface = "bold",
            legend.title.size = 1,
            legend.text.size = 0.8,
            frame = TRUE) +
  tm_borders(alpha = 0.5) +
  tm_compass(type="8star", text.size = 1, size = 2, position=c("RIGHT", "TOP")) +
  tm_scale_bar(position=c("LEFT", "BOTTOM"), text.size=1) +
  tm_grid(labels.size = 1,alpha =0.2)

eastern_sig <- tm_shape(eastern_lisa_2018)+
  tm_fill("p_ii_sim", 
          palette = c("#d21b1c","#ec9a64","#f5f3a6","#c9e3d2","#b7dce9"),
          breaks = c(0, 0.001, 0.01, 0.05, 1),
          labels = c("0.001", "0.01", "0.05", "Not sig"), 
          title = "p-value",
          midpoint = NA) +
  tm_borders(col = "black", alpha = 0.6)+
  tm_layout(main.title = "Statistical Significance of Spatial Autocorrelation\n of drug use cases in Eastern Region",
            main.title.position = "center",
            main.title.size = 1.3,
            main.title.fontface = "bold",
            legend.title.size = 1,
            legend.text.size = 0.8,
            frame = TRUE) +
  tm_borders(alpha = 0.5) +
  tm_compass(type="8star", text.size = 1, size = 2, position=c("RIGHT", "TOP")) +
  tm_scale_bar(position=c("LEFT", "BOTTOM"), text.size=1) +
  tm_grid(labels.size = 1,alpha =0.2)

tmap_arrange(eastern_local,eastern_sig, asp=1, ncol=2)
```

### Southern Region

```{r}
#| code-fold: true
#| code-summary: "Show the code"
#| fig-width: 12

southern_local <- tm_shape(southern_lisa_2018)+
  tm_fill("ii", 
          palette = c("#e1ecbb","#f5f3a6", "#ec9a64","#de573e","#d21b1c"),
          title = "Local Moran's I",
          midpoint = NA) +
  tm_borders(col = "black", alpha = 0.6)+
  tm_layout(main.title = "Village-Level Spatial Autocorrelation \nof drug use cases in Southern Region",
            main.title.position = "center",
            main.title.size = 1.3,
            main.title.fontface = "bold",
            legend.title.size = 1,
            legend.text.size = 0.8,
            frame = TRUE) +
  tm_borders(alpha = 0.5) +
  tm_compass(type="8star", text.size = 1, size = 2, position=c("RIGHT", "TOP")) +
  tm_scale_bar(position=c("LEFT", "BOTTOM"), text.size=1) +
  tm_grid(labels.size = 1,alpha =0.2)

southern_sig <- tm_shape(southern_lisa_2018)+
  tm_fill("p_ii_sim", 
          palette = c("#d21b1c","#ec9a64","#f5f3a6","#c9e3d2","#b7dce9"),
          breaks = c(0, 0.001, 0.01, 0.05, 1),
          labels = c("0.001", "0.01", "0.05", "Not sig"), ,
          title = "p-value",
          midpoint = NA) +
  tm_borders(col = "black", alpha = 0.6)+
  tm_layout(main.title = "Statistical Significance of Spatial Autocorrelation\n of drug use cases in Southern Region",
            main.title.position = "center",
            main.title.size = 1.3,
            main.title.fontface = "bold",
            legend.title.size = 1,
            legend.text.size = 0.8,
            frame = TRUE) +
  tm_borders(alpha = 0.5) +
  tm_compass(type="8star", text.size = 1, size = 2, position=c("RIGHT", "TOP")) +
  tm_scale_bar(position=c("LEFT", "BOTTOM"), text.size=1) +
  tm_grid(labels.size = 1,alpha =0.2)

tmap_arrange(southern_local,southern_sig, asp=1, ncol=2)
```

### Analysis & Discussion

```{r}
#| code-fold: true
#| code-summary: "Show the code"
#| fig-width: 12

# Create the second map for northeastern_lisa_2018
northeastern_map <- tm_shape(northeastern_lisa_2018) +
  tm_polygons(id="label") +
  tm_borders(col = "black", alpha = 0.6) +
  tm_shape(northeastern_lisa_2018_sig) +
  tm_fill("mean", 
          palette = c("#b7dce9","#ec9a64","#e1ecbb", "#d21b1c"),
          title = "LISA class",
          midpoint = NA,
          legend.hist = TRUE, 
          legend.is.portrait = TRUE,
          legend.hist.z = 0.5) +
  tm_borders(col = "black", alpha = 0.6) +
  tm_layout(main.title = "2018 LISA plot of northeastern region",
            main.title.size = 0.8,
            legend.outside = TRUE)

# Create the first map for central_lisa_2018
central_map <- tm_shape(central_lisa_2018) +
  tm_polygons(id="label") +
  tm_borders(col = "black", alpha = 0.6) +
  tm_shape(central_lisa_2018_sig) +
  tm_fill("mean", 
          palette = c("#b7dce9","#ec9a64","#e1ecbb", "#d21b1c"),
          title = "LISA class",
          midpoint = NA,
          legend.hist = TRUE, 
          legend.is.portrait = TRUE,
          legend.hist.z = 0.5) +
  tm_borders(col = "black", alpha = 0.6) +
  tm_layout(main.title = "2018 LISA plot of central region",
            main.title.size = 0.8,
            legend.outside = TRUE)

# Arrange the two maps side by side
tmap_arrange(northeastern_map, central_map, asp=1, ncol=2)
```
In 2018, the spatial autocorrelation patterns in the northeastern and central regions of Thailand reveal notable shifts in the classification of drug use incidents compared to the previous year. 

In the **Northeastern region** (left plot), we observe a significant presence of **High-Low** clusters, particularly in the northern provinces. This indicates that areas with high drug use rates are bordered by regions with lower rates, suggesting a potential influence or spillover effect where increased drug activity in some areas may affect their neighbors. The rest of the region largely remains unclassified, highlighting a shift in the drug use dynamics in this area.

Conversely, in the **Central region** (right plot), there is a noticeable increase in **High-High** clusters, especially in the southern provinces, where areas with high drug use rates are surrounded by similarly high-use neighbors. This indicates that drug-related issues may be more concentrated in these provinces, necessitating targeted interventions to address the growing problem. Additionally, **Low-Low** clusters can be seen in some provinces, where low drug use rates are observed alongside similarly low-use areas, signifying pockets of stability amidst rising drug use in surrounding regions.

Overall, both regions illustrate the evolving landscape of drug use in Thailand in 2018, emphasizing the importance of spatial analysis in understanding and responding to changing patterns in drug-related incidents. The identification of clusters can inform policy decisions and resource allocation for effective intervention strategies.

## Year 2019

```{r}
#| code-fold: true
#| code-summary: "Show the code"
northeastern_lisa_2019 <- lisa_2019 %>% filter(province_en %in% northeastern)
northern_lisa_2019 <- lisa_2019 %>% filter(province_en %in% northern)
western_lisa_2019 <- lisa_2019 %>% filter(province_en %in% western)
central_lisa_2019 <- lisa_2019 %>% filter(province_en %in% central)
eastern_lisa_2019 <- lisa_2019 %>% filter(province_en %in% eastern)
southern_lisa_2019 <- lisa_2019 %>% filter(province_en %in% southern)

northeastern_lisa_2019_sig <- lisa_2019_sig %>% filter(province_en %in% northeastern)
northern_lisa_2019_sig <- lisa_2019_sig %>% filter(province_en %in% northern)
western_lisa_2019_sig <- lisa_2019_sig %>% filter(province_en %in% western)
central_lisa_2019_sig <- lisa_2019_sig %>% filter(province_en %in% central)
eastern_lisa_2019_sig <- lisa_2019_sig %>% filter(province_en %in% eastern)
southern_lisa_2019_sig <- lisa_2019_sig %>% filter(province_en %in% southern)
```

### Northeastern Region

```{r}
#| code-fold: true
#| code-summary: "Show the code"
#| fig-width: 12

northeastern_local <- tm_shape(northeastern_lisa_2019)+
  tm_fill("ii", 
          palette = c("#e1ecbb","#f5f3a6", "#ec9a64","#de573e","#d21b1c"),
          title = "Local Moran's I",
          midpoint = NA) +
  tm_borders(col = "black", alpha = 0.6)+
  tm_layout(main.title = "Village-Level Spatial Autocorrelation \nof drug use cases in Northeastern Region",
            main.title.position = "center",
            main.title.size = 1.3,
            main.title.fontface = "bold",
            legend.title.size = 1,
            legend.text.size = 0.8,
            frame = TRUE) +
  tm_borders(alpha = 0.5) +
  tm_compass(type="8star", text.size = 1, size = 2, position=c("RIGHT", "TOP")) +
  tm_scale_bar(position=c("LEFT", "BOTTOM"), text.size=1) +
  tm_grid(labels.size = 1,alpha =0.2)

northeastern_sig <- tm_shape(northeastern_lisa_2019)+
  tm_fill("p_ii_sim", 
          palette = c("#d21b1c","#ec9a64","#f5f3a6","#c9e3d2","#b7dce9"),
          breaks = c(0, 0.001, 0.01, 0.05, 1),
          labels = c("0.001", "0.01", "0.05", "Not sig"), 
          title = "p-value",
          midpoint = NA) +
  tm_borders(col = "black", alpha = 0.6)+
  tm_layout(main.title = "Statistical Significance of Spatial Autocorrelation\n of drug use cases in Northeastern Region",
            main.title.position = "center",
            main.title.size = 1.3,
            main.title.fontface = "bold",
            legend.title.size = 1,
            legend.text.size = 0.8,
            frame = TRUE) +
  tm_borders(alpha = 0.5) +
  tm_compass(type="8star", text.size = 1, size = 2, position=c("RIGHT", "TOP")) +
  tm_scale_bar(position=c("LEFT", "BOTTOM"), text.size=1) +
  tm_grid(labels.size = 1,alpha =0.2)

tmap_arrange(northeastern_local,northeastern_sig, asp=1, ncol=2)
```

### Northern Region

```{r}
#| code-fold: true
#| code-summary: "Show the code"
#| fig-width: 12

northern_local <- tm_shape(northern_lisa_2019)+
  tm_fill("ii", 
          palette = c("#e1ecbb","#f5f3a6", "#ec9a64","#de573e","#d21b1c"),
          title = "Local Moran's I",
          midpoint = NA) +
  tm_borders(col = "black", alpha = 0.6)+
  tm_layout(main.title = "Village-Level Spatial Autocorrelation \nof drug use cases in Northern Region",
            main.title.position = "center",
            main.title.size = 1.3,
            main.title.fontface = "bold",
            legend.title.size = 1,
            legend.text.size = 0.8,
            frame = TRUE) +
  tm_borders(alpha = 0.5) +
  tm_compass(type="8star", text.size = 1, size = 2, position=c("RIGHT", "TOP")) +
  tm_scale_bar(position=c("LEFT", "BOTTOM"), text.size=1) +
  tm_grid(labels.size = 1,alpha =0.2)

northern_sig <- tm_shape(northern_lisa_2019)+
  tm_fill("p_ii_sim", 
          palette = c("#d21b1c","#ec9a64","#f5f3a6","#c9e3d2","#b7dce9"),
          breaks = c(0, 0.001, 0.01, 0.05, 1),
          labels = c("0.001", "0.01", "0.05", "Not sig"), 
          title = "p-value",
          midpoint = NA) +
  tm_borders(col = "black", alpha = 0.6)+
  tm_layout(main.title = "Statistical Significance of Spatial Autocorrelation\n of drug use cases in Northern Region",
            main.title.position = "center",
            main.title.size = 1.3,
            main.title.fontface = "bold",
            legend.title.size = 1,
            legend.text.size = 0.8,
            frame = TRUE) +
  tm_borders(alpha = 0.5) +
  tm_compass(type="8star", text.size = 1, size = 2, position=c("RIGHT", "TOP")) +
  tm_scale_bar(position=c("LEFT", "BOTTOM"), text.size=1) +
  tm_grid(labels.size = 1,alpha =0.2)

tmap_arrange(northern_local,northern_sig, asp=1, ncol=2)
```

### Western Region

```{r}
#| code-fold: true
#| code-summary: "Show the code"
#| fig-width: 12

western_local <- tm_shape(western_lisa_2019)+
  tm_fill("ii", 
          palette = c("#e1ecbb","#f5f3a6", "#ec9a64","#de573e","#d21b1c"),
          title = "Local Moran's I",
          midpoint = NA) +
  tm_borders(col = "black", alpha = 0.6)+
  tm_layout(main.title = "Village-Level Spatial Autocorrelation \nof drug use cases in Western Region",
            main.title.position = "center",
            main.title.size = 1.3,
            main.title.fontface = "bold",
            legend.title.size = 1,
            legend.text.size = 0.8,
            frame = TRUE) +
  tm_borders(alpha = 0.5) +
  tm_compass(type="8star", text.size = 1, size = 2, position=c("RIGHT", "TOP")) +
  tm_scale_bar(position=c("LEFT", "BOTTOM"), text.size=1) +
  tm_grid(labels.size = 1,alpha =0.2)

western_sig <- tm_shape(western_lisa_2019)+
  tm_fill("p_ii_sim", 
          palette = c("#d21b1c","#ec9a64","#f5f3a6","#c9e3d2","#b7dce9"),
          breaks = c(0, 0.001, 0.01, 0.05, 1),
          labels = c("0.001", "0.01", "0.05", "Not sig"), 
          title = "p-value",
          midpoint = NA) +
  tm_borders(col = "black", alpha = 0.6)+
  tm_layout(main.title = "Statistical Significance of Spatial Autocorrelation\n of drug use cases in Western Region",
            main.title.position = "center",
            main.title.size = 1.3,
            main.title.fontface = "bold",
            legend.title.size = 1,
            legend.text.size = 0.8,
            frame = TRUE) +
  tm_borders(alpha = 0.5) +
  tm_compass(type="8star", text.size = 1, size = 2, position=c("RIGHT", "TOP")) +
  tm_scale_bar(position=c("LEFT", "BOTTOM"), text.size=1) +
  tm_grid(labels.size = 1,alpha =0.2)

tmap_arrange(western_local,western_sig, asp=1, ncol=2)
```

### Central Region

```{r}
#| code-fold: true
#| code-summary: "Show the code"
#| fig-width: 12
#| fig-height: 12

central_local <- tm_shape(central_lisa_2019)+
  tm_fill("ii", 
          palette = c("#e1ecbb","#f5f3a6", "#ec9a64","#de573e","#d21b1c"),
          title = "Local Moran's I",
          midpoint = NA) +
  tm_borders(col = "black", alpha = 0.6)+
  tm_layout(main.title = "Village-Level Spatial Autocorrelation \nof drug use cases in North District",
            main.title.position = "center",
            main.title.size = 1.3,
            main.title.fontface = "bold",
            legend.title.size = 1,
            legend.text.size = 0.8,
            frame = TRUE) +
  tm_borders(alpha = 0.5) +
  tm_compass(type="8star", text.size = 1, size = 2, position=c("RIGHT", "TOP")) +
  tm_scale_bar(position=c("LEFT", "BOTTOM"), text.size=1) +
  tm_grid(labels.size = 1,alpha =0.2)

central_sig <- tm_shape(central_lisa_2019)+
  tm_fill("p_ii_sim", 
          palette = c("#d21b1c","#ec9a64","#f5f3a6","#c9e3d2","#b7dce9"),
          breaks = c(0, 0.001, 0.01, 0.05, 1),
          labels = c("0.001", "0.01", "0.05", "Not sig"), 
          title = "p-value",
          midpoint = NA) +
  tm_borders(col = "black", alpha = 0.6)+
  tm_layout(main.title = "Statistical Significance of Spatial Autocorrelation\n of drug use cases in North District",
            main.title.position = "center",
            main.title.size = 1.3,
            main.title.fontface = "bold",
            legend.title.size = 1,
            legend.text.size = 0.8,
            frame = TRUE) +
  tm_borders(alpha = 0.5) +
  tm_compass(type="8star", text.size = 1, size = 2, position=c("RIGHT", "TOP")) +
  tm_scale_bar(position=c("LEFT", "BOTTOM"), text.size=1) +
  tm_grid(labels.size = 1,alpha =0.2)

tmap_arrange(central_local,central_sig, asp=1, ncol=2)
```

### Eastern Region

```{r}
#| code-fold: true
#| code-summary: "Show the code"
#| fig-width: 12
#| fig-height: 12

eastern_local <- tm_shape(eastern_lisa_2019)+
  tm_fill("ii", 
          palette = c("#e1ecbb","#f5f3a6", "#ec9a64","#de573e","#d21b1c"),
          title = "Local Moran's I",
          midpoint = NA) +
  tm_borders(col = "black", alpha = 0.6)+
  tm_layout(main.title = "Village-Level Spatial Autocorrelation \nof drug use cases in Eastern Region",
            main.title.position = "center",
            main.title.size = 1.3,
            main.title.fontface = "bold",
            legend.title.size = 1,
            legend.text.size = 0.8,
            frame = TRUE) +
  tm_borders(alpha = 0.5) +
  tm_compass(type="8star", text.size = 1, size = 2, position=c("RIGHT", "TOP")) +
  tm_scale_bar(position=c("LEFT", "BOTTOM"), text.size=1) +
  tm_grid(labels.size = 1,alpha =0.2)

eastern_sig <- tm_shape(eastern_lisa_2019)+
  tm_fill("p_ii_sim", 
          palette = c("#d21b1c","#ec9a64","#f5f3a6","#c9e3d2","#b7dce9"),
          breaks = c(0, 0.001, 0.01, 0.05, 1),
          labels = c("0.001", "0.01", "0.05", "Not sig"), 
          title = "p-value",
          midpoint = NA) +
  tm_borders(col = "black", alpha = 0.6)+
  tm_layout(main.title = "Statistical Significance of Spatial Autocorrelation\n of drug use cases in Eastern Region",
            main.title.position = "center",
            main.title.size = 1.3,
            main.title.fontface = "bold",
            legend.title.size = 1,
            legend.text.size = 0.8,
            frame = TRUE) +
  tm_borders(alpha = 0.5) +
  tm_compass(type="8star", text.size = 1, size = 2, position=c("RIGHT", "TOP")) +
  tm_scale_bar(position=c("LEFT", "BOTTOM"), text.size=1) +
  tm_grid(labels.size = 1,alpha =0.2)

tmap_arrange(eastern_local,eastern_sig, asp=1, ncol=2)
```

### Southern Region

```{r}
#| code-fold: true
#| code-summary: "Show the code"
#| fig-width: 12

southern_local <- tm_shape(southern_lisa_2019)+
  tm_fill("ii", 
          palette = c("#e1ecbb","#f5f3a6", "#ec9a64","#de573e","#d21b1c"),
          title = "Local Moran's I",
          midpoint = NA) +
  tm_borders(col = "black", alpha = 0.6)+
  tm_layout(main.title = "Village-Level Spatial Autocorrelation \nof drug use cases in Southern Region",
            main.title.position = "center",
            main.title.size = 1.3,
            main.title.fontface = "bold",
            legend.title.size = 1,
            legend.text.size = 0.8,
            frame = TRUE) +
  tm_borders(alpha = 0.5) +
  tm_compass(type="8star", text.size = 1, size = 2, position=c("RIGHT", "TOP")) +
  tm_scale_bar(position=c("LEFT", "BOTTOM"), text.size=1) +
  tm_grid(labels.size = 1,alpha =0.2)

southern_sig <- tm_shape(southern_lisa_2019)+
  tm_fill("p_ii_sim", 
          palette = c("#d21b1c","#ec9a64","#f5f3a6","#c9e3d2","#b7dce9"),
          breaks = c(0, 0.001, 0.01, 0.05, 1),
          labels = c("0.001", "0.01", "0.05", "Not sig"), 
          title = "p-value",
          midpoint = NA) +
  tm_borders(col = "black", alpha = 0.6)+
  tm_layout(main.title = "Statistical Significance of Spatial Autocorrelation\n of drug use cases in Southern Region",
            main.title.position = "center",
            main.title.size = 1.3,
            main.title.fontface = "bold",
            legend.title.size = 1,
            legend.text.size = 0.8,
            frame = TRUE) +
  tm_borders(alpha = 0.5) +
  tm_compass(type="8star", text.size = 1, size = 2, position=c("RIGHT", "TOP")) +
  tm_scale_bar(position=c("LEFT", "BOTTOM"), text.size=1) +
  tm_grid(labels.size = 1,alpha =0.2)

tmap_arrange(southern_local,southern_sig, asp=1, ncol=2)
```

### Analysis & Discussion

```{r}
#| code-fold: true
#| code-summary: "Show the code"
#| fig-width: 12

# Create the second map for northeastern_lisa_2019
northeastern_map <- tm_shape(northeastern_lisa_2019) +
  tm_polygons() +
  tm_borders(col = "black", alpha = 0.6) +
  tm_shape(northeastern_lisa_2019_sig) +
  tm_fill("mean", 
          palette = c("#b7dce9","#ec9a64","#e1ecbb", "#d21b1c"),
          title = "LISA class",
          midpoint = NA,
          legend.hist = TRUE, 
          legend.is.portrait = TRUE,
          legend.hist.z = 0.5) +
  tm_borders(col = "black", alpha = 0.6) +
  tm_layout(main.title = "2019 LISA plot of northeastern region",
            main.title.size = 0.8,
            legend.outside = TRUE)

# Create the first map for central_lisa_2019
central_map <- tm_shape(central_lisa_2019) +
  tm_polygons() +
  tm_borders(col = "black", alpha = 0.6) +
  tm_shape(central_lisa_2019_sig) +
  tm_fill("mean", 
          palette = c("#b7dce9","#ec9a64","#e1ecbb", "#d21b1c"),
          title = "LISA class",
          midpoint = NA,
          legend.hist = TRUE, 
          legend.is.portrait = TRUE,
          legend.hist.z = 0.5) +
  tm_borders(col = "black", alpha = 0.6) +
  tm_layout(main.title = "2019 LISA plot of central region",
            main.title.size = 0.8,
            legend.outside = TRUE)

# Arrange the two maps side by side
tmap_arrange(northeastern_map, central_map, asp=1, ncol=2)
```
In 2019, the spatial autocorrelation patterns in the northeastern and central regions of Thailand present distinct shifts in drug use classifications compared to previous years. 

In the **Northeastern region** (left plot), there is a notable concentration of **High-High** clusters in the southern part, indicating that provinces with high drug use rates are situated near other high-use provinces. Combined with the data from previous years, this suggests a persistence of drug-related issues in this area, requiring ongoing attention from policymakers and law enforcement.  Additionally, some border provinces in the northern part of the region are classified as **Low-Low**, showing that these areas are characterized by low drug use rates surrounded by similarly low-use neighbors. This combination of clustering patterns highlights the complex landscape of drug use in the northeastern region, where areas of high intensity coexist with regions exhibiting stability in low usage.

In the **Central region** (right plot), we observe a significant presence of **High-High** clusters concentrated in the southern provinces, particularly in the province of **Samut Prakan**. This reinforces the trend of increased drug-related activities in this part of the region compared to the rest of the region as seen from the past 2 years.

Overall, both regions reveal a continued need for targeted interventions and policy adaptations to address the shifting patterns of drug use across Thailand's northeastern and central regions. The persistence of high-use clusters in specific areas highlights the importance of focused resource allocation and strategic planning to combat drug-related challenges effectively.

## Year 2020

```{r}
#| code-fold: true
#| code-summary: "Show the code"
northeastern_lisa_2020 <- lisa_2020 %>% filter(province_en %in% northeastern)
northern_lisa_2020 <- lisa_2020 %>% filter(province_en %in% northern)
western_lisa_2020 <- lisa_2020 %>% filter(province_en %in% western)
central_lisa_2020 <- lisa_2020 %>% filter(province_en %in% central)
eastern_lisa_2020 <- lisa_2020 %>% filter(province_en %in% eastern)
southern_lisa_2020 <- lisa_2020 %>% filter(province_en %in% southern)

northeastern_lisa_2020_sig <- lisa_2020_sig %>% filter(province_en %in% northeastern)
northern_lisa_2020_sig <- lisa_2020_sig %>% filter(province_en %in% northern)
western_lisa_2020_sig <- lisa_2020_sig %>% filter(province_en %in% western)
central_lisa_2020_sig <- lisa_2020_sig %>% filter(province_en %in% central)
eastern_lisa_2020_sig <- lisa_2020_sig %>% filter(province_en %in% eastern)
southern_lisa_2020_sig <- lisa_2020_sig %>% filter(province_en %in% southern)
```

### Northeastern Region

```{r}
#| code-fold: true
#| code-summary: "Show the code"
#| fig-width: 12
#| fig-height: 12

northeastern_local <- tm_shape(northeastern_lisa_2020)+
  tm_fill("ii", 
          palette = c("#e1ecbb","#f5f3a6", "#ec9a64","#de573e","#d21b1c"),
          title = "Local Moran's I",
          midpoint = NA) +
  tm_borders(col = "black", alpha = 0.6)+
  tm_layout(main.title = "Village-Level Spatial Autocorrelation \nof drug use cases in Northeastern Region",
            main.title.position = "center",
            main.title.size = 1.3,
            main.title.fontface = "bold",
            legend.title.size = 1,
            legend.text.size = 0.8,
            frame = TRUE) +
  tm_borders(alpha = 0.5) +
  tm_compass(type="8star", text.size = 1, size = 2, position=c("RIGHT", "TOP")) +
  tm_scale_bar(position=c("LEFT", "BOTTOM"), text.size=1) +
  tm_grid(labels.size = 1,alpha =0.2)

northeastern_sig <- tm_shape(northeastern_lisa_2020)+
  tm_fill("p_ii_sim", 
          palette = c("#d21b1c","#ec9a64","#f5f3a6","#c9e3d2","#b7dce9"),
          breaks = c(0, 0.001, 0.01, 0.05, 1),
          labels = c("0.001", "0.01", "0.05", "Not sig"), 
          title = "p-value",
          midpoint = NA) +
  tm_borders(col = "black", alpha = 0.6)+
  tm_layout(main.title = "Statistical Significance of Spatial Autocorrelation\n of drug use cases in Northeastern Region",
            main.title.position = "center",
            main.title.size = 1.3,
            main.title.fontface = "bold",
            legend.title.size = 1,
            legend.text.size = 0.8,
            frame = TRUE) +
  tm_borders(alpha = 0.5) +
  tm_compass(type="8star", text.size = 1, size = 2, position=c("RIGHT", "TOP")) +
  tm_scale_bar(position=c("LEFT", "BOTTOM"), text.size=1) +
  tm_grid(labels.size = 1,alpha =0.2)

tmap_arrange(northeastern_local,northeastern_sig, asp=1, ncol=2)
```

### Northern Region

```{r}
#| code-fold: true
#| code-summary: "Show the code"
#| fig-width: 12
#| fig-height: 12

northern_local <- tm_shape(northern_lisa_2020)+
  tm_fill("ii", 
          palette = c("#e1ecbb","#f5f3a6", "#ec9a64","#de573e","#d21b1c"),
          title = "Local Moran's I",
          midpoint = NA) +
  tm_borders(col = "black", alpha = 0.6)+
  tm_layout(main.title = "Village-Level Spatial Autocorrelation \nof drug use cases in Northern Region",
            main.title.position = "center",
            main.title.size = 1.3,
            main.title.fontface = "bold",
            legend.title.size = 1,
            legend.text.size = 0.8,
            frame = TRUE) +
  tm_borders(alpha = 0.5) +
  tm_compass(type="8star", text.size = 1, size = 2, position=c("RIGHT", "TOP")) +
  tm_scale_bar(position=c("LEFT", "BOTTOM"), text.size=1) +
  tm_grid(labels.size = 1,alpha =0.2)

northern_sig <- tm_shape(northern_lisa_2020)+
  tm_fill("p_ii_sim", 
          palette = c("#d21b1c","#ec9a64","#f5f3a6","#c9e3d2","#b7dce9"),
          breaks = c(0, 0.001, 0.01, 0.05, 1),
          labels = c("0.001", "0.01", "0.05", "Not sig"), 
          title = "p-value",
          midpoint = NA) +
  tm_borders(col = "black", alpha = 0.6)+
  tm_layout(main.title = "Statistical Significance of Spatial Autocorrelation\n of drug use cases in North District",
            main.title.position = "center",
            main.title.size = 1.3,
            main.title.fontface = "bold",
            legend.title.size = 1,
            legend.text.size = 0.8,
            frame = TRUE) +
  tm_borders(alpha = 0.5) +
  tm_compass(type="8star", text.size = 1, size = 2, position=c("RIGHT", "TOP")) +
  tm_scale_bar(position=c("LEFT", "BOTTOM"), text.size=1) +
  tm_grid(labels.size = 1,alpha =0.2)

tmap_arrange(northern_local,northern_sig, asp=1, ncol=2)
```

### Western Region

```{r}
#| code-fold: true
#| code-summary: "Show the code"
#| fig-width: 12
#| fig-height: 12

western_local <- tm_shape(western_lisa_2020)+
  tm_fill("ii", 
          palette = c("#e1ecbb","#f5f3a6", "#ec9a64","#de573e","#d21b1c"),
          title = "Local Moran's I",
          midpoint = NA) +
  tm_borders(col = "black", alpha = 0.6)+
  tm_layout(main.title = "Village-Level Spatial Autocorrelation \nof drug use cases in North District",
            main.title.position = "center",
            main.title.size = 1.3,
            main.title.fontface = "bold",
            legend.title.size = 1,
            legend.text.size = 0.8,
            frame = TRUE) +
  tm_borders(alpha = 0.5) +
  tm_compass(type="8star", text.size = 1, size = 2, position=c("RIGHT", "TOP")) +
  tm_scale_bar(position=c("LEFT", "BOTTOM"), text.size=1) +
  tm_grid(labels.size = 1,alpha =0.2)

western_sig <- tm_shape(western_lisa_2020)+
  tm_fill("p_ii_sim", 
          palette = c("#d21b1c","#ec9a64","#f5f3a6","#c9e3d2","#b7dce9"),
          breaks = c(0, 0.001, 0.01, 0.05, 1),
          labels = c("0.001", "0.01", "0.05", "Not sig"), 
          title = "p-value",
          midpoint = NA) +
  tm_borders(col = "black", alpha = 0.6)+
  tm_layout(main.title = "Statistical Significance of Spatial Autocorrelation\n of drug use cases in North District",
            main.title.position = "center",
            main.title.size = 1.3,
            main.title.fontface = "bold",
            legend.title.size = 1,
            legend.text.size = 0.8,
            frame = TRUE) +
  tm_borders(alpha = 0.5) +
  tm_compass(type="8star", text.size = 1, size = 2, position=c("RIGHT", "TOP")) +
  tm_scale_bar(position=c("LEFT", "BOTTOM"), text.size=1) +
  tm_grid(labels.size = 1,alpha =0.2)

tmap_arrange(western_local,western_sig, asp=1, ncol=2)
```

### Central Region

```{r}
#| code-fold: true
#| code-summary: "Show the code"
#| fig-width: 12
#| fig-height: 12

central_local <- tm_shape(central_lisa_2020)+
  tm_fill("ii", 
          palette = c("#e1ecbb","#f5f3a6", "#ec9a64","#de573e","#d21b1c"),
          title = "Local Moran's I",
          midpoint = NA) +
  tm_borders(col = "black", alpha = 0.6)+
  tm_layout(main.title = "Village-Level Spatial Autocorrelation \nof drug use cases in North District",
            main.title.position = "center",
            main.title.size = 1.3,
            main.title.fontface = "bold",
            legend.title.size = 1,
            legend.text.size = 0.8,
            frame = TRUE) +
  tm_borders(alpha = 0.5) +
  tm_compass(type="8star", text.size = 1, size = 2, position=c("RIGHT", "TOP")) +
  tm_scale_bar(position=c("LEFT", "BOTTOM"), text.size=1) +
  tm_grid(labels.size = 1,alpha =0.2)

central_sig <- tm_shape(central_lisa_2020)+
  tm_fill("p_ii_sim", 
          palette = c("#d21b1c","#ec9a64","#f5f3a6","#c9e3d2","#b7dce9"),
          breaks = c(0, 0.001, 0.01, 0.05, 1),
          labels = c("0.001", "0.01", "0.05", "Not sig"), 
          title = "p-value",
          midpoint = NA) +
  tm_borders(col = "black", alpha = 0.6)+
  tm_layout(main.title = "Statistical Significance of Spatial Autocorrelation\n of drug use cases in North District",
            main.title.position = "center",
            main.title.size = 1.3,
            main.title.fontface = "bold",
            legend.title.size = 1,
            legend.text.size = 0.8,
            frame = TRUE) +
  tm_borders(alpha = 0.5) +
  tm_compass(type="8star", text.size = 1, size = 2, position=c("RIGHT", "TOP")) +
  tm_scale_bar(position=c("LEFT", "BOTTOM"), text.size=1) +
  tm_grid(labels.size = 1,alpha =0.2)

tmap_arrange(central_local,central_sig, asp=1, ncol=2)
```

### Eastern Region

```{r}
#| code-fold: true
#| code-summary: "Show the code"
#| fig-width: 12
#| fig-height: 12

eastern_local <- tm_shape(eastern_lisa_2020)+
  tm_fill("ii", 
          palette = c("#e1ecbb","#f5f3a6", "#ec9a64","#de573e","#d21b1c"),
          title = "Local Moran's I",
          midpoint = NA) +
  tm_borders(col = "black", alpha = 0.6)+
  tm_layout(main.title = "Village-Level Spatial Autocorrelation \nof drug use cases in North District",
            main.title.position = "center",
            main.title.size = 1.3,
            main.title.fontface = "bold",
            legend.title.size = 1,
            legend.text.size = 0.8,
            frame = TRUE) +
  tm_borders(alpha = 0.5) +
  tm_compass(type="8star", text.size = 1, size = 2, position=c("RIGHT", "TOP")) +
  tm_scale_bar(position=c("LEFT", "BOTTOM"), text.size=1) +
  tm_grid(labels.size = 1,alpha =0.2)

eastern_sig <- tm_shape(eastern_lisa_2020)+
  tm_fill("p_ii_sim", 
          palette = c("#d21b1c","#ec9a64","#f5f3a6","#c9e3d2","#b7dce9"),
          breaks = c(0, 0.001, 0.01, 0.05, 1),
          labels = c("0.001", "0.01", "0.05", "Not sig"), 
          title = "p-value",
          midpoint = NA) +
  tm_borders(col = "black", alpha = 0.6)+
  tm_layout(main.title = "Statistical Significance of Spatial Autocorrelation\n of drug use cases in North District",
            main.title.position = "center",
            main.title.size = 1.3,
            main.title.fontface = "bold",
            legend.title.size = 1,
            legend.text.size = 0.8,
            frame = TRUE) +
  tm_borders(alpha = 0.5) +
  tm_compass(type="8star", text.size = 1, size = 2, position=c("RIGHT", "TOP")) +
  tm_scale_bar(position=c("LEFT", "BOTTOM"), text.size=1) +
  tm_grid(labels.size = 1,alpha =0.2)

tmap_arrange(eastern_local,eastern_sig, asp=1, ncol=2)
```

### Southern Region

```{r}
#| code-fold: true
#| code-summary: "Show the code"
#| fig-width: 12
#| fig-height: 12

southern_local <- tm_shape(southern_lisa_2020)+
  tm_fill("ii", 
          palette = c("#e1ecbb","#f5f3a6", "#ec9a64","#de573e","#d21b1c"),
          title = "Local Moran's I",
          midpoint = NA) +
  tm_borders(col = "black", alpha = 0.6)+
  tm_layout(main.title = "Village-Level Spatial Autocorrelation \nof drug use cases in North District",
            main.title.position = "center",
            main.title.size = 1.3,
            main.title.fontface = "bold",
            legend.title.size = 1,
            legend.text.size = 0.8,
            frame = TRUE) +
  tm_borders(alpha = 0.5) +
  tm_compass(type="8star", text.size = 1, size = 2, position=c("RIGHT", "TOP")) +
  tm_scale_bar(position=c("LEFT", "BOTTOM"), text.size=1) +
  tm_grid(labels.size = 1,alpha =0.2)

southern_sig <- tm_shape(southern_lisa_2020)+
  tm_fill("p_ii_sim", 
          palette = c("#d21b1c","#ec9a64","#f5f3a6","#c9e3d2","#b7dce9"),
          breaks = c(0, 0.001, 0.01, 0.05, 1),
          labels = c("0.001", "0.01", "0.05", "Not sig"), 
          title = "p-value",
          midpoint = NA) +
  tm_borders(col = "black", alpha = 0.6)+
  tm_layout(main.title = "Statistical Significance of Spatial Autocorrelation\n of drug use cases in North District",
            main.title.position = "center",
            main.title.size = 1.3,
            main.title.fontface = "bold",
            legend.title.size = 1,
            legend.text.size = 0.8,
            frame = TRUE) +
  tm_borders(alpha = 0.5) +
  tm_compass(type="8star", text.size = 1, size = 2, position=c("RIGHT", "TOP")) +
  tm_scale_bar(position=c("LEFT", "BOTTOM"), text.size=1) +
  tm_grid(labels.size = 1,alpha =0.2)

tmap_arrange(southern_local,southern_sig, asp=1, ncol=2)
```

### Analysis & Discussion

```{r}
#| code-fold: true
#| code-summary: "Show the code"
#| fig-width: 12

# Create the first map for central_lisa_2020
central_map <- tm_shape(central_lisa_2020) +
  tm_polygons() +
  tm_borders(col = "black", alpha = 0.6) +
  tm_shape(central_lisa_2020_sig) +
  tm_fill("mean", 
          palette = c("#b7dce9","#ec9a64","#e1ecbb", "#d21b1c"),
          title = "LISA class",
          midpoint = NA,
          legend.hist = TRUE, 
          legend.is.portrait = TRUE,
          legend.hist.z = 0.5) +
  tm_borders(col = "black", alpha = 0.6) +
  tm_layout(main.title = "2020 LISA plot of central region",
            main.title.size = 0.8,
            legend.outside = TRUE)

# Create the second map for eastern_lisa_2020
eastern_map <- tm_shape(eastern_lisa_2020) +
  tm_polygons() +
  tm_borders(col = "black", alpha = 0.6) +
  tm_shape(eastern_lisa_2020_sig) +
  tm_fill("mean", 
          palette = c("#b7dce9","#ec9a64","#e1ecbb", "#d21b1c"),
          title = "LISA class",
          midpoint = NA,
          legend.hist = TRUE, 
          legend.is.portrait = TRUE,
          legend.hist.z = 0.5) +
  tm_borders(col = "black", alpha = 0.6) +
  tm_layout(main.title = "2020 LISA plot of eastern region",
            main.title.size = 0.8,
            legend.outside = TRUE)

# Arrange the two maps side by side
tmap_arrange(central_map, eastern_map, asp=1, ncol=2)
```
In 2020, the spatial autocorrelation patterns in the eastern and central regions of Thailand present distinct shifts in drug use classifications compared to previous years. 

In the **Central region** (left plot), there is a notable concentration of **Low-High** clusters in the southern part, indicating that provinces with high drug use rates are situated near other high-use provinces. Combined with the data from previous years, this suggests a persistence of drug-related issues in this area, requiring ongoing attention from policymakers and law enforcement.

In the **Eastern region** (right plot), we observe some border provinces in the northern part of the region are classified as **Low-High**, showing that these areas are characterized by low drug use rates surrounded by high-use neighbors. It is noteworthy that the area is also at the eastern border, similar to those clusters in the previous years. Additionally, a significant presence of **High-High** clusters concentrated in the western provinces, particularly in the province of **Chachoengsao**. This cluster is neigbhouring the **Low-High** cluster of **Central region**, connecting the 2020 highlighted clusters together in both regions.

Overall, both regions reveal a continued need for targeted interventions and policy adaptations to address the shifting patterns of drug use across Thailand's regions. The persistence of high-use clusters in the eastern border provinces and central region specifically highlights the importance of focused resource allocation and strategic planning to combat drug-related challenges effectively.

## Year 2021

```{r}
#| code-fold: true
#| code-summary: "Show the code"
northeastern_lisa_2021 <- lisa_2021 %>% filter(province_en %in% northeastern)
northern_lisa_2021 <- lisa_2021 %>% filter(province_en %in% northern)
western_lisa_2021 <- lisa_2021 %>% filter(province_en %in% western)
central_lisa_2021 <- lisa_2021 %>% filter(province_en %in% central)
eastern_lisa_2021 <- lisa_2021 %>% filter(province_en %in% eastern)
southern_lisa_2021 <- lisa_2021 %>% filter(province_en %in% southern)

northeastern_lisa_2021_sig <- lisa_2021_sig %>% filter(province_en %in% northeastern)
northern_lisa_2021_sig <- lisa_2021_sig %>% filter(province_en %in% northern)
western_lisa_2021_sig <- lisa_2021_sig %>% filter(province_en %in% western)
central_lisa_2021_sig <- lisa_2021_sig %>% filter(province_en %in% central)
eastern_lisa_2021_sig <- lisa_2021_sig %>% filter(province_en %in% eastern)
southern_lisa_2021_sig <- lisa_2021_sig %>% filter(province_en %in% southern)
```

### Northeastern Region

```{r}
#| code-fold: true
#| code-summary: "Show the code"
#| fig-width: 12
#| fig-height: 12

northeastern_local <- tm_shape(northeastern_lisa_2021)+
  tm_fill("ii", 
          palette = c("#e1ecbb","#f5f3a6", "#ec9a64","#de573e","#d21b1c"),
          title = "Local Moran's I",
          midpoint = NA) +
  tm_borders(col = "black", alpha = 0.6)+
  tm_layout(main.title = "Village-Level Spatial Autocorrelation \nof drug use cases in North District",
            main.title.position = "center",
            main.title.size = 1.3,
            main.title.fontface = "bold",
            legend.title.size = 1,
            legend.text.size = 0.8,
            frame = TRUE) +
  tm_borders(alpha = 0.5) +
  tm_compass(type="8star", text.size = 1, size = 2, position=c("RIGHT", "TOP")) +
  tm_scale_bar(position=c("LEFT", "BOTTOM"), text.size=1) +
  tm_grid(labels.size = 1,alpha =0.2)

northeastern_sig <- tm_shape(northeastern_lisa_2021)+
  tm_fill("p_ii_sim", 
          palette = c("#d21b1c","#ec9a64","#f5f3a6","#c9e3d2","#b7dce9"),
          breaks = c(0, 0.001, 0.01, 0.05, 1),
          labels = c("0.001", "0.01", "0.05", "Not sig"), 
          title = "p-value",
          midpoint = NA) +
  tm_borders(col = "black", alpha = 0.6)+
  tm_layout(main.title = "Statistical Significance of Spatial Autocorrelation\n of drug use cases in North District",
            main.title.position = "center",
            main.title.size = 1.3,
            main.title.fontface = "bold",
            legend.title.size = 1,
            legend.text.size = 0.8,
            frame = TRUE) +
  tm_borders(alpha = 0.5) +
  tm_compass(type="8star", text.size = 1, size = 2, position=c("RIGHT", "TOP")) +
  tm_scale_bar(position=c("LEFT", "BOTTOM"), text.size=1) +
  tm_grid(labels.size = 1,alpha =0.2)

tmap_arrange(northeastern_local,northeastern_sig, asp=1, ncol=2)
```

### Northern Region

```{r}
#| code-fold: true
#| code-summary: "Show the code"
#| fig-width: 12
#| fig-height: 12

northern_local <- tm_shape(northern_lisa_2021)+
  tm_fill("ii", 
          palette = c("#e1ecbb","#f5f3a6", "#ec9a64","#de573e","#d21b1c"),
          title = "Local Moran's I",
          midpoint = NA) +
  tm_borders(col = "black", alpha = 0.6)+
  tm_layout(main.title = "Village-Level Spatial Autocorrelation \nof drug use cases in North District",
            main.title.position = "center",
            main.title.size = 1.3,
            main.title.fontface = "bold",
            legend.title.size = 1,
            legend.text.size = 0.8,
            frame = TRUE) +
  tm_borders(alpha = 0.5) +
  tm_compass(type="8star", text.size = 1, size = 2, position=c("RIGHT", "TOP")) +
  tm_scale_bar(position=c("LEFT", "BOTTOM"), text.size=1) +
  tm_grid(labels.size = 1,alpha =0.2)

northern_sig <- tm_shape(northern_lisa_2021)+
  tm_fill("p_ii_sim", 
          palette = c("#d21b1c","#ec9a64","#f5f3a6","#c9e3d2","#b7dce9"),
          breaks = c(0, 0.001, 0.01, 0.05, 1),
          labels = c("0.001", "0.01", "0.05", "Not sig"), 
          title = "p-value",
          midpoint = NA) +
  tm_borders(col = "black", alpha = 0.6)+
  tm_layout(main.title = "Statistical Significance of Spatial Autocorrelation\n of drug use cases in North District",
            main.title.position = "center",
            main.title.size = 1.3,
            main.title.fontface = "bold",
            legend.title.size = 1,
            legend.text.size = 0.8,
            frame = TRUE) +
  tm_borders(alpha = 0.5) +
  tm_compass(type="8star", text.size = 1, size = 2, position=c("RIGHT", "TOP")) +
  tm_scale_bar(position=c("LEFT", "BOTTOM"), text.size=1) +
  tm_grid(labels.size = 1,alpha =0.2)

tmap_arrange(northern_local,northern_sig, asp=1, ncol=2)
```

### Western Region

```{r}
#| code-fold: true
#| code-summary: "Show the code"
#| fig-width: 12
#| fig-height: 12

western_local <- tm_shape(western_lisa_2021)+
  tm_fill("ii", 
          palette = c("#e1ecbb","#f5f3a6", "#ec9a64","#de573e","#d21b1c"),
          title = "Local Moran's I",
          midpoint = NA) +
  tm_borders(col = "black", alpha = 0.6)+
  tm_layout(main.title = "Village-Level Spatial Autocorrelation \nof drug use cases in North District",
            main.title.position = "center",
            main.title.size = 1.3,
            main.title.fontface = "bold",
            legend.title.size = 1,
            legend.text.size = 0.8,
            frame = TRUE) +
  tm_borders(alpha = 0.5) +
  tm_compass(type="8star", text.size = 1, size = 2, position=c("RIGHT", "TOP")) +
  tm_scale_bar(position=c("LEFT", "BOTTOM"), text.size=1) +
  tm_grid(labels.size = 1,alpha =0.2)

western_sig <- tm_shape(western_lisa_2021)+
  tm_fill("p_ii_sim", 
          palette = c("#d21b1c","#ec9a64","#f5f3a6","#c9e3d2","#b7dce9"),
          breaks = c(0, 0.001, 0.01, 0.05, 1),
          labels = c("0.001", "0.01", "0.05", "Not sig"), 
          title = "p-value",
          midpoint = NA) +
  tm_borders(col = "black", alpha = 0.6)+
  tm_layout(main.title = "Statistical Significance of Spatial Autocorrelation\n of drug use cases in North District",
            main.title.position = "center",
            main.title.size = 1.3,
            main.title.fontface = "bold",
            legend.title.size = 1,
            legend.text.size = 0.8,
            frame = TRUE) +
  tm_borders(alpha = 0.5) +
  tm_compass(type="8star", text.size = 1, size = 2, position=c("RIGHT", "TOP")) +
  tm_scale_bar(position=c("LEFT", "BOTTOM"), text.size=1) +
  tm_grid(labels.size = 1,alpha =0.2)

tmap_arrange(western_local,western_sig, asp=1, ncol=2)
```

### Central Region

```{r}
#| code-fold: true
#| code-summary: "Show the code"
#| fig-width: 12
#| fig-height: 12

central_local <- tm_shape(central_lisa_2021)+
  tm_fill("ii", 
          palette = c("#e1ecbb","#f5f3a6", "#ec9a64","#de573e","#d21b1c"),
          title = "Local Moran's I",
          midpoint = NA) +
  tm_borders(col = "black", alpha = 0.6)+
  tm_layout(main.title = "Village-Level Spatial Autocorrelation \nof drug use cases in North District",
            main.title.position = "center",
            main.title.size = 1.3,
            main.title.fontface = "bold",
            legend.title.size = 1,
            legend.text.size = 0.8,
            frame = TRUE) +
  tm_borders(alpha = 0.5) +
  tm_compass(type="8star", text.size = 1, size = 2, position=c("RIGHT", "TOP")) +
  tm_scale_bar(position=c("LEFT", "BOTTOM"), text.size=1) +
  tm_grid(labels.size = 1,alpha =0.2)

central_sig <- tm_shape(central_lisa_2021)+
  tm_fill("p_ii_sim", 
          palette = c("#d21b1c","#ec9a64","#f5f3a6","#c9e3d2","#b7dce9"),
          breaks = c(0, 0.001, 0.01, 0.05, 1),
          labels = c("0.001", "0.01", "0.05", "Not sig"), 
          title = "p-value",
          midpoint = NA) +
  tm_borders(col = "black", alpha = 0.6)+
  tm_layout(main.title = "Statistical Significance of Spatial Autocorrelation\n of drug use cases in North District",
            main.title.position = "center",
            main.title.size = 1.3,
            main.title.fontface = "bold",
            legend.title.size = 1,
            legend.text.size = 0.8,
            frame = TRUE) +
  tm_borders(alpha = 0.5) +
  tm_compass(type="8star", text.size = 1, size = 2, position=c("RIGHT", "TOP")) +
  tm_scale_bar(position=c("LEFT", "BOTTOM"), text.size=1) +
  tm_grid(labels.size = 1,alpha =0.2)

tmap_arrange(central_local,central_sig, asp=1, ncol=2)
```

### Eastern Region

```{r}
#| code-fold: true
#| code-summary: "Show the code"
#| fig-width: 12
#| fig-height: 12

eastern_local <- tm_shape(eastern_lisa_2021)+
  tm_fill("ii", 
          palette = c("#e1ecbb","#f5f3a6", "#ec9a64","#de573e","#d21b1c"),
          title = "Local Moran's I",
          midpoint = NA) +
  tm_borders(col = "black", alpha = 0.6)+
  tm_layout(main.title = "Village-Level Spatial Autocorrelation \nof drug use cases in North District",
            main.title.position = "center",
            main.title.size = 1.3,
            main.title.fontface = "bold",
            legend.title.size = 1,
            legend.text.size = 0.8,
            frame = TRUE) +
  tm_borders(alpha = 0.5) +
  tm_compass(type="8star", text.size = 1, size = 2, position=c("RIGHT", "TOP")) +
  tm_scale_bar(position=c("LEFT", "BOTTOM"), text.size=1) +
  tm_grid(labels.size = 1,alpha =0.2)

eastern_sig <- tm_shape(eastern_lisa_2021)+
  tm_fill("p_ii_sim", 
          palette = c("#d21b1c","#ec9a64","#f5f3a6","#c9e3d2","#b7dce9"),
          breaks = c(0, 0.001, 0.01, 0.05, 1),
          labels = c("0.001", "0.01", "0.05", "Not sig"), 
          title = "p-value",
          midpoint = NA) +
  tm_borders(col = "black", alpha = 0.6)+
  tm_layout(main.title = "Statistical Significance of Spatial Autocorrelation\n of drug use cases in North District",
            main.title.position = "center",
            main.title.size = 1.3,
            main.title.fontface = "bold",
            legend.title.size = 1,
            legend.text.size = 0.8,
            frame = TRUE) +
  tm_borders(alpha = 0.5) +
  tm_compass(type="8star", text.size = 1, size = 2, position=c("RIGHT", "TOP")) +
  tm_scale_bar(position=c("LEFT", "BOTTOM"), text.size=1) +
  tm_grid(labels.size = 1,alpha =0.2)

tmap_arrange(eastern_local,eastern_sig, asp=1, ncol=2)
```

### Southern Region

```{r}
#| code-fold: true
#| code-summary: "Show the code"
#| fig-width: 12
#| fig-height: 12

southern_local <- tm_shape(southern_lisa_2021)+
  tm_fill("ii", 
          palette = c("#e1ecbb","#f5f3a6", "#ec9a64","#de573e","#d21b1c"),
          title = "Local Moran's I",
          midpoint = NA) +
  tm_borders(col = "black", alpha = 0.6)+
  tm_layout(main.title = "Village-Level Spatial Autocorrelation \nof drug use cases in North District",
            main.title.position = "center",
            main.title.size = 1.3,
            main.title.fontface = "bold",
            legend.title.size = 1,
            legend.text.size = 0.8,
            frame = TRUE) +
  tm_borders(alpha = 0.5) +
  tm_compass(type="8star", text.size = 1, size = 2, position=c("RIGHT", "TOP")) +
  tm_scale_bar(position=c("LEFT", "BOTTOM"), text.size=1) +
  tm_grid(labels.size = 1,alpha =0.2)

southern_sig <- tm_shape(southern_lisa_2021)+
  tm_fill("p_ii_sim", 
          palette = c("#d21b1c","#ec9a64","#f5f3a6","#c9e3d2","#b7dce9"),
          breaks = c(0, 0.001, 0.01, 0.05, 1),
          labels = c("0.001", "0.01", "0.05", "Not sig"), 
          title = "p-value",
          midpoint = NA) +
  tm_borders(col = "black", alpha = 0.6)+
  tm_layout(main.title = "Statistical Significance of Spatial Autocorrelation\n of drug use cases in North District",
            main.title.position = "center",
            main.title.size = 1.3,
            main.title.fontface = "bold",
            legend.title.size = 1,
            legend.text.size = 0.8,
            frame = TRUE) +
  tm_borders(alpha = 0.5) +
  tm_compass(type="8star", text.size = 1, size = 2, position=c("RIGHT", "TOP")) +
  tm_scale_bar(position=c("LEFT", "BOTTOM"), text.size=1) +
  tm_grid(labels.size = 1,alpha =0.2)

tmap_arrange(southern_local,southern_sig, asp=1, ncol=2)
```

### Analysis & Discussion

```{r}
#| code-fold: true
#| code-summary: "Show the code"
#| fig-width: 12

# Create the second map for western_lisa_2021
western_map <- tm_shape(western_lisa_2021) +
  tm_polygons() +
  tm_borders(col = "black", alpha = 0.6) +
  tm_shape(western_lisa_2021_sig) +
  tm_fill("mean", 
          palette = c("#b7dce9","#ec9a64","#e1ecbb", "#d21b1c"),
          title = "LISA class",
          midpoint = NA,
          legend.hist = TRUE, 
          legend.is.portrait = TRUE,
          legend.hist.z = 0.5) +
  tm_borders(col = "black", alpha = 0.6) +
  tm_layout(main.title = "2021 LISA plot of western region",
            main.title.size = 0.8,
            legend.outside = TRUE)

# Create the first map for central_lisa_2021
central_map <- tm_shape(central_lisa_2021) +
  tm_polygons() +
  tm_borders(col = "black", alpha = 0.6) +
  tm_shape(central_lisa_2021_sig) +
  tm_fill("mean", 
          palette = c("#b7dce9","#ec9a64","#e1ecbb", "#d21b1c"),
          title = "LISA class",
          midpoint = NA,
          legend.hist = TRUE, 
          legend.is.portrait = TRUE,
          legend.hist.z = 0.5) +
  tm_borders(col = "black", alpha = 0.6) +
  tm_layout(main.title = "2021 LISA plot of central region",
            main.title.size = 0.8,
            legend.outside = TRUE)

# Arrange the two maps side by side
tmap_arrange(western_map, central_map, asp=1, ncol=2)
```
In 2021, the spatial autocorrelation patterns in the western and central regions of Thailand present distinct shifts in drug use classifications compared to previous years. 

In the **Western region** (left plot), there is a notable concentration of **Low-Low** clusters in the central part. These clusters indicate that these provinces and their neighbors experience consistently lower drug-related cases compared to the rest of the region.

In the **Central region** (right plot), we observe a significant presence of **Low-Low** clusters concentrated in the western and southern provinces. These cluster is neigbhouring the **Low-Low** cluster of **Western region**, connecting the 2021 highlighted clusters together in both regions. This shows that this areas are characterized by low drug use rates surrounded by low-use neighbors. 

Overall, the plots highlight a significant presence of Low-Low clusters in both the Western and Central regions, suggesting that several provinces in these areas have lower-than-average drug-related cases compared to their neighbors. The patterns are consistent across multiple neighbouring provinces, indicating potential coldspots that may benefit from maintaining existing preventative measures. Additionally, the absence of High-High clusters in all regions for 2021 implies that there were no significant hotspots for drug abuse activity, indicating either a reduction in drug-related cases or a more uniform distribution across these regions.

## Year 2022

```{r}
#| code-fold: true
#| code-summary: "Show the code"
northeastern_lisa_2022 <- lisa_2022 %>% filter(province_en %in% northeastern)
northern_lisa_2022 <- lisa_2022 %>% filter(province_en %in% northern)
western_lisa_2022 <- lisa_2022 %>% filter(province_en %in% western)
central_lisa_2022 <- lisa_2022 %>% filter(province_en %in% central)
eastern_lisa_2022 <- lisa_2022 %>% filter(province_en %in% eastern)
southern_lisa_2022 <- lisa_2022 %>% filter(province_en %in% southern)

northeastern_lisa_2022_sig <- lisa_2022_sig %>% filter(province_en %in% northeastern)
northern_lisa_2022_sig <- lisa_2022_sig %>% filter(province_en %in% northern)
western_lisa_2022_sig <- lisa_2022_sig %>% filter(province_en %in% western)
central_lisa_2022_sig <- lisa_2022_sig %>% filter(province_en %in% central)
eastern_lisa_2022_sig <- lisa_2022_sig %>% filter(province_en %in% eastern)
southern_lisa_2022_sig <- lisa_2022_sig %>% filter(province_en %in% southern)
```

### Northeastern Region

```{r}
#| code-fold: true
#| code-summary: "Show the code"
#| fig-width: 12
#| fig-height: 12

northeastern_local <- tm_shape(northeastern_lisa_2022)+
  tm_fill("ii", 
          palette = c("#e1ecbb","#f5f3a6", "#ec9a64","#de573e","#d21b1c"),
          title = "Local Moran's I",
          midpoint = NA) +
  tm_borders(col = "black", alpha = 0.6)+
  tm_layout(main.title = "Village-Level Spatial Autocorrelation \nof drug use cases in North District",
            main.title.position = "center",
            main.title.size = 1.3,
            main.title.fontface = "bold",
            legend.title.size = 1,
            legend.text.size = 0.8,
            frame = TRUE) +
  tm_borders(alpha = 0.5) +
  tm_compass(type="8star", text.size = 1, size = 2, position=c("RIGHT", "TOP")) +
  tm_scale_bar(position=c("LEFT", "BOTTOM"), text.size=1) +
  tm_grid(labels.size = 1,alpha =0.2)

northeastern_sig <- tm_shape(northeastern_lisa_2022)+
  tm_fill("p_ii_sim", 
          palette = c("#d21b1c","#ec9a64","#f5f3a6","#c9e3d2","#b7dce9"),
          breaks = c(0, 0.001, 0.01, 0.05, 1),
          labels = c("0.001", "0.01", "0.05", "Not sig"), 
          title = "p-value",
          midpoint = NA) +
  tm_borders(col = "black", alpha = 0.6)+
  tm_layout(main.title = "Statistical Significance of Spatial Autocorrelation\n of drug use cases in North District",
            main.title.position = "center",
            main.title.size = 1.3,
            main.title.fontface = "bold",
            legend.title.size = 1,
            legend.text.size = 0.8,
            frame = TRUE) +
  tm_borders(alpha = 0.5) +
  tm_compass(type="8star", text.size = 1, size = 2, position=c("RIGHT", "TOP")) +
  tm_scale_bar(position=c("LEFT", "BOTTOM"), text.size=1) +
  tm_grid(labels.size = 1,alpha =0.2)

tmap_arrange(northeastern_local,northeastern_sig, asp=1, ncol=2)
```

### Northern Region

```{r}
#| code-fold: true
#| code-summary: "Show the code"
#| fig-width: 12
#| fig-height: 12

northern_local <- tm_shape(northern_lisa_2022)+
  tm_fill("ii", 
          palette = c("#e1ecbb","#f5f3a6", "#ec9a64","#de573e","#d21b1c"),
          title = "Local Moran's I",
          midpoint = NA) +
  tm_borders(col = "black", alpha = 0.6)+
  tm_layout(main.title = "Village-Level Spatial Autocorrelation \nof drug use cases in North District",
            main.title.position = "center",
            main.title.size = 1.3,
            main.title.fontface = "bold",
            legend.title.size = 1,
            legend.text.size = 0.8,
            frame = TRUE) +
  tm_borders(alpha = 0.5) +
  tm_compass(type="8star", text.size = 1, size = 2, position=c("RIGHT", "TOP")) +
  tm_scale_bar(position=c("LEFT", "BOTTOM"), text.size=1) +
  tm_grid(labels.size = 1,alpha =0.2)

northern_sig <- tm_shape(northern_lisa_2022)+
  tm_fill("p_ii_sim", 
          palette = c("#d21b1c","#ec9a64","#f5f3a6","#c9e3d2","#b7dce9"),
          breaks = c(0, 0.001, 0.01, 0.05, 1),
          labels = c("0.001", "0.01", "0.05", "Not sig"), 
          title = "p-value",
          midpoint = NA) +
  tm_borders(col = "black", alpha = 0.6)+
  tm_layout(main.title = "Statistical Significance of Spatial Autocorrelation\n of drug use cases in North District",
            main.title.position = "center",
            main.title.size = 1.3,
            main.title.fontface = "bold",
            legend.title.size = 1,
            legend.text.size = 0.8,
            frame = TRUE) +
  tm_borders(alpha = 0.5) +
  tm_compass(type="8star", text.size = 1, size = 2, position=c("RIGHT", "TOP")) +
  tm_scale_bar(position=c("LEFT", "BOTTOM"), text.size=1) +
  tm_grid(labels.size = 1,alpha =0.2)

tmap_arrange(northern_local,northern_sig, asp=1, ncol=2)
```

### Western Region

```{r}
#| code-fold: true
#| code-summary: "Show the code"
#| fig-width: 12
#| fig-height: 12

western_local <- tm_shape(western_lisa_2022)+
  tm_fill("ii", 
          palette = c("#e1ecbb","#f5f3a6", "#ec9a64","#de573e","#d21b1c"),
          title = "Local Moran's I",
          midpoint = NA) +
  tm_borders(col = "black", alpha = 0.6)+
  tm_layout(main.title = "Village-Level Spatial Autocorrelation \nof drug use cases in North District",
            main.title.position = "center",
            main.title.size = 1.3,
            main.title.fontface = "bold",
            legend.title.size = 1,
            legend.text.size = 0.8,
            frame = TRUE) +
  tm_borders(alpha = 0.5) +
  tm_compass(type="8star", text.size = 1, size = 2, position=c("RIGHT", "TOP")) +
  tm_scale_bar(position=c("LEFT", "BOTTOM"), text.size=1) +
  tm_grid(labels.size = 1,alpha =0.2)

western_sig <- tm_shape(western_lisa_2022)+
  tm_fill("p_ii_sim", 
          palette = c("#d21b1c","#ec9a64","#f5f3a6","#c9e3d2","#b7dce9"),
          breaks = c(0, 0.001, 0.01, 0.05, 1),
          labels = c("0.001", "0.01", "0.05", "Not sig"), 
          title = "p-value",
          midpoint = NA) +
  tm_borders(col = "black", alpha = 0.6)+
  tm_layout(main.title = "Statistical Significance of Spatial Autocorrelation\n of drug use cases in North District",
            main.title.position = "center",
            main.title.size = 1.3,
            main.title.fontface = "bold",
            legend.title.size = 1,
            legend.text.size = 0.8,
            frame = TRUE) +
  tm_borders(alpha = 0.5) +
  tm_compass(type="8star", text.size = 1, size = 2, position=c("RIGHT", "TOP")) +
  tm_scale_bar(position=c("LEFT", "BOTTOM"), text.size=1) +
  tm_grid(labels.size = 1,alpha =0.2)

tmap_arrange(western_local,western_sig, asp=1, ncol=2)
```

### Central Region

```{r}
#| code-fold: true
#| code-summary: "Show the code"
#| fig-width: 12
#| fig-height: 12

central_local <- tm_shape(central_lisa_2022)+
  tm_fill("ii", 
          palette = c("#e1ecbb","#f5f3a6", "#ec9a64","#de573e","#d21b1c"),
          title = "Local Moran's I",
          midpoint = NA) +
  tm_borders(col = "black", alpha = 0.6)+
  tm_layout(main.title = "Village-Level Spatial Autocorrelation \nof drug use cases in North District",
            main.title.position = "center",
            main.title.size = 1.3,
            main.title.fontface = "bold",
            legend.title.size = 1,
            legend.text.size = 0.8,
            frame = TRUE) +
  tm_borders(alpha = 0.5) +
  tm_compass(type="8star", text.size = 1, size = 2, position=c("RIGHT", "TOP")) +
  tm_scale_bar(position=c("LEFT", "BOTTOM"), text.size=1) +
  tm_grid(labels.size = 1,alpha =0.2)

central_sig <- tm_shape(central_lisa_2022)+
  tm_fill("p_ii_sim", 
          palette = c("#d21b1c","#ec9a64","#f5f3a6","#c9e3d2","#b7dce9"),
          breaks = c(0, 0.001, 0.01, 0.05, 1),
          labels = c("0.001", "0.01", "0.05", "Not sig"), 
          title = "p-value",
          midpoint = NA) +
  tm_borders(col = "black", alpha = 0.6)+
  tm_layout(main.title = "Statistical Significance of Spatial Autocorrelation\n of drug use cases in North District",
            main.title.position = "center",
            main.title.size = 1.3,
            main.title.fontface = "bold",
            legend.title.size = 1,
            legend.text.size = 0.8,
            frame = TRUE) +
  tm_borders(alpha = 0.5) +
  tm_compass(type="8star", text.size = 1, size = 2, position=c("RIGHT", "TOP")) +
  tm_scale_bar(position=c("LEFT", "BOTTOM"), text.size=1) +
  tm_grid(labels.size = 1,alpha =0.2)

tmap_arrange(central_local,central_sig, asp=1, ncol=2)
```

### Eastern Region

```{r}
#| code-fold: true
#| code-summary: "Show the code"
#| fig-width: 12
#| fig-height: 12

eastern_local <- tm_shape(eastern_lisa_2022)+
  tm_fill("ii", 
          palette = c("#e1ecbb","#f5f3a6", "#ec9a64","#de573e","#d21b1c"),
          title = "Local Moran's I",
          midpoint = NA) +
  tm_borders(col = "black", alpha = 0.6)+
  tm_layout(main.title = "Village-Level Spatial Autocorrelation \nof drug use cases in North District",
            main.title.position = "center",
            main.title.size = 1.3,
            main.title.fontface = "bold",
            legend.title.size = 1,
            legend.text.size = 0.8,
            frame = TRUE) +
  tm_borders(alpha = 0.5) +
  tm_compass(type="8star", text.size = 1, size = 2, position=c("RIGHT", "TOP")) +
  tm_scale_bar(position=c("LEFT", "BOTTOM"), text.size=1) +
  tm_grid(labels.size = 1,alpha =0.2)

eastern_sig <- tm_shape(eastern_lisa_2022)+
  tm_fill("p_ii_sim", 
          palette = c("#d21b1c","#ec9a64","#f5f3a6","#c9e3d2","#b7dce9"),
          breaks = c(0, 0.001, 0.01, 0.05, 1),
          labels = c("0.001", "0.01", "0.05", "Not sig"), 
          title = "p-value",
          midpoint = NA) +
  tm_borders(col = "black", alpha = 0.6)+
  tm_layout(main.title = "Statistical Significance of Spatial Autocorrelation\n of drug use cases in North District",
            main.title.position = "center",
            main.title.size = 1.3,
            main.title.fontface = "bold",
            legend.title.size = 1,
            legend.text.size = 0.8,
            frame = TRUE) +
  tm_borders(alpha = 0.5) +
  tm_compass(type="8star", text.size = 1, size = 2, position=c("RIGHT", "TOP")) +
  tm_scale_bar(position=c("LEFT", "BOTTOM"), text.size=1) +
  tm_grid(labels.size = 1,alpha =0.2)

tmap_arrange(eastern_local,eastern_sig, asp=1, ncol=2)
```

### Southern Region

```{r}
#| code-fold: true
#| code-summary: "Show the code"
#| fig-width: 12
#| fig-height: 12

southern_local <- tm_shape(southern_lisa_2022)+
  tm_fill("ii", 
          palette = c("#e1ecbb","#f5f3a6", "#ec9a64","#de573e","#d21b1c"),
          title = "Local Moran's I",
          midpoint = NA) +
  tm_borders(col = "black", alpha = 0.6)+
  tm_layout(main.title = "Village-Level Spatial Autocorrelation \nof drug use cases in North District",
            main.title.position = "center",
            main.title.size = 1.3,
            main.title.fontface = "bold",
            legend.title.size = 1,
            legend.text.size = 0.8,
            frame = TRUE) +
  tm_borders(alpha = 0.5) +
  tm_compass(type="8star", text.size = 1, size = 2, position=c("RIGHT", "TOP")) +
  tm_scale_bar(position=c("LEFT", "BOTTOM"), text.size=1) +
  tm_grid(labels.size = 1,alpha =0.2)

southern_sig <- tm_shape(southern_lisa_2022)+
  tm_fill("p_ii_sim", 
          palette = c("#d21b1c","#ec9a64","#f5f3a6","#c9e3d2","#b7dce9"),
          breaks = c(0, 0.001, 0.01, 0.05, 1),
          labels = c("0.001", "0.01", "0.05", "Not sig"), 
          title = "p-value",
          midpoint = NA) +
  tm_borders(col = "black", alpha = 0.6)+
  tm_layout(main.title = "Statistical Significance of Spatial Autocorrelation\n of drug use cases in North District",
            main.title.position = "center",
            main.title.size = 1.3,
            main.title.fontface = "bold",
            legend.title.size = 1,
            legend.text.size = 0.8,
            frame = TRUE) +
  tm_borders(alpha = 0.5) +
  tm_compass(type="8star", text.size = 1, size = 2, position=c("RIGHT", "TOP")) +
  tm_scale_bar(position=c("LEFT", "BOTTOM"), text.size=1) +
  tm_grid(labels.size = 1,alpha =0.2)

tmap_arrange(southern_local,southern_sig, asp=1, ncol=2)
```

### Analysis & Discussion

The northeastern and central region

```{r}
#| code-fold: true
#| code-summary: "Show the code"
#| fig-width: 12

# Create the second map for northeastern_lisa_2022
northeastern_map <- tm_shape(northeastern_lisa_2022) +
  tm_polygons() +
  tm_borders(col = "black", alpha = 0.6) +
  tm_shape(northeastern_lisa_2022_sig) +
  tm_fill("mean", 
          palette = c("#b7dce9","#ec9a64","#e1ecbb", "#d21b1c"),
          title = "LISA class",
          midpoint = NA,
          legend.hist = TRUE, 
          legend.is.portrait = TRUE,
          legend.hist.z = 0.5) +
  tm_borders(col = "black", alpha = 0.6) +
  tm_layout(main.title = "2022 LISA plot of northeastern region",
            main.title.size = 0.8,
            legend.outside = TRUE)

# Create the first map for central_lisa_2022
central_map <- tm_shape(central_lisa_2022) +
  tm_polygons() +
  tm_borders(col = "black", alpha = 0.6) +
  tm_shape(central_lisa_2022_sig) +
  tm_fill("mean", 
          palette = c("#b7dce9","#ec9a64","#e1ecbb", "#d21b1c"),
          title = "LISA class",
          midpoint = NA,
          legend.hist = TRUE, 
          legend.is.portrait = TRUE,
          legend.hist.z = 0.5) +
  tm_borders(col = "black", alpha = 0.6) +
  tm_layout(main.title = "2022 LISA plot of central region",
            main.title.size = 0.8,
            legend.outside = TRUE)

# Arrange the two maps side by side
tmap_arrange(northeastern_map, central_map, asp=1, ncol=2)
```
In 2022, the spatial autocorrelation patterns in the northeastern and central regions of Thailand present distinct shifts in drug use classifications compared to previous years. 

In the **Northeastern region** (left plot), there is a notable concentration of **High-High** clusters, covering a few central provinces. This indicates that these provinces and their neighboring areas have higher-than-average drug-related cases, creating a significant hotspot. There is also a **Low-High** cluster in one province to the west of the hotspot. This pattern suggests that the province itself has low drug-related cases, but it is surrounded by high-value neighbors.

In the **Central region** (right plot), we observe a significant presence of **Low-Low** clusters in a few western and central provinces. Referencing the cluster data of 2021, this coldspot have consistently shown lower drug-related cases compared to the rest of the region.

OVerall, the Northeastern region exhibits significant hotspots indicating provinces with elevated drug-related cases, which are surrounded by other high-case provinces. This is a marked contrast from the absence of such clusters in the Central region, which only shows Low-Low clusters representing coldspots.

The emergence of High-High clusters in the Northeastern region could point to new areas of concern that require targeted intervention strategies, while the presence of Low-Low clusters in the Central region suggests continued effectiveness in maintaining low levels of drug-related activities.

## 2.8 Emerging Hot Spots Analysis (EHSA)
```{r}
drug_thailand_spt <- as_spacetime(drug_region_thailand_sf, "province_en", "fiscal_year")
```

```{r}
write_rds(drug_thailand_spt, "data/rds/drug_thailand_spt.rds")
```

```{r}
drug_thailand_spt <- read_rds("data/rds/drug_thailand_spt.rds")
```

```{r}
ggplot(drug_thailand_spt, aes(x = fiscal_year, y = no_cases)) +
  geom_histogram(binwidth = 1, fill = "skyblue", stat = "identity") +
  labs(x = "year", y = "count") +
  ggtitle("Histogram of yearly drug use cases in Thailand (2017-2022)")
```


```{r}
wm_idw_2017 <- region_2017_sf %>%
  mutate(nb = include_self(st_contiguity(geometry)),
         wt = st_inverse_distance(nb, geometry,
                                   scale = 1,
                                   alpha = 1),
         .before = 1)
wm_idw_2018 <- region_2018_sf %>%
  mutate(nb = include_self(st_contiguity(geometry)),
         wt = st_inverse_distance(nb, geometry,
                                   scale = 1,
                                   alpha = 1),
         .before = 1)
wm_idw_2019 <- region_2019_sf %>%
  mutate(nb = include_self(st_contiguity(geometry)),
         wt = st_inverse_distance(nb, geometry,
                                   scale = 1,
                                   alpha = 1),
         .before = 1)
wm_idw_2020 <- region_2020_sf %>%
  mutate(nb = include_self(st_contiguity(geometry)),
         wt = st_inverse_distance(nb, geometry,
                                   scale = 1,
                                   alpha = 1),
         .before = 1)
wm_idw_2021 <- region_2021_sf %>%
  mutate(nb = include_self(st_contiguity(geometry)),
         wt = st_inverse_distance(nb, geometry,
                                   scale = 1,
                                   alpha = 1),
         .before = 1)
wm_idw_2022 <- region_2022_sf %>%
  mutate(nb = include_self(st_contiguity(geometry)),
         wt = st_inverse_distance(nb, geometry,
                                   scale = 1,
                                   alpha = 1),
         .before = 1)
```

```{r}
HCSA_2017 <- wm_idw_2017 %>% 
  mutate(local_Gi_star = local_gstar_perm(
    no_cases, nb, wt, nsim = 99),
         .before = 1) %>%
  unnest(local_Gi_star)
HCSA_2018 <- wm_idw_2018 %>% 
  mutate(local_Gi_star = local_gstar_perm(
    no_cases, nb, wt, nsim = 99),
         .before = 1) %>%
  unnest(local_Gi_star)
HCSA_2018 <- wm_idw_2018 %>% 
  mutate(local_Gi_star = local_gstar_perm(
    no_cases, nb, wt, nsim = 99),
         .before = 1) %>%
  unnest(local_Gi_star)
HCSA_2019 <- wm_idw_2019 %>% 
  mutate(local_Gi_star = local_gstar_perm(
    no_cases, nb, wt, nsim = 99),
         .before = 1) %>%
  unnest(local_Gi_star)
HCSA_2020 <- wm_idw_2020 %>% 
  mutate(local_Gi_star = local_gstar_perm(
    no_cases, nb, wt, nsim = 99),
         .before = 1) %>%
  unnest(local_Gi_star)
HCSA_2021 <- wm_idw_2021 %>% 
  mutate(local_Gi_star = local_gstar_perm(
    no_cases, nb, wt, nsim = 99),
         .before = 1) %>%
  unnest(local_Gi_star)
HCSA_2022 <- wm_idw_2022 %>% 
  mutate(local_Gi_star = local_gstar_perm(
    no_cases, nb, wt, nsim = 99),
         .before = 1) %>%
  unnest(local_Gi_star)
```

::: panel-tabset
## 2017
```{r, fig.height=12, fig.width=12}
tm_shape(HCSA_2017)+
  tm_fill("gi_star", 
          palette = c("#57bfc0", "#7977f3","#f8d673","#f8b675","#f67774"),
          title = "Gi*",
          midpoint = 0) +
  tm_borders(col = "black", alpha = 0.6)+
  tm_layout(main.title = "2017 Hotspots & Coldspots of drug\n use cases in Thailand",
            main.title.position = "center",
            main.title.size = 1.7,
            main.title.fontface = "bold",
            legend.title.size = 1.8,
            legend.text.size = 1.3,
            frame = TRUE) +
  tm_borders(alpha = 0.5) +
  tm_compass(type="8star", text.size = 1.5, size = 3, position=c("RIGHT", "TOP")) +
  tm_scale_bar(position=c("LEFT", "BOTTOM"), text.size=1.2) +
  tm_grid(labels.size = 1,alpha =0.2)
```

## 2018
```{r, fig.height=12, fig.width=12}
tm_shape(HCSA_2018)+
  tm_fill("gi_star", 
          palette = c("#57bfc0", "#7977f3","#f8d673","#f8b675","#f67774"),
          title = "Gi*",
          midpoint = 0) +
  tm_borders(col = "black", alpha = 0.6)+
  tm_layout(main.title = "2018 Hotspots & Coldspots of drug\n use cases in Thailand",
            main.title.position = "center",
            main.title.size = 1.7,
            main.title.fontface = "bold",
            legend.title.size = 1.8,
            legend.text.size = 1.3,
            frame = TRUE) +
  tm_borders(alpha = 0.5) +
  tm_compass(type="8star", text.size = 1.5, size = 3, position=c("RIGHT", "TOP")) +
  tm_scale_bar(position=c("LEFT", "BOTTOM"), text.size=1.2) +
  tm_grid(labels.size = 1,alpha =0.2)
```
## 2019
```{r, fig.height=12, fig.width=12}
tm_shape(HCSA_2019)+
  tm_fill("gi_star", 
          palette = c("#57bfc0", "#7977f3","#f8d673","#f8b675","#f67774"),
          title = "Gi*",
          midpoint = 0) +
  tm_borders(col = "black", alpha = 0.6)+
  tm_layout(main.title = "2019 Hotspots & Coldspots of drug\n use cases in Thailand",
            main.title.position = "center",
            main.title.size = 1.7,
            main.title.fontface = "bold",
            legend.title.size = 1.8,
            legend.text.size = 1.3,
            frame = TRUE) +
  tm_borders(alpha = 0.5) +
  tm_compass(type="8star", text.size = 1.5, size = 3, position=c("RIGHT", "TOP")) +
  tm_scale_bar(position=c("LEFT", "BOTTOM"), text.size=1.2) +
  tm_grid(labels.size = 1,alpha =0.2)
```

## 2020
```{r, fig.height=12, fig.width=12}
tm_shape(HCSA_2020)+
  tm_fill("gi_star", 
          palette = c("#57bfc0", "#7977f3","#f8d673","#f8b675","#f67774"),
          title = "Gi*",
          midpoint = 0) +
  tm_borders(col = "black", alpha = 0.6)+
  tm_layout(main.title = "2020 Hotspots & Coldspots of drug\n use cases in Thailand",
            main.title.position = "center",
            main.title.size = 1.7,
            main.title.fontface = "bold",
            legend.title.size = 1.8,
            legend.text.size = 1.3,
            frame = TRUE) +
  tm_borders(alpha = 0.5) +
  tm_compass(type="8star", text.size = 1.5, size = 3, position=c("RIGHT", "TOP")) +
  tm_scale_bar(position=c("LEFT", "BOTTOM"), text.size=1.2) +
  tm_grid(labels.size = 1,alpha =0.2)
```

## 2021
```{r, fig.height=12, fig.width=12}
tm_shape(HCSA_2021)+
  tm_fill("gi_star", 
          palette = c("#57bfc0", "#7977f3","#f8d673","#f8b675","#f67774"),
          title = "Gi*",
          midpoint = 0) +
  tm_borders(col = "black", alpha = 0.6)+
  tm_layout(main.title = "2021 Hotspots & Coldspots of drug\n use cases in Thailand",
            main.title.position = "center",
            main.title.size = 1.7,
            main.title.fontface = "bold",
            legend.title.size = 1.8,
            legend.text.size = 1.3,
            frame = TRUE) +
  tm_borders(alpha = 0.5) +
  tm_compass(type="8star", text.size = 1.5, size = 3, position=c("RIGHT", "TOP")) +
  tm_scale_bar(position=c("LEFT", "BOTTOM"), text.size=1.2) +
  tm_grid(labels.size = 1,alpha =0.2)
```

## 2022
```{r, fig.height=12, fig.width=12}
tm_shape(HCSA_2022)+
  tm_fill("gi_star", 
          palette = c("#57bfc0", "#7977f3","#f8d673","#f8b675","#f67774"),
          title = "Gi*",
          midpoint = 0) +
  tm_borders(col = "black", alpha = 0.6)+
  tm_layout(main.title = "2022 Hotspots & Coldspots of drug\n use cases in Thailand",
            main.title.position = "center",
            main.title.size = 1.7,
            main.title.fontface = "bold",
            legend.title.size = 1.8,
            legend.text.size = 1.3,
            frame = TRUE) +
  tm_borders(alpha = 0.5) +
  tm_compass(type="8star", text.size = 1.5, size = 3, position=c("RIGHT", "TOP")) +
  tm_scale_bar(position=c("LEFT", "BOTTOM"), text.size=1.2) +
  tm_grid(labels.size = 1,alpha =0.2)
```
:::