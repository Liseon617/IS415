---
title: "Take-home Exercise 1: Geospatial Analytics for Social Good: Application of Spatial and Spatio-temporal Point Patterns Analysis to discover the geographical distribution of Armed Conflict in Myanmar"
author: "Brian Lim"
date: "September 8, 2024"
date-modified: "last-modified"
categories:
  - Analysis
  - R
  - sf
  - tidyverse
format: html
editor: visual
execute: 
  eval: true
  echo: true
  warning: false
  freeze: true
  cache: true
---

## **1.1 Exercise Overview**

Millions of people have their lives shattered by armed conflict – wars – every year.

Armed conflict has been on the rise since about 2012, after a decline in the 1990s and early 2000s. First came conflicts in Libya, Syria and Yemen, triggered by the 2011 Arab uprisings. Libya’s instability spilled south, helping set off a protracted crisis in the Sahel region. A fresh wave of major combat followed: the 2020 Azerbaijani-Armenian war over the Nagorno-Karabakh enclave, horrific fighting in Ethiopia’s northern Tigray region that began weeks later, the conflict prompted by the Myanmar army’s 2021 power grab and Russia’s 2022 assault on Ukraine. Add to those 2023’s devastation in Sudan and Gaza. Around the globe, more people are dying in fighting, being forced from their homes or in need of life-saving aid than in decades.

In this study, I will apply spatial point patterns analysis methods to discover the spatial and spatio-temporal distribution of armed conflict in Myanmar.

## **1.2 Data Acquisition**

The data sets that we will be using are the following: - Armed conflict data of Myanmar between 2021-2024. This data can be downloaded from Armed Conflict Location & Event Data [ACLED](https://acleddata.com/analysis/), an independent, impartial, international non-profit organization collecting data on violent conflict and protest in all countries and territories in the world, should be used.

In terms of event types, I will be focusing on these 4 event types: **Battles**, **Explosion/Remote violence**, **Strategic developments**, and **Violence against civilians**.

In terms of study period, students should focus on quarterly armed conflict events from January 2021 until June 2024.

## **1.3 Getting Started**

For this exercise, the following R packages will be used:

-   [**tidyverse**](https://www.tidyverse.org/) for performing data science tasks such as importing, wrangling and visualising data.

-   [**sf**](https://cran.r-project.org/web/packages/sf/) for handling geospatial data.

-   [**spatstat**](https://spatstat.org/), a comprehensive package for point pattern analysis. We'll use it to perform first- and second-order spatial point pattern analyses and to derive kernel density estimation (KDE) layers.

-   [**raster**](https://cran.r-project.org/web/packages/raster/), a package for reading, writing, manipulating, and modeling gridded spatial data (rasters). We will use it to convert image outputs generated by spatstat into raster format.

-   [**maptools**](https://cran.r-project.org/web/packages/maptools/index.html), a set of tools for manipulating geographic data, mainly used here to convert spatial objects into the *ppp* format required by **spatstat**.

-   [**tmap**](https://cran.r-project.org/web/packages/tmap/index.html), a package for creating high-quality static and interactive maps, leveraging the Leaflet API for interactive visualizations.

As readr, tidyr and dplyr are part of tidyverse package. The code chunk below will suffice to install and load the required packages in RStudio.

To install and load these packages into the R environment, we use the `p_load` function from the `pacman` package:

```{r}
pacman::p_load(sf, raster, spatstat, tmap, tidyverse, lubridate, purrr, ggplot)
```

## **1.4 Importing Data into R**

Next, we will import the `ACLED-Southeast_Asia-Myanmar(1).csv` file into the R environment and save it into an R dataframe called `acled_sf`. The task can be performed using the `read_csv()` function from the readr package, as shown below:

```{r}
acled_sf <- read_csv("data/ACLED-Southeast_Asia-Myanmar(1).csv") %>% 
  st_as_sf(coords = c(
    "longitude", "latitude"), crs = 4326) %>% 
  st_transform(crs= 32647)%>%
  mutate(event_date = dmy(event_date)) %>%
  mutate(quarter = paste0(year, " Q", quarter(event_date)))
```

::: {.callout-tip title="Notes"}
We used the `mutate()` function to ensure that the **event_data** column is in the right format of `dmy()`, while also creating a **quarter** column to represent the current <year and quarter> that the row belongs to
:::

We can check the validity of the imported dataset, ensuring that it is in the right format with the `st_crs()` and `summary()` function:

```{r}
st_crs(acled_sf)
```

```{r}
summary(acled_sf)
```

We then import the boundaries and regions of Myanmar using the `st_read()` function to import the *mmr_polbnda2_adm1_250k_mimu_1* shapefile into R as a simple feature data frame named `regions_sf`:

```{r}
regions_sf <- st_read(dsn = "data/myanmar", 
                layer = "mmr_polbnda2_adm1_250k_mimu_1")
regions_sf <- st_transform(regions_sf, crs = 32647)
```

::: {.callout-tip title="Notes"}
The `acled_sf` and `regions_sf data` are being transformed to **EPSG 32647**, which corresponds to **UTM Zone 47N**. This CSR is fine for Myanmar. This consistency also ensures that the UTM zone transformation makes sense for the study area, and prevents any distortion in KDE results.
:::

After importing the boundary and region data, we can check that what was imported is correct by checking the summary and plotting the views:

::: panel-tabset
## Summary

```{r}
summary(regions_sf)
```

## Map View

```{r}
tmap_mode('view')
tm_shape(regions_sf) +
  tm_polygons()
tmap_mode('plot')
```

## Region View

```{r}
tm_shape(regions_sf) +
  tm_borders() +
  tm_layout(title = "Region Boundaries in Myanmar", 
            title.size = 2,
            frame = FALSE)
```
:::

### **1.4.1 Explosion/Remote violence Overview**

These events involve the use of explosives and remote attacks, such as bombings or drone strikes, often targeting infrastructure or groups of people. This can be see from the following plot:

```{r}
#| eval: false
tmap_mode('view')
acled_sf %>%
  filter(event_type == "Explosions/Remote violence") %>%
  tm_shape() +
  tm_dots() +
  tm_layout(title = "Explosions/Remote violence in Myanmar (2021-2024)")
tmap_mode("plot")
```

### **1.4.2 Strategic developments Overview**

These involve important military or political actions that may not directly involve combat but have long-term consequences for the conflict dynamics. This can be see from the following plot:

```{r}
#| eval: false
tmap_mode('view')
acled_sf %>%
  filter(event_type == "Strategic developments") %>%
  tm_shape() +
  tm_dots() +
  tm_layout(title = "Strategic developments in Myanmar (2021-2024)")
tmap_mode("plot")
```

### **1.4.3 Battles Overview**

These events represent direct confrontations between armed actors, including clashes between government forces, rebel groups, and other involved factions. This can be see from the following plot:

```{r}
#| eval: false
tmap_mode('view')
acled_sf %>%
  filter(event_type == "Battles") %>%
  tm_shape() +
  tm_dots() +
  tm_layout(title = "Battles in Myanmar (2021-2024)")
tmap_mode("plot")
```

### **1.4.4 Violence against civilians Overview**

This category highlights the deliberate targeting of civilians, including killings, kidnappings, and other forms of violence perpetrated by both state and non-state actors. This can be see from the following plot:

```{r}
#| eval: false
tmap_mode('view')
acled_sf %>%
  filter(event_type == "Violence against civilians") %>%
  tm_shape() +
  tm_dots() +
  tm_layout(title = "Violence against civilians in Myanmar (2021-2024)")
tmap_mode("plot")
```

## **1.5 Determining KDE Layer**

#### **1.5.1 Choosing sample dataset**

In this section, we focus on determining the appropriate Kernel Density Estimate (KDE) layer format for analyzing the spatial distribution of events across different quarters and event types. KDE is a fundamental tool for identifying patterns of spatial clustering and dispersion, providing a smooth surface that highlights areas of high and low event concentration. The selection of an appropriate bandwidth is crucial, as it influences the level of detail and accuracy in the density estimate. By standardizing the KDE layer format, we aim to ensure consistency and comparability throughout the analysis, particularly using the **Violence against civilians** event type as a reference for refining our approach.

```{r}
Example <- "Violence against civilians"
acled_2021 <- acled_sf %>%
  filter(event_type == Example & year == 2021)
quarter_data <- as_Spatial(acled_2021)
regions <- as_Spatial(regions_sf)

quarter_data_sp <- as(quarter_data, "SpatialPoints")
regions_sp <- as(regions, "SpatialPolygons")

quarter_data_ppp <- as.ppp(st_coordinates(acled_2021), st_bbox(acled_2021))
quarter_data_ppp
```

```{r}
any(duplicated(quarter_data_ppp))
```

As there are duplicate points, we will use jittering to slightly displace the points so that overlapping points are separated on the map. The `jitter` parameter will slightly move each point by a small, random amount. This can help to visually separate points that are in the same space.

```{r}
quarter_data_ppp_jit <- rjitter(quarter_data_ppp, 
                             retry=TRUE, 
                             nsim=1, 
                             drop=TRUE)
any(duplicated(quarter_data_ppp_jit))
```

#### **1.5.2 Creating owin object**

To confine analysis to a geographical area, convert the `SpatialPolygon` object to an `owin` object of `spatstat`:

```{r}
regions_owin <- as.owin(regions_sf)

quarter_data_regions_ppp = quarter_data_ppp_jit[regions_owin]
summary(quarter_data_regions_ppp)
```

```{r}
plot(quarter_data_regions_ppp)
```

Due to the size of Myanmar, rescaling would need to be done:

```{r}
quarter_data_regions_ppp.km <- rescale.ppp(quarter_data_regions_ppp, 50000, "km")
```

#### **1.5.3 Working with different automatic badwidth methods**

The `density()` function from the `spatstat` package computes the kernel density estimate for a given set of spatial point events, providing insights into the spatial distribution of those events.

-   **`bw.diggle()`**: This method selects the bandwidth (σ) by minimizing the mean-square error, as defined by Diggle (1985). The mean-square error measures the average squared difference between the estimated and actual values, aiming to reduce errors in the density estimate.

-   **`bw.CvL()`**: Cronie and van Lieshout’s method selects the bandwidth by minimizing the discrepancy between the area of the observation window and the sum of reciprocal estimated intensity values at the event points. It balances the observed points and the space they occupy, capturing the underlying point process effectively.

-   **`bw.scott()`**: Scott’s rule, a fast and computationally efficient method, calculates the bandwidth proportional to $(n^{-\frac{1}{d+4}})$, where (n) is the number of points and (d) the spatial dimensions. It typically produces a larger bandwidth and is ideal for detecting gradual trends.

-   **`bw.ppl()`**: This method selects the bandwidth through likelihood cross-validation, maximizing the point process likelihood to provide the best-fitting model for the observed data, particularly when the goal is to optimize the likelihood of the given event distribution.

```{r}
bw_CvL <- bw.CvL(quarter_data_regions_ppp.km)
bw_CvL
```

```{r}
bw_scott <- bw.scott(quarter_data_regions_ppp.km)
bw_scott
```

```{r}
bw_ppl <- bw.ppl(quarter_data_regions_ppp.km)
bw_ppl
```

```{r}
bw_diggle <- bw.diggle(quarter_data_regions_ppp.km)
bw_diggle
```

```{r}
kde_diggle <- density(quarter_data_regions_ppp.km, bw_diggle)
kde_CvL <- density(quarter_data_regions_ppp.km, bw_CvL)
kde_scott <- density(quarter_data_regions_ppp.km, bw_scott)
kde_ppl <- density(quarter_data_regions_ppp.km, bw_ppl)

par(mar = c(2, 2, 2, 2),mfrow = c(2,2))
plot(kde_diggle, main = "kde_diggle")
plot(kde_CvL, main = "kde_CvL")
plot(kde_scott, main = "kde_scott")
plot(kde_ppl, main = "kde_ppl")
```

```{r}
par(mar = c(2,2,2,2),mfrow = c(2,2))
hist(kde_diggle, main = "kde_diggle")
hist(kde_CvL, main = "kde_CvL")
hist(kde_scott, main = "kde_scott")
hist(kde_ppl, main = "kde_ppl")
```

::: {.callout-tip title="Reflection"}
Bandwidth Selection Comparison for KDE:

-   **kde_diggle**: The sharp peak at the beginning indicates that the Diggle method for bandwidth selection has identified a concentrated cluster of points in the initial bin. The remaining bins show little to no concentration, suggesting a significant level of spatial clustering in one specific area within the observation window. This method may highlight a localized, high-intensity clustering effect.

-   **kde_CvL**: The left-skewed, more balanced distribution suggests that the CvL method is identifying a broader range of spatial concentrations. However, the smaller bin sizes smooth out finer details, which could mask important aspects of the point pattern. This method provides a more generalized view of the distribution but at the cost of losing granular insights.

-   **kde_scott**: The wider range of values and the absence of a sharp peak, compared to kde_diggle, indicates that the Scott method is capturing both highly dense clusters and moderately concentrated areas. This makes it more suitable for capturing variations in spatial concentration across different regions.

-   **kde_ppl**: Similar to the Diggle method, kde_ppl shows a sharp peak, suggesting the presence of a high concentration of points in a specific region. This points to a localized cluster, but with a similar potential risk of missing broader patterns in the dataset.
:::

```{r}
dse_diggle <- density(quarter_data_regions_ppp.km, bw_diggle, se=TRUE)$SE
dse_CvL <- density(quarter_data_regions_ppp.km, bw_CvL, se=TRUE)$SE
dse_scott <- density(quarter_data_regions_ppp.km, bw_scott, se=TRUE)$SE
dse_ppl <- density(quarter_data_regions_ppp.km, bw_ppl, se=TRUE)$SE
```

```{r}
par(mar = c(2,2,2,2),mfrow = c(2,2))
plot(dse_diggle,main = "standard error_diggle")
plot(dse_CvL,main = "standard error_CvL")
plot(dse_scott,main = "standard error_scott")
plot(dse_ppl,main = "standard error_ppl")
```

::: {.callout-tip title="Reflection"}
Consideration of Standard Error:

While the standard error (SE) of the density estimate provides valuable insight into the uncertainty associated with each density estimate, it is not the primary focus of this analysis. The shape of the density estimate, rather than its absolute value, is more critical when analyzing spatial patterns. Consequently, the SE was not used as a key criterion for bandwidth selection in this analysis.

Consideration of Standard Error: While the standard error (SE) of the density estimate provides valuable insight into the uncertainty associated with each density estimate, it is not the primary focus of this analysis. The shape of the density estimate, rather than its absolute value, is more critical when analyzing spatial patterns. Consequently, the SE was not used as a key criterion for bandwidth selection in this analysis.
:::

#### **1.5.4 Final Bandwidth Selection**

Upon the exploration of various fixed bandwidth selection methods for computing KDE vales, and subsequent plotting of the respective KDE estimates, their distributions and associated standard errors, we will now select the KDE bandwidth to be used in our analysis.

We landed on the `bw_scott` method for further analysis. This is because:

1.  `bw_scott` method provides a pair of bandwidth values for each coordinate axis. This allows it to capture the different levels of spatial clustering in each direction more accurately.
2.  `bw_scott` method capture the balance between bias and variance the best among all methods. If the bandwidth is too small, the estimate may be too skewed (high variance). The distribution histograms of KDE layers using `bw_diggle` and `bw_ppl` tend to indicate such nature. On the other hand, if the bandwidth is too large, the estimate may be over smoothed, missing crucial elements of the point pattern (high bias). This is what we observed in the distribution histogram of KDE layer using `bw_CvL`.

Since we have chosen to use `bw_scott` method, now we will plot the KDE layer using this method for further analysis.

##### **1.5.4.1 Working with different kernel methods**

Beyond the Gaussian kernel, three other kernels can be used to compute KDE: - Epanechnikov - Quartic - Disc

```{r}
par(mfrow=c(2,2), mar=c(1, 1, 1, 1), cex=0.5)
plot(density(quarter_data_regions_ppp.km, 
             sigma=bw_scott, 
             edge=TRUE, 
             kernel="gaussian"), 
     main="Gaussian")
plot(density(quarter_data_regions_ppp.km, 
             sigma=bw_scott, 
             edge=TRUE, 
             kernel="epanechnikov"), 
     main="Epanechnikov")
plot(density(quarter_data_regions_ppp.km, 
             sigma=bw_scott, 
             edge=TRUE, 
             kernel="quartic"), 
     main="Quartic")
plot(density(quarter_data_regions_ppp.km, 
             sigma=bw_scott, 
             edge=TRUE, 
             kernel="disc"), 
     main="Disc")
```

::: {.callout-tip title="Reflection"}
Upon comparing the outputs of different kernel functions **(Gaussian, Epanechnikov, Quartic, Disc)**, we observed that the resulting density estimates were very similar across all kernels. Given the minimal variation, the choice of kernel is not critical for this particular analysis.

We opted for the **Gaussian** kernel as it is widely used in kernel density estimation and tends to produce smooth, continuous estimates. Its flexibility in capturing both sharp peaks and gradual trends makes it a reasonable default choice, especially when the differences between kernels are negligible, as seen here.
:::

```{r,fig.width=12, fig.height=12}
kde_fixed_scott <- density(quarter_data_regions_ppp.km, bw_scott)
plot(kde_fixed_scott,main = "Fixed bandwidth KDE (Using bw_scott)")
contour(kde_fixed_scott, add=TRUE)
```

However, upon visual inspection, there are signs of a certain degree of over-smoothing when directly applying the bandwidth provided by the `bw_scott` method. While automatic bandwidth selection methods offer a useful starting point, further fine-tuning is often necessary to ensure the accuracy of the KDE plot.

To address the over-smoothing, we will apply a "rule of thumb" adjustment by dividing the bandwidth value by 2. This reduction in bandwidth size will help minimize the over-smoothing effect and enhance the precision of the spatial point pattern analysis.

```{r,fig.width=12, fig.height=12}
kde_quarter_data_regions_fixed_scott <- density(quarter_data_regions_ppp.km, bw_scott/2)
kde_quarter_data_regions_adaptive <- adaptive.density(quarter_data_regions_ppp.km, method="kernel")

par(mfrow=c(1,2))
plot(kde_quarter_data_regions_fixed_scott, main = "Fixed Bandwidth (bw_scott)")
plot(kde_quarter_data_regions_adaptive, main = "Adaptive Bandwidth")
```

::: {.callout-tip title="Reflection"}
After comparing the two approaches for kernel density estimation, Fixed Bandwidth using `bw_scott/2` and `Adaptive Bandwidth`, we observed that the fixed bandwidth method provides a more stable and interpretable result across the observation window. While adaptive bandwidth is designed to adjust to local point densities and capture finer details, it can sometimes introduce unnecessary complexity and overfit the density estimate, especially in areas with sparse data.

Given the goals of our analysis, which emphasize consistency and smoothness over high local sensitivity, the Fixed Bandwidth approach strikes a better balance between capturing spatial trends and avoiding over-complication.
:::

### **1.6 Year 2021**

```{r}
# Function to create combined events object with owin object
plot_event_by_quarter <- function(event_data, event_name) {
  quarter_data_ppp <- as.ppp(st_coordinates(event_data), st_bbox(event_data))
  regions_owin <- as.owin(regions_sf)
  quarter_data_regions_ppp = quarter_data_ppp[regions_owin]
  plot(quarter_data_regions_ppp,
     main = paste("Events in Myanmar -", event_name),
     xlab = "Longitude", ylab = "Latitude")
}
```

#### **Quarter 1**

```{r}
# Filter for the event type battles
acled_2021_Q1 <- acled_sf %>%
  filter(quarter == "2021 Q1")

# Get a list of unique quarters
events <- unique(acled_2021_Q1$event_type)

# Loop over each quarter and generate the plot
map(events, ~ {
  event_data <- acled_2021_Q1 %>% filter(event_type == .x)
  plot_event_by_quarter(event_data, .x)
})
```

::: panel-tabset
## Explosions/Remote violence

```{r}
Example <- "Explosions/Remote violence"
my_2021_Q1 <- acled_2021_Q1 %>%
  filter(event_type == Example)
quarter_data <- as_Spatial(my_2021_Q1)
quarter_data_sp <- as(quarter_data, "SpatialPoints")
quarter_data_ppp <- as.ppp(st_coordinates(my_2021_Q1), st_bbox(my_2021_Q1))

quarter_data_ppp_jit <- rjitter(quarter_data_ppp, 
                             retry=TRUE, 
                             nsim=1, 
                             drop=TRUE)

quarter_data_regions_ppp = quarter_data_ppp_jit[regions_owin]
```

```{r,fig.width=12, fig.height=12}
quarter_data_regions_ppp = quarter_data_ppp_jit[regions_owin]
quarter_data_regions_ppp.km <- rescale.ppp(quarter_data_regions_ppp, 50000, "km")

bw_scott <- bw.scott(quarter_data_regions_ppp.km)

plot(density(quarter_data_regions_ppp.km, 
             sigma=bw_scott/2, 
             edge=TRUE, 
             kernel="gaussian"), 
     main = "2021 Q1 - Explosion/Remote violence")
```

## Strategic developments

```{r}
Example <- "Strategic developments"
my_2021_Q1 <- acled_2021_Q1 %>%
  filter(event_type == Example)
quarter_data <- as_Spatial(my_2021_Q1)
quarter_data_sp <- as(quarter_data, "SpatialPoints")
quarter_data_ppp <- as.ppp(st_coordinates(my_2021_Q1), st_bbox(my_2021_Q1))

quarter_data_ppp_jit <- rjitter(quarter_data_ppp, 
                             retry=TRUE, 
                             nsim=1, 
                             drop=TRUE)

quarter_data_regions_ppp = quarter_data_ppp_jit[regions_owin]
```

```{r,fig.width=12, fig.height=12}
quarter_data_regions_ppp = quarter_data_ppp_jit[regions_owin]
quarter_data_regions_ppp.km <- rescale.ppp(quarter_data_regions_ppp, 50000, "km")

bw_scott <- bw.scott(quarter_data_regions_ppp.km)

plot(density(quarter_data_regions_ppp.km, 
             sigma=bw_scott/2, 
             edge=TRUE, 
             kernel="gaussian"), 
     main = "2021 Q1 - Strategic developments")
```

## Battles

```{r}
Example <- "Battles"
my_2021_Q1 <- acled_2021_Q1 %>%
  filter(event_type == Example)
quarter_data <- as_Spatial(my_2021_Q1)
quarter_data_sp <- as(quarter_data, "SpatialPoints")
quarter_data_ppp <- as.ppp(st_coordinates(my_2021_Q1), st_bbox(my_2021_Q1))

quarter_data_ppp_jit <- rjitter(quarter_data_ppp, 
                             retry=TRUE, 
                             nsim=1, 
                             drop=TRUE)

quarter_data_regions_ppp = quarter_data_ppp_jit[regions_owin]
```

```{r,fig.width=12, fig.height=12}
quarter_data_regions_ppp = quarter_data_ppp_jit[regions_owin]
quarter_data_regions_ppp.km <- rescale.ppp(quarter_data_regions_ppp, 50000, "km")

bw_scott <- bw.scott(quarter_data_regions_ppp.km)

plot(density(quarter_data_regions_ppp.km, 
             sigma=bw_scott/2, 
             edge=TRUE, 
             kernel="gaussian"), 
     main = "2021 Q1 - Battles")
```

## Violence against civilians

```{r}
Example <- "Violence against civilians"
my_2021_Q1 <- acled_2021_Q1 %>%
  filter(event_type == Example)
quarter_data <- as_Spatial(my_2021_Q1)
quarter_data_sp <- as(quarter_data, "SpatialPoints")
quarter_data_ppp <- as.ppp(st_coordinates(my_2021_Q1), st_bbox(my_2021_Q1))

quarter_data_ppp_jit <- rjitter(quarter_data_ppp, 
                             retry=TRUE, 
                             nsim=1, 
                             drop=TRUE)

quarter_data_regions_ppp = quarter_data_ppp_jit[regions_owin]
```

```{r,fig.width=12, fig.height=12}
quarter_data_regions_ppp = quarter_data_ppp_jit[regions_owin]
quarter_data_regions_ppp.km <- rescale.ppp(quarter_data_regions_ppp, 50000, "km")

bw_scott <- bw.scott(quarter_data_regions_ppp.km)

plot(density(quarter_data_regions_ppp.km, 
             sigma=bw_scott/2, 
             edge=TRUE, 
             kernel="gaussian"), 
     main = "2021 Q1 -Violence against civilians")
```
:::

#### **Quarter 2**

```{r}
# Filter for the event type battles
acled_2021_Q2 <- acled_sf %>%
  filter(quarter == "2021 Q2")

# Get a list of unique quarters
events <- unique(acled_2021_Q2$event_type)

# Loop over each quarter and generate the plot
map(events, ~ {
  event_data <- acled_2021_Q2 %>% filter(event_type == .x)
  plot_event_by_quarter(event_data, .x)
})
```

::: panel-tabset
## Explosions/Remote violence

```{r}
Example <- "Explosions/Remote violence"
my_2021_Q2 <- acled_2021_Q2 %>%
  filter(event_type == Example)
quarter_data <- as_Spatial(my_2021_Q2)
quarter_data_sp <- as(quarter_data, "SpatialPoints")
quarter_data_ppp <- as.ppp(st_coordinates(my_2021_Q2), st_bbox(my_2021_Q2))

quarter_data_ppp_jit <- rjitter(quarter_data_ppp, 
                             retry=TRUE, 
                             nsim=1, 
                             drop=TRUE)

quarter_data_regions_ppp = quarter_data_ppp_jit[regions_owin]
```

```{r,fig.width=12, fig.height=12}
quarter_data_regions_ppp = quarter_data_ppp_jit[regions_owin]
quarter_data_regions_ppp.km <- rescale.ppp(quarter_data_regions_ppp, 50000, "km")

bw_scott <- bw.scott(quarter_data_regions_ppp.km)

plot(density(quarter_data_regions_ppp.km, 
             sigma=bw_scott/2, 
             edge=TRUE, 
             kernel="gaussian"), 
     main = "2021 Q2 - Explosion/Remote violence")
```

## Strategic developments

```{r}
Example <- "Strategic developments"
my_2021_Q2 <- acled_2021_Q2 %>%
  filter(event_type == Example)
quarter_data <- as_Spatial(my_2021_Q2)
quarter_data_sp <- as(quarter_data, "SpatialPoints")
quarter_data_ppp <- as.ppp(st_coordinates(my_2021_Q2), st_bbox(my_2021_Q2))

quarter_data_ppp_jit <- rjitter(quarter_data_ppp, 
                             retry=TRUE, 
                             nsim=1, 
                             drop=TRUE)

quarter_data_regions_ppp = quarter_data_ppp_jit[regions_owin]
```

```{r,fig.width=12, fig.height=12}
quarter_data_regions_ppp = quarter_data_ppp_jit[regions_owin]
quarter_data_regions_ppp.km <- rescale.ppp(quarter_data_regions_ppp, 50000, "km")

bw_scott <- bw.scott(quarter_data_regions_ppp.km)

plot(density(quarter_data_regions_ppp.km, 
             sigma=bw_scott/2, 
             edge=TRUE, 
             kernel="gaussian"), 
     main = "2021 Q2 - Strategic developments")
```

## Battles

```{r}
Example <- "Battles"
my_2021_Q2 <- acled_2021_Q2 %>%
  filter(event_type == Example)
quarter_data <- as_Spatial(my_2021_Q2)
quarter_data_sp <- as(quarter_data, "SpatialPoints")
quarter_data_ppp <- as.ppp(st_coordinates(my_2021_Q2), st_bbox(my_2021_Q2))

quarter_data_ppp_jit <- rjitter(quarter_data_ppp, 
                             retry=TRUE, 
                             nsim=1, 
                             drop=TRUE)

quarter_data_regions_ppp = quarter_data_ppp_jit[regions_owin]
```

```{r,fig.width=12, fig.height=12}
quarter_data_regions_ppp = quarter_data_ppp_jit[regions_owin]
quarter_data_regions_ppp.km <- rescale.ppp(quarter_data_regions_ppp, 50000, "km")

bw_scott <- bw.scott(quarter_data_regions_ppp.km)

plot(density(quarter_data_regions_ppp.km, 
             sigma=bw_scott/2, 
             edge=TRUE, 
             kernel="gaussian"), 
     main = "2021 Q2 - Battles")
```

## Violence against civilians

```{r}
Example <- "Violence against civilians"
my_2021_Q2 <- acled_2021_Q2 %>%
  filter(event_type == Example)
quarter_data <- as_Spatial(my_2021_Q2)
quarter_data_sp <- as(quarter_data, "SpatialPoints")
quarter_data_ppp <- as.ppp(st_coordinates(my_2021_Q2), st_bbox(my_2021_Q2))

quarter_data_ppp_jit <- rjitter(quarter_data_ppp, 
                             retry=TRUE, 
                             nsim=1, 
                             drop=TRUE)

quarter_data_regions_ppp = quarter_data_ppp_jit[regions_owin]
```

```{r,fig.width=12, fig.height=12}
quarter_data_regions_ppp = quarter_data_ppp_jit[regions_owin]
quarter_data_regions_ppp.km <- rescale.ppp(quarter_data_regions_ppp, 50000, "km")

bw_scott <- bw.scott(quarter_data_regions_ppp.km)

plot(density(quarter_data_regions_ppp.km, 
             sigma=bw_scott/2, 
             edge=TRUE, 
             kernel="gaussian"), 
     main = "2021 Q2 - Violence against civilians")
```
:::

#### **Quarter 3**

```{r}
# Filter for the event type battles
acled_2021_Q3 <- acled_sf %>%
  filter(quarter == "2021 Q3")

# Get a list of unique quarters
events <- unique(acled_2021_Q3$event_type)

# Loop over each quarter and generate the plot
map(events, ~ {
  event_data <- acled_2021_Q3 %>% filter(event_type == .x)
  plot_event_by_quarter(event_data, .x)
})
```

::: panel-tabset
## Explosions/Remote violence

```{r}
Example <- "Explosions/Remote violence"
my_2021_Q3 <- acled_2021_Q3 %>%
  filter(event_type == Example)
quarter_data <- as_Spatial(my_2021_Q3)
quarter_data_sp <- as(quarter_data, "SpatialPoints")
quarter_data_ppp <- as.ppp(st_coordinates(my_2021_Q3), st_bbox(my_2021_Q3))

quarter_data_ppp_jit <- rjitter(quarter_data_ppp, 
                             retry=TRUE, 
                             nsim=1, 
                             drop=TRUE)

quarter_data_regions_ppp = quarter_data_ppp_jit[regions_owin]
```

```{r,fig.width=12, fig.height=12}
quarter_data_regions_ppp = quarter_data_ppp_jit[regions_owin]
quarter_data_regions_ppp.km <- rescale.ppp(quarter_data_regions_ppp, 50000, "km")

bw_scott <- bw.scott(quarter_data_regions_ppp.km)

plot(density(quarter_data_regions_ppp.km, 
             sigma=bw_scott/2, 
             edge=TRUE, 
             kernel="gaussian"), 
     main = "2021 Q3 - Explosion/Remote violence")
```

## Strategic developments

```{r}
Example <- "Strategic developments"
my_2021_Q3 <- acled_2021_Q3 %>%
  filter(event_type == Example)
quarter_data <- as_Spatial(my_2021_Q3)
quarter_data_sp <- as(quarter_data, "SpatialPoints")
quarter_data_ppp <- as.ppp(st_coordinates(my_2021_Q3), st_bbox(my_2021_Q3))

quarter_data_ppp_jit <- rjitter(quarter_data_ppp, 
                             retry=TRUE, 
                             nsim=1, 
                             drop=TRUE)

quarter_data_regions_ppp = quarter_data_ppp_jit[regions_owin]
```

```{r,fig.width=12, fig.height=12}
quarter_data_regions_ppp = quarter_data_ppp_jit[regions_owin]
quarter_data_regions_ppp.km <- rescale.ppp(quarter_data_regions_ppp, 50000, "km")

bw_scott <- bw.scott(quarter_data_regions_ppp.km)

plot(density(quarter_data_regions_ppp.km, 
             sigma=bw_scott/2, 
             edge=TRUE, 
             kernel="gaussian"), 
     main = "2021 Q3 - Strategic developments")
```

## Battles

```{r}
Example <- "Battles"
my_2021_Q3 <- acled_2021_Q3 %>%
  filter(event_type == Example)
quarter_data <- as_Spatial(my_2021_Q3)
quarter_data_sp <- as(quarter_data, "SpatialPoints")
quarter_data_ppp <- as.ppp(st_coordinates(my_2021_Q3), st_bbox(my_2021_Q3))

quarter_data_ppp_jit <- rjitter(quarter_data_ppp, 
                             retry=TRUE, 
                             nsim=1, 
                             drop=TRUE)

quarter_data_regions_ppp = quarter_data_ppp_jit[regions_owin]
```

```{r,fig.width=12, fig.height=12}
quarter_data_regions_ppp = quarter_data_ppp_jit[regions_owin]
quarter_data_regions_ppp.km <- rescale.ppp(quarter_data_regions_ppp, 50000, "km")

bw_scott <- bw.scott(quarter_data_regions_ppp.km)

plot(density(quarter_data_regions_ppp.km, 
             sigma=bw_scott/2, 
             edge=TRUE, 
             kernel="gaussian"), 
     main = "2021 Q3 - Battles")
```

## Violence against civilians

```{r}
Example <- "Violence against civilians"
my_2021_Q3 <- acled_2021_Q3 %>%
  filter(event_type == Example)
quarter_data <- as_Spatial(my_2021_Q3)
quarter_data_sp <- as(quarter_data, "SpatialPoints")
quarter_data_ppp <- as.ppp(st_coordinates(my_2021_Q3), st_bbox(my_2021_Q3))

quarter_data_ppp_jit <- rjitter(quarter_data_ppp, 
                             retry=TRUE, 
                             nsim=1, 
                             drop=TRUE)

quarter_data_regions_ppp = quarter_data_ppp_jit[regions_owin]
```

```{r,fig.width=12, fig.height=12}
quarter_data_regions_ppp = quarter_data_ppp_jit[regions_owin]
quarter_data_regions_ppp.km <- rescale.ppp(quarter_data_regions_ppp, 50000, "km")

bw_scott <- bw.scott(quarter_data_regions_ppp.km)

plot(density(quarter_data_regions_ppp.km, 
             sigma=bw_scott/2, 
             edge=TRUE, 
             kernel="gaussian"), 
     main = "2021 Q3 - Violence against civilians")
```
:::

#### **Quarter 4**

```{r}
# Filter for the event type battles
acled_2021_Q4 <- acled_sf %>%
  filter(quarter == "2021 Q4")

# Get a list of unique quarters
events <- unique(acled_2021_Q4$event_type)

# Loop over each quarter and generate the plot
map(events, ~ {
  event_data <- acled_2021_Q4 %>% filter(event_type == .x)
  plot_event_by_quarter(event_data, .x)
})
```

::: panel-tabset
## Explosions/Remote violence

```{r}
Example <- "Explosions/Remote violence"
my_2021_Q4 <- acled_2021_Q4 %>%
  filter(event_type == Example)
quarter_data <- as_Spatial(my_2021_Q4)
quarter_data_sp <- as(quarter_data, "SpatialPoints")
quarter_data_ppp <- as.ppp(st_coordinates(my_2021_Q4), st_bbox(my_2021_Q4))

quarter_data_ppp_jit <- rjitter(quarter_data_ppp, 
                             retry=TRUE, 
                             nsim=1, 
                             drop=TRUE)

quarter_data_regions_ppp = quarter_data_ppp_jit[regions_owin]
```

```{r,fig.width=12, fig.height=12}
quarter_data_regions_ppp = quarter_data_ppp_jit[regions_owin]
quarter_data_regions_ppp.km <- rescale.ppp(quarter_data_regions_ppp, 50000, "km")

bw_scott <- bw.scott(quarter_data_regions_ppp.km)

plot(density(quarter_data_regions_ppp.km, 
             sigma=bw_scott/2, 
             edge=TRUE, 
             kernel="gaussian"), 
     main = "2021 Q4 - Explosion/Remote violence")
```

## Strategic developments

```{r}
Example <- "Strategic developments"
my_2021_Q4 <- acled_2021_Q4 %>%
  filter(event_type == Example)
quarter_data <- as_Spatial(my_2021_Q4)
quarter_data_sp <- as(quarter_data, "SpatialPoints")
quarter_data_ppp <- as.ppp(st_coordinates(my_2021_Q4), st_bbox(my_2021_Q4))

quarter_data_ppp_jit <- rjitter(quarter_data_ppp, 
                             retry=TRUE, 
                             nsim=1, 
                             drop=TRUE)

quarter_data_regions_ppp = quarter_data_ppp_jit[regions_owin]
```

```{r,fig.width=12, fig.height=12}
quarter_data_regions_ppp = quarter_data_ppp_jit[regions_owin]
quarter_data_regions_ppp.km <- rescale.ppp(quarter_data_regions_ppp, 50000, "km")

bw_scott <- bw.scott(quarter_data_regions_ppp.km)

plot(density(quarter_data_regions_ppp.km, 
             sigma=bw_scott/2, 
             edge=TRUE, 
             kernel="gaussian"), 
     main = "2021 Q4 - Strategic developments")
```

## Battles

```{r}
Example <- "Battles"
my_2021_Q4 <- acled_2021_Q4 %>%
  filter(event_type == Example)
quarter_data <- as_Spatial(my_2021_Q4)
quarter_data_sp <- as(quarter_data, "SpatialPoints")
quarter_data_ppp <- as.ppp(st_coordinates(my_2021_Q4), st_bbox(my_2021_Q4))

quarter_data_ppp_jit <- rjitter(quarter_data_ppp, 
                             retry=TRUE, 
                             nsim=1, 
                             drop=TRUE)

quarter_data_regions_ppp = quarter_data_ppp_jit[regions_owin]
```

```{r,fig.width=12, fig.height=12}
quarter_data_regions_ppp = quarter_data_ppp_jit[regions_owin]
quarter_data_regions_ppp.km <- rescale.ppp(quarter_data_regions_ppp, 50000, "km")

bw_scott <- bw.scott(quarter_data_regions_ppp.km)

plot(density(quarter_data_regions_ppp.km, 
             sigma=bw_scott/2, 
             edge=TRUE, 
             kernel="gaussian"), 
     main = "2021 Q4 - Battles")
```

## Violence against civilians

```{r}
Example <- "Violence against civilians"
my_2021_Q4 <- acled_2021_Q4 %>%
  filter(event_type == Example)
quarter_data <- as_Spatial(my_2021_Q4)
quarter_data_sp <- as(quarter_data, "SpatialPoints")
quarter_data_ppp <- as.ppp(st_coordinates(my_2021_Q4), st_bbox(my_2021_Q4))

quarter_data_ppp_jit <- rjitter(quarter_data_ppp, 
                             retry=TRUE, 
                             nsim=1, 
                             drop=TRUE)

quarter_data_regions_ppp = quarter_data_ppp_jit[regions_owin]
```

```{r,fig.width=12, fig.height=12}
quarter_data_regions_ppp = quarter_data_ppp_jit[regions_owin]
quarter_data_regions_ppp.km <- rescale.ppp(quarter_data_regions_ppp, 50000, "km")

bw_scott <- bw.scott(quarter_data_regions_ppp.km)

plot(density(quarter_data_regions_ppp.km, 
             sigma=bw_scott/2, 
             edge=TRUE, 
             kernel="gaussian"), 
     main = "2021 Q4 - Violence against civilians")
```
:::

### **1.7 Year 2022**

#### **Quarter 1**

```{r}
# Filter for the event type battles
acled_2022_Q1 <- acled_sf %>%
  filter(quarter == "2022 Q1")

# Get a list of unique quarters
events <- unique(acled_2022_Q1$event_type)

# Loop over each quarter and generate the plot
map(events, ~ {
  event_data <- acled_2022_Q1 %>% filter(event_type == .x)
  plot_event_by_quarter(event_data, .x)
})
```

::: panel-tabset
## Explosions/Remote violence

```{r}
Example <- "Explosions/Remote violence"
my_2022_Q1 <- acled_2022_Q1 %>%
  filter(event_type == Example)
quarter_data <- as_Spatial(my_2022_Q1)
quarter_data_sp <- as(quarter_data, "SpatialPoints")
quarter_data_ppp <- as.ppp(st_coordinates(my_2022_Q1), st_bbox(my_2022_Q1))

quarter_data_ppp_jit <- rjitter(quarter_data_ppp, 
                             retry=TRUE, 
                             nsim=1, 
                             drop=TRUE)

quarter_data_regions_ppp = quarter_data_ppp_jit[regions_owin]
```

```{r,fig.width=12, fig.height=12}
quarter_data_regions_ppp = quarter_data_ppp_jit[regions_owin]
quarter_data_regions_ppp.km <- rescale.ppp(quarter_data_regions_ppp, 50000, "km")

bw_scott <- bw.scott(quarter_data_regions_ppp.km)

plot(density(quarter_data_regions_ppp.km, 
             sigma=bw_scott/2, 
             edge=TRUE, 
             kernel="gaussian"), 
     main = "2022 Q1 - Explosion/Remote violence")
```

## Strategic developments

```{r}
Example <- "Strategic developments"
my_2022_Q1 <- acled_2022_Q1 %>%
  filter(event_type == Example)
quarter_data <- as_Spatial(my_2022_Q1)
quarter_data_sp <- as(quarter_data, "SpatialPoints")
quarter_data_ppp <- as.ppp(st_coordinates(my_2022_Q1), st_bbox(my_2022_Q1))

quarter_data_ppp_jit <- rjitter(quarter_data_ppp, 
                             retry=TRUE, 
                             nsim=1, 
                             drop=TRUE)

quarter_data_regions_ppp = quarter_data_ppp_jit[regions_owin]
```

```{r,fig.width=12, fig.height=12}
quarter_data_regions_ppp = quarter_data_ppp_jit[regions_owin]
quarter_data_regions_ppp.km <- rescale.ppp(quarter_data_regions_ppp, 50000, "km")

bw_scott <- bw.scott(quarter_data_regions_ppp.km)

plot(density(quarter_data_regions_ppp.km, 
             sigma=bw_scott/2, 
             edge=TRUE, 
             kernel="gaussian"), 
     main = "2022 Q1 - Strategic developments")
```

## Battles

```{r}
Example <- "Battles"
my_2022_Q1 <- acled_2022_Q1 %>%
  filter(event_type == Example)
quarter_data <- as_Spatial(my_2022_Q1)
quarter_data_sp <- as(quarter_data, "SpatialPoints")
quarter_data_ppp <- as.ppp(st_coordinates(my_2022_Q1), st_bbox(my_2022_Q1))

quarter_data_ppp_jit <- rjitter(quarter_data_ppp, 
                             retry=TRUE, 
                             nsim=1, 
                             drop=TRUE)

quarter_data_regions_ppp = quarter_data_ppp_jit[regions_owin]
```

```{r,fig.width=12, fig.height=12}
quarter_data_regions_ppp = quarter_data_ppp_jit[regions_owin]
quarter_data_regions_ppp.km <- rescale.ppp(quarter_data_regions_ppp, 50000, "km")

bw_scott <- bw.scott(quarter_data_regions_ppp.km)

plot(density(quarter_data_regions_ppp.km, 
             sigma=bw_scott/2, 
             edge=TRUE, 
             kernel="gaussian"), 
     main = "2022 Q1 - Battles")
```

## Violence against civilians

```{r}
Example <- "Violence against civilians"
my_2022_Q1 <- acled_2022_Q1 %>%
  filter(event_type == Example)
quarter_data <- as_Spatial(my_2022_Q1)
quarter_data_sp <- as(quarter_data, "SpatialPoints")
quarter_data_ppp <- as.ppp(st_coordinates(my_2022_Q1), st_bbox(my_2022_Q1))

quarter_data_ppp_jit <- rjitter(quarter_data_ppp, 
                             retry=TRUE, 
                             nsim=1, 
                             drop=TRUE)

quarter_data_regions_ppp = quarter_data_ppp_jit[regions_owin]
```

```{r,fig.width=12, fig.height=12}
quarter_data_regions_ppp = quarter_data_ppp_jit[regions_owin]
quarter_data_regions_ppp.km <- rescale.ppp(quarter_data_regions_ppp, 50000, "km")

bw_scott <- bw.scott(quarter_data_regions_ppp.km)

plot(density(quarter_data_regions_ppp.km, 
             sigma=bw_scott/2, 
             edge=TRUE, 
             kernel="gaussian"), 
     main = "2022 Q1 -Violence against civilians")
```
:::

#### **Quarter 2**

```{r}
# Filter for the event type battles
acled_2022_Q2 <- acled_sf %>%
  filter(quarter == "2022 Q2")

# Get a list of unique quarters
events <- unique(acled_2022_Q2$event_type)

# Loop over each quarter and generate the plot
map(events, ~ {
  event_data <- acled_2022_Q2 %>% filter(event_type == .x)
  plot_event_by_quarter(event_data, .x)
})
```

::: panel-tabset
## Explosions/Remote violence

```{r}
Example <- "Explosions/Remote violence"
my_2022_Q2 <- acled_2022_Q2 %>%
  filter(event_type == Example)
quarter_data <- as_Spatial(my_2022_Q2)
quarter_data_sp <- as(quarter_data, "SpatialPoints")
quarter_data_ppp <- as.ppp(st_coordinates(my_2022_Q2), st_bbox(my_2022_Q2))

quarter_data_ppp_jit <- rjitter(quarter_data_ppp, 
                             retry=TRUE, 
                             nsim=1, 
                             drop=TRUE)

quarter_data_regions_ppp = quarter_data_ppp_jit[regions_owin]
```

```{r,fig.width=12, fig.height=12}
quarter_data_regions_ppp = quarter_data_ppp_jit[regions_owin]
quarter_data_regions_ppp.km <- rescale.ppp(quarter_data_regions_ppp, 50000, "km")

bw_scott <- bw.scott(quarter_data_regions_ppp.km)

plot(density(quarter_data_regions_ppp.km, 
             sigma=bw_scott/2, 
             edge=TRUE, 
             kernel="gaussian"), 
     main = "2022 Q2 - Explosion/Remote violence")
```

## Strategic developments

```{r}
Example <- "Strategic developments"
my_2022_Q2 <- acled_2022_Q2 %>%
  filter(event_type == Example)
quarter_data <- as_Spatial(my_2022_Q2)
quarter_data_sp <- as(quarter_data, "SpatialPoints")
quarter_data_ppp <- as.ppp(st_coordinates(my_2022_Q2), st_bbox(my_2022_Q2))

quarter_data_ppp_jit <- rjitter(quarter_data_ppp, 
                             retry=TRUE, 
                             nsim=1, 
                             drop=TRUE)

quarter_data_regions_ppp = quarter_data_ppp_jit[regions_owin]
```

```{r,fig.width=12, fig.height=12}
quarter_data_regions_ppp = quarter_data_ppp_jit[regions_owin]
quarter_data_regions_ppp.km <- rescale.ppp(quarter_data_regions_ppp, 50000, "km")

bw_scott <- bw.scott(quarter_data_regions_ppp.km)

plot(density(quarter_data_regions_ppp.km, 
             sigma=bw_scott/2, 
             edge=TRUE, 
             kernel="gaussian"), 
     main = "2022 Q2 - Strategic developments")
```

## Battles

```{r}
Example <- "Battles"
my_2022_Q2 <- acled_2022_Q2 %>%
  filter(event_type == Example)
quarter_data <- as_Spatial(my_2022_Q2)
quarter_data_sp <- as(quarter_data, "SpatialPoints")
quarter_data_ppp <- as.ppp(st_coordinates(my_2022_Q2), st_bbox(my_2022_Q2))

quarter_data_ppp_jit <- rjitter(quarter_data_ppp, 
                             retry=TRUE, 
                             nsim=1, 
                             drop=TRUE)

quarter_data_regions_ppp = quarter_data_ppp_jit[regions_owin]
```

```{r,fig.width=12, fig.height=12}
quarter_data_regions_ppp = quarter_data_ppp_jit[regions_owin]
quarter_data_regions_ppp.km <- rescale.ppp(quarter_data_regions_ppp, 50000, "km")

bw_scott <- bw.scott(quarter_data_regions_ppp.km)

plot(density(quarter_data_regions_ppp.km, 
             sigma=bw_scott/2, 
             edge=TRUE, 
             kernel="gaussian"), 
     main = "2022 Q2 - Battles")
```

## Violence against civilians

```{r}
Example <- "Violence against civilians"
my_2022_Q2 <- acled_2022_Q2 %>%
  filter(event_type == Example)
quarter_data <- as_Spatial(my_2022_Q2)
quarter_data_sp <- as(quarter_data, "SpatialPoints")
quarter_data_ppp <- as.ppp(st_coordinates(my_2022_Q2), st_bbox(my_2022_Q2))

quarter_data_ppp_jit <- rjitter(quarter_data_ppp, 
                             retry=TRUE, 
                             nsim=1, 
                             drop=TRUE)

quarter_data_regions_ppp = quarter_data_ppp_jit[regions_owin]
```

```{r,fig.width=12, fig.height=12}
quarter_data_regions_ppp = quarter_data_ppp_jit[regions_owin]
quarter_data_regions_ppp.km <- rescale.ppp(quarter_data_regions_ppp, 50000, "km")

bw_scott <- bw.scott(quarter_data_regions_ppp.km)

plot(density(quarter_data_regions_ppp.km, 
             sigma=bw_scott/2, 
             edge=TRUE, 
             kernel="gaussian"), 
     main = "2022 Q2 - Violence against civilians")
```
:::

#### **Quarter 3**

```{r}
# Filter for the event type battles
acled_2022_Q3 <- acled_sf %>%
  filter(quarter == "2022 Q3")

# Get a list of unique quarters
events <- unique(acled_2022_Q3$event_type)

# Loop over each quarter and generate the plot
map(events, ~ {
  event_data <- acled_2022_Q3 %>% filter(event_type == .x)
  plot_event_by_quarter(event_data, .x)
})
```

::: panel-tabset
## Explosions/Remote violence

```{r}
Example <- "Explosions/Remote violence"
my_2022_Q3 <- acled_2022_Q3 %>%
  filter(event_type == Example)
quarter_data <- as_Spatial(my_2022_Q3)
quarter_data_sp <- as(quarter_data, "SpatialPoints")
quarter_data_ppp <- as.ppp(st_coordinates(my_2022_Q3), st_bbox(my_2022_Q3))

quarter_data_ppp_jit <- rjitter(quarter_data_ppp, 
                             retry=TRUE, 
                             nsim=1, 
                             drop=TRUE)

quarter_data_regions_ppp = quarter_data_ppp_jit[regions_owin]
```

```{r,fig.width=12, fig.height=12}
quarter_data_regions_ppp = quarter_data_ppp_jit[regions_owin]
quarter_data_regions_ppp.km <- rescale.ppp(quarter_data_regions_ppp, 50000, "km")

bw_scott <- bw.scott(quarter_data_regions_ppp.km)

plot(density(quarter_data_regions_ppp.km, 
             sigma=bw_scott/2, 
             edge=TRUE, 
             kernel="gaussian"), 
     main = "2022 Q3 - Explosion/Remote violence")
```

## Strategic developments

```{r}
Example <- "Strategic developments"
my_2022_Q3 <- acled_2022_Q3 %>%
  filter(event_type == Example)
quarter_data <- as_Spatial(my_2022_Q3)
quarter_data_sp <- as(quarter_data, "SpatialPoints")
quarter_data_ppp <- as.ppp(st_coordinates(my_2022_Q3), st_bbox(my_2022_Q3))

quarter_data_ppp_jit <- rjitter(quarter_data_ppp, 
                             retry=TRUE, 
                             nsim=1, 
                             drop=TRUE)

quarter_data_regions_ppp = quarter_data_ppp_jit[regions_owin]
```

```{r,fig.width=12, fig.height=12}
quarter_data_regions_ppp = quarter_data_ppp_jit[regions_owin]
quarter_data_regions_ppp.km <- rescale.ppp(quarter_data_regions_ppp, 50000, "km")

bw_scott <- bw.scott(quarter_data_regions_ppp.km)

plot(density(quarter_data_regions_ppp.km, 
             sigma=bw_scott/2, 
             edge=TRUE, 
             kernel="gaussian"), 
     main = "2022 Q3 - Strategic developments")
```

## Battles

```{r}
Example <- "Battles"
my_2022_Q3 <- acled_2022_Q3 %>%
  filter(event_type == Example)
quarter_data <- as_Spatial(my_2022_Q3)
quarter_data_sp <- as(quarter_data, "SpatialPoints")
quarter_data_ppp <- as.ppp(st_coordinates(my_2022_Q3), st_bbox(my_2022_Q3))

quarter_data_ppp_jit <- rjitter(quarter_data_ppp, 
                             retry=TRUE, 
                             nsim=1, 
                             drop=TRUE)

quarter_data_regions_ppp = quarter_data_ppp_jit[regions_owin]
```

```{r,fig.width=12, fig.height=12}
quarter_data_regions_ppp = quarter_data_ppp_jit[regions_owin]
quarter_data_regions_ppp.km <- rescale.ppp(quarter_data_regions_ppp, 50000, "km")

bw_scott <- bw.scott(quarter_data_regions_ppp.km)

plot(density(quarter_data_regions_ppp.km, 
             sigma=bw_scott/2, 
             edge=TRUE, 
             kernel="gaussian"), 
     main = "2022 Q3 - Battles")
```

## Violence against civilians

```{r}
Example <- "Violence against civilians"
my_2022_Q3 <- acled_2022_Q3 %>%
  filter(event_type == Example)
quarter_data <- as_Spatial(my_2022_Q3)
quarter_data_sp <- as(quarter_data, "SpatialPoints")
quarter_data_ppp <- as.ppp(st_coordinates(my_2022_Q3), st_bbox(my_2022_Q3))

quarter_data_ppp_jit <- rjitter(quarter_data_ppp, 
                             retry=TRUE, 
                             nsim=1, 
                             drop=TRUE)

quarter_data_regions_ppp = quarter_data_ppp_jit[regions_owin]
```

```{r,fig.width=12, fig.height=12}
quarter_data_regions_ppp = quarter_data_ppp_jit[regions_owin]
quarter_data_regions_ppp.km <- rescale.ppp(quarter_data_regions_ppp, 50000, "km")

bw_scott <- bw.scott(quarter_data_regions_ppp.km)

plot(density(quarter_data_regions_ppp.km, 
             sigma=bw_scott/2, 
             edge=TRUE, 
             kernel="gaussian"), 
     main = "2022 Q3 - Violence against civilians")
```
:::

#### **Quarter 4**

```{r}
# Filter for the event type battles
acled_2022_Q4 <- acled_sf %>%
  filter(quarter == "2022 Q4")

# Get a list of unique quarters
events <- unique(acled_2022_Q4$event_type)

# Loop over each quarter and generate the plot
map(events, ~ {
  event_data <- acled_2022_Q4 %>% filter(event_type == .x)
  plot_event_by_quarter(event_data, .x)
})
```

::: panel-tabset
## Explosions/Remote violence

```{r}
Example <- "Explosions/Remote violence"
my_2022_Q4 <- acled_2022_Q4 %>%
  filter(event_type == Example)
quarter_data <- as_Spatial(my_2022_Q4)
quarter_data_sp <- as(quarter_data, "SpatialPoints")
quarter_data_ppp <- as.ppp(st_coordinates(my_2022_Q4), st_bbox(my_2022_Q4))

quarter_data_ppp_jit <- rjitter(quarter_data_ppp, 
                             retry=TRUE, 
                             nsim=1, 
                             drop=TRUE)

quarter_data_regions_ppp = quarter_data_ppp_jit[regions_owin]
```

```{r,fig.width=12, fig.height=12}
quarter_data_regions_ppp = quarter_data_ppp_jit[regions_owin]
quarter_data_regions_ppp.km <- rescale.ppp(quarter_data_regions_ppp, 50000, "km")

bw_scott <- bw.scott(quarter_data_regions_ppp.km)

plot(density(quarter_data_regions_ppp.km, 
             sigma=bw_scott/2, 
             edge=TRUE, 
             kernel="gaussian"), 
     main = "2022 Q4 - Explosion/Remote violence")
```

## Strategic developments

```{r}
Example <- "Strategic developments"
my_2022_Q4 <- acled_2022_Q4 %>%
  filter(event_type == Example)
quarter_data <- as_Spatial(my_2022_Q4)
quarter_data_sp <- as(quarter_data, "SpatialPoints")
quarter_data_ppp <- as.ppp(st_coordinates(my_2022_Q4), st_bbox(my_2022_Q4))

quarter_data_ppp_jit <- rjitter(quarter_data_ppp, 
                             retry=TRUE, 
                             nsim=1, 
                             drop=TRUE)

quarter_data_regions_ppp = quarter_data_ppp_jit[regions_owin]
```

```{r,fig.width=12, fig.height=12}
quarter_data_regions_ppp = quarter_data_ppp_jit[regions_owin]
quarter_data_regions_ppp.km <- rescale.ppp(quarter_data_regions_ppp, 50000, "km")

bw_scott <- bw.scott(quarter_data_regions_ppp.km)

plot(density(quarter_data_regions_ppp.km, 
             sigma=bw_scott/2, 
             edge=TRUE, 
             kernel="gaussian"), 
     main = "2022 Q4 - Strategic developments")
```

## Battles

```{r}
Example <- "Battles"
my_2022_Q4 <- acled_2022_Q4 %>%
  filter(event_type == Example)
quarter_data <- as_Spatial(my_2022_Q4)
quarter_data_sp <- as(quarter_data, "SpatialPoints")
quarter_data_ppp <- as.ppp(st_coordinates(my_2022_Q4), st_bbox(my_2022_Q4))

quarter_data_ppp_jit <- rjitter(quarter_data_ppp, 
                             retry=TRUE, 
                             nsim=1, 
                             drop=TRUE)

quarter_data_regions_ppp = quarter_data_ppp_jit[regions_owin]
```

```{r,fig.width=12, fig.height=12}
quarter_data_regions_ppp = quarter_data_ppp_jit[regions_owin]
quarter_data_regions_ppp.km <- rescale.ppp(quarter_data_regions_ppp, 50000, "km")

bw_scott <- bw.scott(quarter_data_regions_ppp.km)

plot(density(quarter_data_regions_ppp.km, 
             sigma=bw_scott/2, 
             edge=TRUE, 
             kernel="gaussian"), 
     main = "2022 Q4 - Battles")
```

## Violence against civilians

```{r}
Example <- "Violence against civilians"
my_2022_Q4 <- acled_2022_Q4 %>%
  filter(event_type == Example)
quarter_data <- as_Spatial(my_2022_Q4)
quarter_data_sp <- as(quarter_data, "SpatialPoints")
quarter_data_ppp <- as.ppp(st_coordinates(my_2022_Q4), st_bbox(my_2022_Q4))

quarter_data_ppp_jit <- rjitter(quarter_data_ppp, 
                             retry=TRUE, 
                             nsim=1, 
                             drop=TRUE)

quarter_data_regions_ppp = quarter_data_ppp_jit[regions_owin]
```

```{r,fig.width=12, fig.height=12}
quarter_data_regions_ppp = quarter_data_ppp_jit[regions_owin]
quarter_data_regions_ppp.km <- rescale.ppp(quarter_data_regions_ppp, 50000, "km")

bw_scott <- bw.scott(quarter_data_regions_ppp.km)

plot(density(quarter_data_regions_ppp.km, 
             sigma=bw_scott/2, 
             edge=TRUE, 
             kernel="gaussian"), 
     main = "2022 Q4 - Violence against civilians")
```
:::

### **1.8 Year 2023**

#### **Quarter 1**

```{r}
# Filter for the event type battles
acled_2023_Q1 <- acled_sf %>%
  filter(quarter == "2023 Q1")

# Get a list of unique quarters
events <- unique(acled_2023_Q1$event_type)

# Loop over each quarter and generate the plot
map(events, ~ {
  event_data <- acled_2023_Q1 %>% filter(event_type == .x)
  plot_event_by_quarter(event_data, .x)
})
```

::: panel-tabset
## Explosions/Remote violence

```{r}
Example <- "Explosions/Remote violence"
my_2023_Q1 <- acled_2023_Q1 %>%
  filter(event_type == Example)
quarter_data <- as_Spatial(my_2023_Q1)
quarter_data_sp <- as(quarter_data, "SpatialPoints")
quarter_data_ppp <- as.ppp(st_coordinates(my_2023_Q1), st_bbox(my_2023_Q1))

quarter_data_ppp_jit <- rjitter(quarter_data_ppp, 
                             retry=TRUE, 
                             nsim=1, 
                             drop=TRUE)

quarter_data_regions_ppp = quarter_data_ppp_jit[regions_owin]
```

```{r,fig.width=12, fig.height=12}
quarter_data_regions_ppp = quarter_data_ppp_jit[regions_owin]
quarter_data_regions_ppp.km <- rescale.ppp(quarter_data_regions_ppp, 50000, "km")

bw_scott <- bw.scott(quarter_data_regions_ppp.km)

plot(density(quarter_data_regions_ppp.km, 
             sigma=bw_scott/2, 
             edge=TRUE, 
             kernel="gaussian"), 
     main = "2023 Q1 - Explosion/Remote violence")
```

## Strategic developments

```{r}
Example <- "Strategic developments"
my_2023_Q1 <- acled_2023_Q1 %>%
  filter(event_type == Example)
quarter_data <- as_Spatial(my_2023_Q1)
quarter_data_sp <- as(quarter_data, "SpatialPoints")
quarter_data_ppp <- as.ppp(st_coordinates(my_2023_Q1), st_bbox(my_2023_Q1))

quarter_data_ppp_jit <- rjitter(quarter_data_ppp, 
                             retry=TRUE, 
                             nsim=1, 
                             drop=TRUE)

quarter_data_regions_ppp = quarter_data_ppp_jit[regions_owin]
```

```{r,fig.width=12, fig.height=12}
quarter_data_regions_ppp = quarter_data_ppp_jit[regions_owin]
quarter_data_regions_ppp.km <- rescale.ppp(quarter_data_regions_ppp, 50000, "km")

bw_scott <- bw.scott(quarter_data_regions_ppp.km)

plot(density(quarter_data_regions_ppp.km, 
             sigma=bw_scott/2, 
             edge=TRUE, 
             kernel="gaussian"), 
     main = "2023 Q1 - Strategic developments")
```

## Battles

```{r}
Example <- "Battles"
my_2023_Q1 <- acled_2023_Q1 %>%
  filter(event_type == Example)
quarter_data <- as_Spatial(my_2023_Q1)
quarter_data_sp <- as(quarter_data, "SpatialPoints")
quarter_data_ppp <- as.ppp(st_coordinates(my_2023_Q1), st_bbox(my_2023_Q1))

quarter_data_ppp_jit <- rjitter(quarter_data_ppp, 
                             retry=TRUE, 
                             nsim=1, 
                             drop=TRUE)

quarter_data_regions_ppp = quarter_data_ppp_jit[regions_owin]
```

```{r,fig.width=12, fig.height=12}
quarter_data_regions_ppp = quarter_data_ppp_jit[regions_owin]
quarter_data_regions_ppp.km <- rescale.ppp(quarter_data_regions_ppp, 50000, "km")

bw_scott <- bw.scott(quarter_data_regions_ppp.km)

plot(density(quarter_data_regions_ppp.km, 
             sigma=bw_scott/2, 
             edge=TRUE, 
             kernel="gaussian"), 
     main = "2023 Q1 - Battles")
```

## Violence against civilians

```{r}
Example <- "Violence against civilians"
my_2023_Q1 <- acled_2023_Q1 %>%
  filter(event_type == Example)
quarter_data <- as_Spatial(my_2023_Q1)
quarter_data_sp <- as(quarter_data, "SpatialPoints")
quarter_data_ppp <- as.ppp(st_coordinates(my_2023_Q1), st_bbox(my_2023_Q1))

quarter_data_ppp_jit <- rjitter(quarter_data_ppp, 
                             retry=TRUE, 
                             nsim=1, 
                             drop=TRUE)

quarter_data_regions_ppp = quarter_data_ppp_jit[regions_owin]
```

```{r,fig.width=12, fig.height=12}
quarter_data_regions_ppp = quarter_data_ppp_jit[regions_owin]
quarter_data_regions_ppp.km <- rescale.ppp(quarter_data_regions_ppp, 50000, "km")

bw_scott <- bw.scott(quarter_data_regions_ppp.km)

plot(density(quarter_data_regions_ppp.km, 
             sigma=bw_scott/2, 
             edge=TRUE, 
             kernel="gaussian"), 
     main = "2023 Q1 -Violence against civilians")
```
:::

#### **Quarter 2**

```{r}
# Filter for the event type battles
acled_2023_Q2 <- acled_sf %>%
  filter(quarter == "2023 Q2")

# Get a list of unique quarters
events <- unique(acled_2023_Q2$event_type)

# Loop over each quarter and generate the plot
map(events, ~ {
  event_data <- acled_2023_Q2 %>% filter(event_type == .x)
  plot_event_by_quarter(event_data, .x)
})
```

::: panel-tabset
## Explosions/Remote violence

```{r}
Example <- "Explosions/Remote violence"
my_2023_Q2 <- acled_2023_Q2 %>%
  filter(event_type == Example)
quarter_data <- as_Spatial(my_2023_Q2)
quarter_data_sp <- as(quarter_data, "SpatialPoints")
quarter_data_ppp <- as.ppp(st_coordinates(my_2023_Q2), st_bbox(my_2023_Q2))

quarter_data_ppp_jit <- rjitter(quarter_data_ppp, 
                             retry=TRUE, 
                             nsim=1, 
                             drop=TRUE)

quarter_data_regions_ppp = quarter_data_ppp_jit[regions_owin]
```

```{r,fig.width=12, fig.height=12}
quarter_data_regions_ppp = quarter_data_ppp_jit[regions_owin]
quarter_data_regions_ppp.km <- rescale.ppp(quarter_data_regions_ppp, 50000, "km")

bw_scott <- bw.scott(quarter_data_regions_ppp.km)

plot(density(quarter_data_regions_ppp.km, 
             sigma=bw_scott/2, 
             edge=TRUE, 
             kernel="gaussian"), 
     main = "2023 Q2 - Explosion/Remote violence")
```

## Strategic developments

```{r}
Example <- "Strategic developments"
my_2023_Q2 <- acled_2023_Q2 %>%
  filter(event_type == Example)
quarter_data <- as_Spatial(my_2023_Q2)
quarter_data_sp <- as(quarter_data, "SpatialPoints")
quarter_data_ppp <- as.ppp(st_coordinates(my_2023_Q2), st_bbox(my_2023_Q2))

quarter_data_ppp_jit <- rjitter(quarter_data_ppp, 
                             retry=TRUE, 
                             nsim=1, 
                             drop=TRUE)

quarter_data_regions_ppp = quarter_data_ppp_jit[regions_owin]
```

```{r,fig.width=12, fig.height=12}
quarter_data_regions_ppp = quarter_data_ppp_jit[regions_owin]
quarter_data_regions_ppp.km <- rescale.ppp(quarter_data_regions_ppp, 50000, "km")

bw_scott <- bw.scott(quarter_data_regions_ppp.km)

plot(density(quarter_data_regions_ppp.km, 
             sigma=bw_scott/2, 
             edge=TRUE, 
             kernel="gaussian"), 
     main = "2023 Q2 - Strategic developments")
```

## Battles

```{r}
Example <- "Battles"
my_2023_Q2 <- acled_2023_Q2 %>%
  filter(event_type == Example)
quarter_data <- as_Spatial(my_2023_Q2)
quarter_data_sp <- as(quarter_data, "SpatialPoints")
quarter_data_ppp <- as.ppp(st_coordinates(my_2023_Q2), st_bbox(my_2023_Q2))

quarter_data_ppp_jit <- rjitter(quarter_data_ppp, 
                             retry=TRUE, 
                             nsim=1, 
                             drop=TRUE)

quarter_data_regions_ppp = quarter_data_ppp_jit[regions_owin]
```

```{r,fig.width=12, fig.height=12}
quarter_data_regions_ppp = quarter_data_ppp_jit[regions_owin]
quarter_data_regions_ppp.km <- rescale.ppp(quarter_data_regions_ppp, 50000, "km")

bw_scott <- bw.scott(quarter_data_regions_ppp.km)

plot(density(quarter_data_regions_ppp.km, 
             sigma=bw_scott/2, 
             edge=TRUE, 
             kernel="gaussian"), 
     main = "2023 Q2 - Battles")
```

## Violence against civilians

```{r}
Example <- "Violence against civilians"
my_2023_Q2 <- acled_2023_Q2 %>%
  filter(event_type == Example)
quarter_data <- as_Spatial(my_2023_Q2)
quarter_data_sp <- as(quarter_data, "SpatialPoints")
quarter_data_ppp <- as.ppp(st_coordinates(my_2023_Q2), st_bbox(my_2023_Q2))

quarter_data_ppp_jit <- rjitter(quarter_data_ppp, 
                             retry=TRUE, 
                             nsim=1, 
                             drop=TRUE)

quarter_data_regions_ppp = quarter_data_ppp_jit[regions_owin]
```

```{r,fig.width=12, fig.height=12}
quarter_data_regions_ppp = quarter_data_ppp_jit[regions_owin]
quarter_data_regions_ppp.km <- rescale.ppp(quarter_data_regions_ppp, 50000, "km")

bw_scott <- bw.scott(quarter_data_regions_ppp.km)

plot(density(quarter_data_regions_ppp.km, 
             sigma=bw_scott/2, 
             edge=TRUE, 
             kernel="gaussian"), 
     main = "2023 Q2 - Violence against civilians")
```
:::

#### **Quarter 3**

```{r}
# Filter for the event type battles
acled_2023_Q3 <- acled_sf %>%
  filter(quarter == "2023 Q3")

# Get a list of unique quarters
events <- unique(acled_2023_Q3$event_type)

# Loop over each quarter and generate the plot
map(events, ~ {
  event_data <- acled_2023_Q3 %>% filter(event_type == .x)
  plot_event_by_quarter(event_data, .x)
})
```

::: panel-tabset
## Explosions/Remote violence

```{r}
Example <- "Explosions/Remote violence"
my_2023_Q3 <- acled_2023_Q3 %>%
  filter(event_type == Example)
quarter_data <- as_Spatial(my_2023_Q3)
quarter_data_sp <- as(quarter_data, "SpatialPoints")
quarter_data_ppp <- as.ppp(st_coordinates(my_2023_Q3), st_bbox(my_2023_Q3))

quarter_data_ppp_jit <- rjitter(quarter_data_ppp, 
                             retry=TRUE, 
                             nsim=1, 
                             drop=TRUE)

quarter_data_regions_ppp = quarter_data_ppp_jit[regions_owin]
```

```{r,fig.width=12, fig.height=12}
quarter_data_regions_ppp = quarter_data_ppp_jit[regions_owin]
quarter_data_regions_ppp.km <- rescale.ppp(quarter_data_regions_ppp, 50000, "km")

bw_scott <- bw.scott(quarter_data_regions_ppp.km)

plot(density(quarter_data_regions_ppp.km, 
             sigma=bw_scott/2, 
             edge=TRUE, 
             kernel="gaussian"), 
     main = "2023 Q3 - Explosion/Remote violence")
```

## Strategic developments

```{r}
Example <- "Strategic developments"
my_2023_Q3 <- acled_2023_Q3 %>%
  filter(event_type == Example)
quarter_data <- as_Spatial(my_2023_Q3)
quarter_data_sp <- as(quarter_data, "SpatialPoints")
quarter_data_ppp <- as.ppp(st_coordinates(my_2023_Q3), st_bbox(my_2023_Q3))

quarter_data_ppp_jit <- rjitter(quarter_data_ppp, 
                             retry=TRUE, 
                             nsim=1, 
                             drop=TRUE)

quarter_data_regions_ppp = quarter_data_ppp_jit[regions_owin]
```

```{r,fig.width=12, fig.height=12}
quarter_data_regions_ppp = quarter_data_ppp_jit[regions_owin]
quarter_data_regions_ppp.km <- rescale.ppp(quarter_data_regions_ppp, 50000, "km")

bw_scott <- bw.scott(quarter_data_regions_ppp.km)

plot(density(quarter_data_regions_ppp.km, 
             sigma=bw_scott/2, 
             edge=TRUE, 
             kernel="gaussian"), 
     main = "2023 Q3 - Strategic developments")
```

## Battles

```{r}
Example <- "Battles"
my_2023_Q3 <- acled_2023_Q3 %>%
  filter(event_type == Example)
quarter_data <- as_Spatial(my_2023_Q3)
quarter_data_sp <- as(quarter_data, "SpatialPoints")
quarter_data_ppp <- as.ppp(st_coordinates(my_2023_Q3), st_bbox(my_2023_Q3))

quarter_data_ppp_jit <- rjitter(quarter_data_ppp, 
                             retry=TRUE, 
                             nsim=1, 
                             drop=TRUE)

quarter_data_regions_ppp = quarter_data_ppp_jit[regions_owin]
```

```{r,fig.width=12, fig.height=12}
quarter_data_regions_ppp = quarter_data_ppp_jit[regions_owin]
quarter_data_regions_ppp.km <- rescale.ppp(quarter_data_regions_ppp, 50000, "km")

bw_scott <- bw.scott(quarter_data_regions_ppp.km)

plot(density(quarter_data_regions_ppp.km, 
             sigma=bw_scott/2, 
             edge=TRUE, 
             kernel="gaussian"), 
     main = "2023 Q3 - Battles")
```

## Violence against civilians

```{r}
Example <- "Violence against civilians"
my_2023_Q3 <- acled_2023_Q3 %>%
  filter(event_type == Example)
quarter_data <- as_Spatial(my_2023_Q3)
quarter_data_sp <- as(quarter_data, "SpatialPoints")
quarter_data_ppp <- as.ppp(st_coordinates(my_2023_Q3), st_bbox(my_2023_Q3))

quarter_data_ppp_jit <- rjitter(quarter_data_ppp, 
                             retry=TRUE, 
                             nsim=1, 
                             drop=TRUE)

quarter_data_regions_ppp = quarter_data_ppp_jit[regions_owin]
```

```{r,fig.width=12, fig.height=12}
quarter_data_regions_ppp = quarter_data_ppp_jit[regions_owin]
quarter_data_regions_ppp.km <- rescale.ppp(quarter_data_regions_ppp, 50000, "km")

bw_scott <- bw.scott(quarter_data_regions_ppp.km)

plot(density(quarter_data_regions_ppp.km, 
             sigma=bw_scott/2, 
             edge=TRUE, 
             kernel="gaussian"), 
     main = "2023 Q3 - Violence against civilians")
```
:::

#### **Quarter 4**

```{r}
# Filter for the event type battles
acled_2023_Q4 <- acled_sf %>%
  filter(quarter == "2023 Q4")

# Get a list of unique quarters
events <- unique(acled_2023_Q4$event_type)

# Loop over each quarter and generate the plot
map(events, ~ {
  event_data <- acled_2023_Q4 %>% filter(event_type == .x)
  plot_event_by_quarter(event_data, .x)
})
```

::: panel-tabset
## Explosions/Remote violence

```{r}
Example <- "Explosions/Remote violence"
my_2023_Q4 <- acled_2023_Q4 %>%
  filter(event_type == Example)
quarter_data <- as_Spatial(my_2023_Q4)
quarter_data_sp <- as(quarter_data, "SpatialPoints")
quarter_data_ppp <- as.ppp(st_coordinates(my_2023_Q4), st_bbox(my_2023_Q4))

quarter_data_ppp_jit <- rjitter(quarter_data_ppp, 
                             retry=TRUE, 
                             nsim=1, 
                             drop=TRUE)

quarter_data_regions_ppp = quarter_data_ppp_jit[regions_owin]
```

```{r,fig.width=12, fig.height=12}
quarter_data_regions_ppp = quarter_data_ppp_jit[regions_owin]
quarter_data_regions_ppp.km <- rescale.ppp(quarter_data_regions_ppp, 50000, "km")

bw_scott <- bw.scott(quarter_data_regions_ppp.km)

plot(density(quarter_data_regions_ppp.km, 
             sigma=bw_scott/2, 
             edge=TRUE, 
             kernel="gaussian"), 
     main = "2023 Q4 - Explosion/Remote violence")
```

## Strategic developments

```{r}
Example <- "Strategic developments"
my_2023_Q4 <- acled_2023_Q4 %>%
  filter(event_type == Example)
quarter_data <- as_Spatial(my_2023_Q4)
quarter_data_sp <- as(quarter_data, "SpatialPoints")
quarter_data_ppp <- as.ppp(st_coordinates(my_2023_Q4), st_bbox(my_2023_Q4))

quarter_data_ppp_jit <- rjitter(quarter_data_ppp, 
                             retry=TRUE, 
                             nsim=1, 
                             drop=TRUE)

quarter_data_regions_ppp = quarter_data_ppp_jit[regions_owin]
```

```{r,fig.width=12, fig.height=12}
quarter_data_regions_ppp = quarter_data_ppp_jit[regions_owin]
quarter_data_regions_ppp.km <- rescale.ppp(quarter_data_regions_ppp, 50000, "km")

bw_scott <- bw.scott(quarter_data_regions_ppp.km)

plot(density(quarter_data_regions_ppp.km, 
             sigma=bw_scott/2, 
             edge=TRUE, 
             kernel="gaussian"), 
     main = "2023 Q4 - Strategic developments")
```

## Battles

```{r}
Example <- "Battles"
my_2023_Q4 <- acled_2023_Q4 %>%
  filter(event_type == Example)
quarter_data <- as_Spatial(my_2023_Q4)
quarter_data_sp <- as(quarter_data, "SpatialPoints")
quarter_data_ppp <- as.ppp(st_coordinates(my_2023_Q4), st_bbox(my_2023_Q4))

quarter_data_ppp_jit <- rjitter(quarter_data_ppp, 
                             retry=TRUE, 
                             nsim=1, 
                             drop=TRUE)

quarter_data_regions_ppp = quarter_data_ppp_jit[regions_owin]
```

```{r,fig.width=12, fig.height=12}
quarter_data_regions_ppp = quarter_data_ppp_jit[regions_owin]
quarter_data_regions_ppp.km <- rescale.ppp(quarter_data_regions_ppp, 50000, "km")

bw_scott <- bw.scott(quarter_data_regions_ppp.km)

plot(density(quarter_data_regions_ppp.km, 
             sigma=bw_scott/2, 
             edge=TRUE, 
             kernel="gaussian"), 
     main = "2023 Q4 - Battles")
```

## Violence against civilians

```{r}
Example <- "Violence against civilians"
my_2023_Q4 <- acled_2023_Q4 %>%
  filter(event_type == Example)
quarter_data <- as_Spatial(my_2023_Q4)
quarter_data_sp <- as(quarter_data, "SpatialPoints")
quarter_data_ppp <- as.ppp(st_coordinates(my_2023_Q4), st_bbox(my_2023_Q4))

quarter_data_ppp_jit <- rjitter(quarter_data_ppp, 
                             retry=TRUE, 
                             nsim=1, 
                             drop=TRUE)

quarter_data_regions_ppp = quarter_data_ppp_jit[regions_owin]
```

```{r,fig.width=12, fig.height=12}
quarter_data_regions_ppp = quarter_data_ppp_jit[regions_owin]
quarter_data_regions_ppp.km <- rescale.ppp(quarter_data_regions_ppp, 50000, "km")

bw_scott <- bw.scott(quarter_data_regions_ppp.km)

plot(density(quarter_data_regions_ppp.km, 
             sigma=bw_scott/2, 
             edge=TRUE, 
             kernel="gaussian"), 
     main = "2023 Q4 - Violence against civilians")
```
:::

### **1.9 Year 2024**

#### **Quarter 1**

```{r}
# Filter for the event type battles
acled_2024_Q1 <- acled_sf %>%
  filter(quarter == "2024 Q1")

# Get a list of unique quarters
events <- unique(acled_2024_Q1$event_type)

# Loop over each quarter and generate the plot
map(events, ~ {
  event_data <- acled_2024_Q1 %>% filter(event_type == .x)
  plot_event_by_quarter(event_data, .x)
})
```

::: panel-tabset
## Explosions/Remote violence

```{r}
Example <- "Explosions/Remote violence"
my_2024_Q1 <- acled_2024_Q1 %>%
  filter(event_type == Example)
quarter_data <- as_Spatial(my_2024_Q1)
quarter_data_sp <- as(quarter_data, "SpatialPoints")
quarter_data_ppp <- as.ppp(st_coordinates(my_2024_Q1), st_bbox(my_2024_Q1))

quarter_data_ppp_jit <- rjitter(quarter_data_ppp, 
                             retry=TRUE, 
                             nsim=1, 
                             drop=TRUE)

quarter_data_regions_ppp = quarter_data_ppp_jit[regions_owin]
```

```{r,fig.width=12, fig.height=12}
quarter_data_regions_ppp = quarter_data_ppp_jit[regions_owin]
quarter_data_regions_ppp.km <- rescale.ppp(quarter_data_regions_ppp, 50000, "km")

bw_scott <- bw.scott(quarter_data_regions_ppp.km)

plot(density(quarter_data_regions_ppp.km, 
             sigma=bw_scott/2, 
             edge=TRUE, 
             kernel="gaussian"), 
     main = "2024 Q1 - Explosion/Remote violence")
```

## Strategic developments

```{r}
Example <- "Strategic developments"
my_2024_Q1 <- acled_2024_Q1 %>%
  filter(event_type == Example)
quarter_data <- as_Spatial(my_2024_Q1)
quarter_data_sp <- as(quarter_data, "SpatialPoints")
quarter_data_ppp <- as.ppp(st_coordinates(my_2024_Q1), st_bbox(my_2024_Q1))

quarter_data_ppp_jit <- rjitter(quarter_data_ppp, 
                             retry=TRUE, 
                             nsim=1, 
                             drop=TRUE)

quarter_data_regions_ppp = quarter_data_ppp_jit[regions_owin]
```

```{r,fig.width=12, fig.height=12}
quarter_data_regions_ppp = quarter_data_ppp_jit[regions_owin]
quarter_data_regions_ppp.km <- rescale.ppp(quarter_data_regions_ppp, 50000, "km")

bw_scott <- bw.scott(quarter_data_regions_ppp.km)

plot(density(quarter_data_regions_ppp.km, 
             sigma=bw_scott/2, 
             edge=TRUE, 
             kernel="gaussian"), 
     main = "2024 Q1 - Strategic developments")
```

## Battles

```{r}
Example <- "Battles"
my_2024_Q1 <- acled_2024_Q1 %>%
  filter(event_type == Example)
quarter_data <- as_Spatial(my_2024_Q1)
quarter_data_sp <- as(quarter_data, "SpatialPoints")
quarter_data_ppp <- as.ppp(st_coordinates(my_2024_Q1), st_bbox(my_2024_Q1))

quarter_data_ppp_jit <- rjitter(quarter_data_ppp, 
                             retry=TRUE, 
                             nsim=1, 
                             drop=TRUE)

quarter_data_regions_ppp = quarter_data_ppp_jit[regions_owin]
```

```{r,fig.width=12, fig.height=12}
quarter_data_regions_ppp = quarter_data_ppp_jit[regions_owin]
quarter_data_regions_ppp.km <- rescale.ppp(quarter_data_regions_ppp, 50000, "km")

bw_scott <- bw.scott(quarter_data_regions_ppp.km)

plot(density(quarter_data_regions_ppp.km, 
             sigma=bw_scott/2, 
             edge=TRUE, 
             kernel="gaussian"), 
     main = "2024 Q1 - Battles")
```

## Violence against civilians

```{r}
Example <- "Violence against civilians"
my_2024_Q1 <- acled_2024_Q1 %>%
  filter(event_type == Example)
quarter_data <- as_Spatial(my_2024_Q1)
quarter_data_sp <- as(quarter_data, "SpatialPoints")
quarter_data_ppp <- as.ppp(st_coordinates(my_2024_Q1), st_bbox(my_2024_Q1))

quarter_data_ppp_jit <- rjitter(quarter_data_ppp, 
                             retry=TRUE, 
                             nsim=1, 
                             drop=TRUE)

quarter_data_regions_ppp = quarter_data_ppp_jit[regions_owin]
```

```{r,fig.width=12, fig.height=12}
quarter_data_regions_ppp = quarter_data_ppp_jit[regions_owin]
quarter_data_regions_ppp.km <- rescale.ppp(quarter_data_regions_ppp, 50000, "km")

bw_scott <- bw.scott(quarter_data_regions_ppp.km)

plot(density(quarter_data_regions_ppp.km, 
             sigma=bw_scott/2, 
             edge=TRUE, 
             kernel="gaussian"), 
     main = "2024 Q1 -Violence against civilians")
```
:::

#### **Quarter 2**

```{r}
# Filter for the event type battles
acled_2024_Q2 <- acled_sf %>%
  filter(quarter == "2024 Q2")

# Get a list of unique quarters
events <- unique(acled_2024_Q2$event_type)

# Loop over each quarter and generate the plot
map(events, ~ {
  event_data <- acled_2024_Q2 %>% filter(event_type == .x)
  plot_event_by_quarter(event_data, .x)
})
```

::: panel-tabset
## Explosions/Remote violence

```{r}
Example <- "Explosions/Remote violence"
my_2024_Q2 <- acled_2024_Q2 %>%
  filter(event_type == Example)
quarter_data <- as_Spatial(my_2024_Q2)
quarter_data_sp <- as(quarter_data, "SpatialPoints")
quarter_data_ppp <- as.ppp(st_coordinates(my_2024_Q2), st_bbox(my_2024_Q2))

quarter_data_ppp_jit <- rjitter(quarter_data_ppp, 
                             retry=TRUE, 
                             nsim=1, 
                             drop=TRUE)

quarter_data_regions_ppp = quarter_data_ppp_jit[regions_owin]
```

```{r,fig.width=12, fig.height=12}
quarter_data_regions_ppp = quarter_data_ppp_jit[regions_owin]
quarter_data_regions_ppp.km <- rescale.ppp(quarter_data_regions_ppp, 50000, "km")

bw_scott <- bw.scott(quarter_data_regions_ppp.km)

plot(density(quarter_data_regions_ppp.km, 
             sigma=bw_scott/2, 
             edge=TRUE, 
             kernel="gaussian"), 
     main = "2024 Q2 - Explosion/Remote violence")
```

## Strategic developments

```{r}
Example <- "Strategic developments"
my_2024_Q2 <- acled_2024_Q2 %>%
  filter(event_type == Example)
quarter_data <- as_Spatial(my_2024_Q2)
quarter_data_sp <- as(quarter_data, "SpatialPoints")
quarter_data_ppp <- as.ppp(st_coordinates(my_2024_Q2), st_bbox(my_2024_Q2))

quarter_data_ppp_jit <- rjitter(quarter_data_ppp, 
                             retry=TRUE, 
                             nsim=1, 
                             drop=TRUE)

quarter_data_regions_ppp = quarter_data_ppp_jit[regions_owin]
```

```{r,fig.width=12, fig.height=12}
quarter_data_regions_ppp = quarter_data_ppp_jit[regions_owin]
quarter_data_regions_ppp.km <- rescale.ppp(quarter_data_regions_ppp, 50000, "km")

bw_scott <- bw.scott(quarter_data_regions_ppp.km)

plot(density(quarter_data_regions_ppp.km, 
             sigma=bw_scott/2, 
             edge=TRUE, 
             kernel="gaussian"), 
     main = "2024 Q2 - Strategic developments")
```

## Battles

```{r}
Example <- "Battles"
my_2024_Q2 <- acled_2024_Q2 %>%
  filter(event_type == Example)
quarter_data <- as_Spatial(my_2024_Q2)
quarter_data_sp <- as(quarter_data, "SpatialPoints")
quarter_data_ppp <- as.ppp(st_coordinates(my_2024_Q2), st_bbox(my_2024_Q2))

quarter_data_ppp_jit <- rjitter(quarter_data_ppp, 
                             retry=TRUE, 
                             nsim=1, 
                             drop=TRUE)

quarter_data_regions_ppp = quarter_data_ppp_jit[regions_owin]
```

```{r,fig.width=12, fig.height=12}
quarter_data_regions_ppp = quarter_data_ppp_jit[regions_owin]
quarter_data_regions_ppp.km <- rescale.ppp(quarter_data_regions_ppp, 50000, "km")

bw_scott <- bw.scott(quarter_data_regions_ppp.km)

plot(density(quarter_data_regions_ppp.km, 
             sigma=bw_scott/2, 
             edge=TRUE, 
             kernel="gaussian"), 
     main = "2024 Q2 - Battles")
```

## Violence against civilians

```{r}
Example <- "Violence against civilians"
my_2024_Q2 <- acled_2024_Q2 %>%
  filter(event_type == Example)
quarter_data <- as_Spatial(my_2024_Q2)
quarter_data_sp <- as(quarter_data, "SpatialPoints")
quarter_data_ppp <- as.ppp(st_coordinates(my_2024_Q2), st_bbox(my_2024_Q2))

quarter_data_ppp_jit <- rjitter(quarter_data_ppp, 
                             retry=TRUE, 
                             nsim=1, 
                             drop=TRUE)

quarter_data_regions_ppp = quarter_data_ppp_jit[regions_owin]
```

```{r,fig.width=12, fig.height=12}
quarter_data_regions_ppp = quarter_data_ppp_jit[regions_owin]
quarter_data_regions_ppp.km <- rescale.ppp(quarter_data_regions_ppp, 50000, "km")

bw_scott <- bw.scott(quarter_data_regions_ppp.km)

plot(density(quarter_data_regions_ppp.km, 
             sigma=bw_scott/2, 
             edge=TRUE, 
             kernel="gaussian"), 
     main = "2024 Q2 - Violence against civilians")
```
:::
